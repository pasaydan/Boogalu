[{"F:\\Toms\\Business-work\\Boogalu\\src\\index.js":"1","F:\\Toms\\Business-work\\Boogalu\\src\\reportWebVitals.js":"2","F:\\Toms\\Business-work\\Boogalu\\src\\App.js":"3","F:\\Toms\\Business-work\\Boogalu\\src\\Providers\\StateProvider.js":"4","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Footer\\index.js":"5","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Login\\Login.js":"6","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Profile\\Profile.js":"7","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\EditProfile\\EditProfile.js":"8","F:\\Toms\\Business-work\\Boogalu\\src\\Services\\LocalstorageCache.js":"9","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Navigation\\index.js":"10","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Splash\\index.js":"11","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Homepage\\index.js":"12","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Subscription\\index.js":"13","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Signup\\index.js":"14","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Upcoming\\index.js":"15","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Competitions\\index.js":"16","F:\\Toms\\Business-work\\Boogalu\\src\\Reducers\\index.js":"17","F:\\Toms\\Business-work\\Boogalu\\src\\Actions\\User\\index.js":"18","F:\\Toms\\Business-work\\Boogalu\\src\\Data\\LessonsCategory.js":"19","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Vedio\\Video.js":"20","F:\\Toms\\Business-work\\Boogalu\\src\\Data\\RegistrationStepData.js":"21","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\CompetitionsDetails\\index.js":"22","F:\\Toms\\Business-work\\Boogalu\\src\\Constants\\index.js":"23","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Contactus\\index.js":"24","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Admin\\Competition.js":"25","F:\\Toms\\Business-work\\Boogalu\\src\\Services\\User.service.js":"26","F:\\Toms\\Business-work\\Boogalu\\src\\Services\\Competition.service.js":"27","F:\\Toms\\Business-work\\Boogalu\\src\\Services\\EnrollCompetition.service.js":"28","F:\\Toms\\Business-work\\Boogalu\\src\\Services\\UploadedVideo.service.js":"29","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\VideoUploader\\index.js":"30","F:\\Toms\\Business-work\\Boogalu\\src\\Services\\Upload.service.js":"31","F:\\Toms\\Business-work\\Boogalu\\src\\Services\\Utils.js":"32","F:\\Toms\\Business-work\\Boogalu\\src\\Actions\\LoginFlow\\index.js":"33","F:\\Toms\\Business-work\\Boogalu\\src\\Actions\\Competition\\index.js":"34","F:\\Toms\\Business-work\\Boogalu\\src\\Services\\firebase.js":"35","F:\\Toms\\Business-work\\Boogalu\\src\\Database\\index.js":"36","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\EnrollCompetition\\index.js":"37"},{"size":737,"mtime":1610191707084,"results":"38","hashOfConfig":"39"},{"size":375,"mtime":1610191707092,"results":"40","hashOfConfig":"39"},{"size":3185,"mtime":1611725424876,"results":"41","hashOfConfig":"39"},{"size":1002,"mtime":1611725424904,"results":"42","hashOfConfig":"39"},{"size":4562,"mtime":1611768340593,"results":"43","hashOfConfig":"39"},{"size":13980,"mtime":1611725424894,"results":"44","hashOfConfig":"39"},{"size":8224,"mtime":1611725424895,"results":"45","hashOfConfig":"39"},{"size":13009,"mtime":1611725424890,"results":"46","hashOfConfig":"39"},{"size":251,"mtime":1610191707084,"results":"47","hashOfConfig":"39"},{"size":10576,"mtime":1611725424895,"results":"48","hashOfConfig":"39"},{"size":351,"mtime":1611462124467,"results":"49","hashOfConfig":"39"},{"size":4951,"mtime":1611725424892,"results":"50","hashOfConfig":"39"},{"size":1955,"mtime":1611599655941,"results":"51","hashOfConfig":"39"},{"size":29586,"mtime":1611725424898,"results":"52","hashOfConfig":"39"},{"size":1172,"mtime":1611468791321,"results":"53","hashOfConfig":"39"},{"size":2157,"mtime":1611725424884,"results":"54","hashOfConfig":"39"},{"size":918,"mtime":1611725424905,"results":"55","hashOfConfig":"39"},{"size":403,"mtime":1610191706906,"results":"56","hashOfConfig":"39"},{"size":12210,"mtime":1611462124486,"results":"57","hashOfConfig":"39"},{"size":634,"mtime":1611469409351,"results":"58","hashOfConfig":"39"},{"size":7647,"mtime":1610191706964,"results":"59","hashOfConfig":"39"},{"size":8829,"mtime":1611725424888,"results":"60","hashOfConfig":"39"},{"size":495,"mtime":1611725424900,"results":"61","hashOfConfig":"39"},{"size":2095,"mtime":1611674526188,"results":"62","hashOfConfig":"39"},{"size":7741,"mtime":1611725424881,"results":"63","hashOfConfig":"39"},{"size":1900,"mtime":1611725424908,"results":"64","hashOfConfig":"39"},{"size":3117,"mtime":1611725424905,"results":"65","hashOfConfig":"39"},{"size":3096,"mtime":1611725424906,"results":"66","hashOfConfig":"39"},{"size":1567,"mtime":1611725424908,"results":"67","hashOfConfig":"39"},{"size":6153,"mtime":1611725424898,"results":"68","hashOfConfig":"39"},{"size":3006,"mtime":1611725424906,"results":"69","hashOfConfig":"39"},{"size":1447,"mtime":1611725424909,"results":"70","hashOfConfig":"39"},{"size":320,"mtime":1611725424874,"results":"71","hashOfConfig":"39"},{"size":193,"mtime":1611725424866,"results":"72","hashOfConfig":"39"},{"size":1017,"mtime":1611725424909,"results":"73","hashOfConfig":"39"},{"size":142,"mtime":1611725424900,"results":"74","hashOfConfig":"39"},{"size":4211,"mtime":1611725424891,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"g3scqe",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"78"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"78"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"78"},"F:\\Toms\\Business-work\\Boogalu\\src\\index.js",[],["168","169"],"F:\\Toms\\Business-work\\Boogalu\\src\\reportWebVitals.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\App.js",["170"],"import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"./App.scss\"\r\nimport Login from \"./Components/Login/Login\";\r\nimport SplashScreen from './Components/Splash';\r\nimport Navigation from \"./Components/Navigation/index\";\r\nimport Homepage from \"./Components/Homepage\";\r\nimport Footer from \"./Components/Footer/index\";\r\nimport Signup from \"./Components/Signup\";\r\nimport Profile from \"./Components/Profile/Profile\";\r\nimport Upcoming from \"./Components/Upcoming\";\r\nimport Competitions from \"./Components/Competitions\";\r\nimport Competition from \"./Components/Admin/Competition\"\r\nimport Subscription from \"./Components/Subscription\";\r\nimport EditProfile from \"./Components/EditProfile/EditProfile\";\r\nimport ContactUs from \"./Components/Contactus\";\r\nimport VideoUploader from \"./Components/VideoUploader\";\r\n\r\nfunction App() {\r\n  const [isSplashVisible, toggleSplash] = useState(true);\r\n  const [transitionOpacityClass, toggleTransition] = useState('');\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      toggleSplash(false);\r\n    }, 2500);\r\n\r\n    setTimeout(() => {\r\n      toggleTransition('visible-transition');\r\n    }, 2800);\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        {\r\n          isSplashVisible ?\r\n            <SplashScreen />\r\n            :\r\n            <div className={`main-content-wrapper ${transitionOpacityClass}`}>\r\n              <Navigation />\r\n              <Switch>\r\n                <Route exact path=\"/contactus\">\r\n                  <ContactUs />\r\n                </Route>\r\n                <Route exact path=\"/login:plan\">\r\n                  <Login />\r\n                </Route>\r\n                <Route exact path=\"/login\">\r\n                  <Login />\r\n                </Route>\r\n                <Route exact path=\"/profile/edit\">\r\n                  <EditProfile />\r\n                </Route>\r\n                <Route exact path=\"/register:plan\">\r\n                  <Signup />\r\n                </Route>\r\n                <Route exact path=\"/register\">\r\n                  <Signup />\r\n                </Route>\r\n                <Route exact path=\"/lessons\">\r\n                  <Upcoming />\r\n                </Route>\r\n                <Route exact path=\"/competitions\">\r\n                  <Competitions />\r\n                </Route>\r\n                <Route exact path=\"/subscription\">\r\n                  <Subscription />\r\n                </Route>\r\n                <Route exact path=\"/profile\">\r\n                  <Profile />\r\n                </Route>\r\n                <Route exact path=\"/home\">\r\n                  <Homepage />\r\n                </Route>\r\n                <Route exact path=\"/upload-video\">\r\n                  <VideoUploader />\r\n                </Route>\r\n                <Route exact path=\"/\">\r\n                  <Homepage />\r\n                </Route>\r\n\r\n                {/* admin routes */}\r\n                <Route exact path=\"/admin/competition\">\r\n                  <Competition />\r\n                </Route>\r\n              </Switch>\r\n              <Footer />\r\n            </div>\r\n        }\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\nexport default App;","F:\\Toms\\Business-work\\Boogalu\\src\\Providers\\StateProvider.js",["171"],"import React, { createContext, useReducer, useContext } from 'react';\r\nimport storeReducer from '../Reducers';\r\nimport LocalstorageCache from '../Services/LocalstorageCache';\r\n\r\nconst loggedInUserState = {\r\n  name: '',\r\n  username: '',\r\n  email: '',\r\n  phone: '',\r\n  dob: '2017-05-24',\r\n  gender: '',\r\n  country: '',\r\n  state: '',\r\n  password: '',\r\n  confirmPassword: '',\r\n  bio: '',\r\n  tnc: true,\r\n  profileImage: '',\r\n  source: ''\r\n}\r\n\r\nconst initialState = localStorage.getItem(\"Choreoculture\") ? JSON.parse(localStorage.getItem(\"Choreoculture\"))\r\n  : {\r\n    loggedInUser: {},\r\n    currentLoginFlow: null\r\n  };\r\nconst store = createContext(initialState);\r\nconst { Provider } = store;\r\n\r\nconst useStoreConsumer = () => useContext(store);\r\n\r\nconst StateProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(LocalstorageCache(storeReducer), initialState);\r\n\r\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\r\n};\r\n\r\nexport { store, StateProvider, useStoreConsumer }","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Footer\\index.js",["172","173","174","175","176","177","178"],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Login\\Login.js",["179","180","181","182","183","184","185","186","187"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStoreConsumer } from '../../Providers/StateProvider';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport ArrowRightSharpIcon from '@material-ui/icons/ArrowRightSharp';\r\nimport bgImg from '../../Images/bg1.svg';\r\nimport { loginUser, signupUser } from '../../Actions/User/index';\r\nimport { getUserByEmail, getUserByPhone } from \"../../Services/User.service\";\r\nimport * as $ from 'jquery';\r\n\r\nexport default function Login() {\r\n    const { state, dispatch } = useStoreConsumer();\r\n    const history = useHistory();\r\n    const [loginCred, setloginCred] = useState({ username: \"\", password: \"\", showPassWord: false })\r\n    const [LoginError, setLoginError] = useState(null);\r\n    const [thirdPartyResponse, setThirdPartyResponse] = useState({ isLogginSuccess: false, data: null, source: '' })\r\n\r\n    useEffect(() => {\r\n        if (thirdPartyResponse.source === 'Facebook') signinUser('', 'Facebook');\r\n        if (thirdPartyResponse.source === 'Google') signinUser('', 'Google');\r\n    }, [thirdPartyResponse]);\r\n\r\n    useEffect(() => {\r\n        $('html,body').animate({\r\n            scrollTop: 0\r\n        }, 500);\r\n    }, [])\r\n\r\n    const setLoginResponseToServer = () => {\r\n        // notify server that user is loggedin\r\n        console.log('Save loggin user to db')\r\n\r\n    }\r\n    const successResponseGoogle = function (response) {\r\n        console.log(response);\r\n        let loginResponse = {\r\n            data: {\r\n                name: response.profileObj.name,\r\n                email: response.profileObj.email,\r\n                token: response.googleId,\r\n                profileImage: response.profileObj.imageUrl,\r\n            },\r\n            source: 'Google'\r\n        }\r\n        setThirdPartyResponse(loginResponse);\r\n    }\r\n\r\n    const failureResponseGoogle = function (response) {\r\n        if (response.error != \"idpiframe_initialization_failed\") {\r\n            setLoginError('Sorry there was a problem with your google login request.')\r\n        }\r\n    }\r\n\r\n    const responseFacebook = (response) => {\r\n        console.log(response);\r\n        if (response && response.userID) {\r\n            let loginResponse = {\r\n                isLogginSuccess: true,\r\n                data: response,\r\n                source: 'Facebook'\r\n            }\r\n            setThirdPartyResponse(loginResponse);\r\n        } else {\r\n            setLoginError('Sorry there was a problem with your facebook login request.')\r\n            console.log(\"facebook login error\", response);\r\n        }\r\n    }\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setLoginError(null);\r\n        setloginCred({ ...loginCred, [prop]: event.target.value });\r\n    };\r\n\r\n    const showPassword = () => {\r\n        setloginCred({ ...loginCred, showPassWord: (loginCred.showPassWord ? false : true) })\r\n    }\r\n\r\n    const checkForUserPhone = (phone) => {\r\n        return new Promise((res, rej) => {\r\n            getUserByPhone(phone).subscribe((data) => {\r\n                if (data && data.length) res(data);\r\n                else res(null);\r\n            })\r\n        })\r\n    }\r\n\r\n    const checkForUserEmail = (email) => {\r\n        return new Promise((res, rej) => {\r\n            getUserByEmail(email).subscribe((data) => {\r\n                if (data && data.length) res(data);\r\n                else res(null);\r\n            })\r\n        })\r\n    }\r\n\r\n    const getUserLoginData = (userData) => {\r\n        return new Promise((res, rej) => {\r\n            if (thirdPartyResponse.data && thirdPartyResponse.data.email) {\r\n                // with gmail or fb flow\r\n                getUserByEmail(userData.email).subscribe((isRegisteredUser) => {\r\n                    if (isRegisteredUser.length) {\r\n                        res(isRegisteredUser[0]);\r\n                    } else {\r\n                        setLoginError('Please enter correct credentials.')\r\n                        rej({ ...userData, isRegistered: false });\r\n                    }\r\n                })\r\n            } else {\r\n                // without gmail fb flow\r\n                checkForUserEmail(userData.emailOrPhone).then((isRegisteredUser) => {\r\n                    if (isRegisteredUser && isRegisteredUser.length) {\r\n                        if (isRegisteredUser[0].password === userData.password) res(isRegisteredUser[0]);\r\n                        else {\r\n                            setLoginError('Please enter correct credentials.')\r\n                            rej();\r\n                        }\r\n                    } else {\r\n                        checkForUserPhone(userData.emailOrPhone).then((isRegisteredUser) => {\r\n                            if (isRegisteredUser && isRegisteredUser.length) {\r\n                                if (isRegisteredUser[0].password === userData.password) res(isRegisteredUser[0]);\r\n                                else {\r\n                                    setLoginError('Please enter correct credentials.')\r\n                                    rej();\r\n                                }\r\n                            } else {\r\n                                setLoginError('Please enter correct credentials.')\r\n                                rej();\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n    const signinUser = (e, status) => {\r\n        setLoginError(null);\r\n        let userData = {};\r\n        switch (status) {\r\n            case 'cred':\r\n                setThirdPartyResponse({ isLogginSuccess: false, data: null, source: '' })\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                userData = {\r\n                    ...loginCred,\r\n                    phone: loginCred.username,\r\n                    email: loginCred.username,\r\n                    emailOrPhone: loginCred.username\r\n                }\r\n                getUserLoginData(userData)\r\n                    .then((data) => {\r\n                        //user is registered\r\n                        setLoginResponseToServer();\r\n                        data.source = 'Website';\r\n                        dispatch(loginUser(data));\r\n                        if (state.currentLoginFlow == 'competition') history.push('/competitions');\r\n                        else if (state.currentLoginFlow == 'upload-video') history.push('/upload-video');\r\n                        else history.push('/')\r\n                    })\r\n                    .catch((data) => {\r\n                        if (data) {\r\n                            //user not registered\r\n                            history.push({\r\n                                pathname: '/register',\r\n                                state: data\r\n                            })\r\n                        }\r\n                    })\r\n                break;\r\n            case 'Google': case 'Facebook':\r\n                userData = {\r\n                    name: thirdPartyResponse.data.name,\r\n                    email: thirdPartyResponse.data.email,\r\n                }\r\n                getUserLoginData(userData)\r\n                    .then((data) => {\r\n                        //user is registered\r\n                        setLoginResponseToServer();\r\n                        data.source = thirdPartyResponse.source;\r\n                        dispatch(loginUser(data));\r\n                        if (state.currentLoginFlow == 'competition') history.push('/competitions');\r\n                        else if (state.currentLoginFlow == 'upload-video') history.push('/upload-video');\r\n                        else history.push('/')\r\n                    })\r\n                    .catch((data) => {\r\n                        if (data) {\r\n                            data.source = thirdPartyResponse.source;\r\n                            //user not registered\r\n                            history.push({\r\n                                pathname: '/register',\r\n                                state: data\r\n                            })\r\n                        }\r\n                    })\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-wrap clearfix\">\r\n            <form className=\"form-wrap clearfix\" onSubmit={(e) => signinUser(e, 'cred')}>\r\n                <div className=\"heading-outer\">\r\n                    <div className=\"heading1\">Welcome Back!</div>\r\n                    <div className=\"heading2\">Login to your existant account of Choreoculture.</div>\r\n                </div>\r\n                <div className=\"form-outer clearfix\">\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            id=\"outlined-required-username\"\r\n                            label=\"Username / Email / Phone\"\r\n                            onChange={handleChange('username')}\r\n                            value={loginCred.username}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <FormControl className=\"\" variant=\"outlined\" style={{ width: '100%' }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                required\r\n                                id=\"outlined-adornment-password\"\r\n                                type={loginCred.showPassWord ? 'text' : 'password'}\r\n                                value={loginCred.password}\r\n                                onChange={handleChange('password')}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={showPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {loginCred.showPassWord ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                labelWidth={70}\r\n                            />\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"action-wrap\">\r\n                        {LoginError && <div className=\"login-error\">\r\n                            {LoginError}\r\n                        </div>}\r\n                        <div className=\"submit-btn clearfix\">\r\n                            <Button variant=\"contained\" type=\"submit\" color=\"primary\">Sign In\r\n                            <ArrowRightSharpIcon />\r\n                            </Button>\r\n                        </div>\r\n                        <div className=\"forgot-password clearfix\">\r\n                            <div>Forgot Password ?</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"or-seprator clearfix\">\r\n                        <span></span>\r\n                        <div>OR</div>\r\n                        <span></span>\r\n                    </div>\r\n                    <div className=\"login-with\">\r\n                        <p className=\"loginWithTitle\">Login with</p>\r\n                        <div className=\"login-with-google\">\r\n                            <GoogleLogin\r\n                                className=\"google-login-btn\"\r\n                                clientId=\"417866547364-mesv7a9cn6bj4n3ge45s8b6hhl1vdam0.apps.googleusercontent.com\"\r\n                                buttonText=\"Login with Google\"\r\n                                onSuccess={successResponseGoogle}\r\n                                onFailure={failureResponseGoogle} >\r\n                            </GoogleLogin>\r\n                        </div>\r\n                        <div className=\"login-with-fb\">\r\n                            <div className=\"login-with-fb\">\r\n                                <FacebookLogin\r\n                                    appId=\"813330422546108\"\r\n                                    autoLoad={false}\r\n                                    fields=\"name,email,picture\"\r\n                                    callback={responseFacebook}\r\n                                    cssClass=\"facebook-login-btn\"\r\n                                    icon={<FacebookIcon />}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"already-login-wrap\">\r\n                        <div className=\"text-wrap\">New to Choreoculture?</div>\r\n                        <Button color=\"primary\" onClick={() => history.push('/register')}>SIGN UP</Button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            <div className=\"img-wrap\">\r\n                <img src={bgImg} />\r\n            </div>\r\n        </div>\r\n    );\r\n}","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Profile\\Profile.js",["188","189","190","191","192"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStoreConsumer } from '../../Providers/StateProvider';\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nimport LoyaltyOutlinedIcon from '@material-ui/icons/LoyaltyOutlined';\r\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\r\nimport CollectionsOutlinedIcon from '@material-ui/icons/CollectionsOutlined';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport * as $ from 'jquery';\r\nimport { getUploadedVideosByUserId } from \"../../Services/UploadedVideo.service\";\r\nimport { getCompetitionByUserId } from \"../../Services/EnrollCompetition.service\";\r\nimport Vedio from \"../Vedio/Video\";\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: 500,\r\n    },\r\n}));\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\nfunction Profile() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const theme = useTheme();\r\n    const { state, dispatch } = useStoreConsumer();\r\n    const [value, setValue] = useState(0);\r\n    const loggedInUser = state.loggedInUser;\r\n    const [UserUploadedVideoList, setUserUploadedVideoList] = useState([]);\r\n    const [UserCompetitionsList, setUserCompetitionsList] = useState([]);\r\n    const [UserLikedVideoList, setUserLikedVideoList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        $('html,body').animate({\r\n            scrollTop: 0\r\n        }, 500);\r\n        getUploadedVideosByUserId(loggedInUser.key).subscribe((list) => setUserUploadedVideoList(list));\r\n        getCompetitionByUserId(loggedInUser.key).subscribe((list) => setUserCompetitionsList(list));\r\n        // getCompetitionByUserId(loggedInUser.key).subscribe((list) => UserLikedVideoList(list));\r\n    }, [])\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = (index) => {\r\n        setValue(index);\r\n    };\r\n\r\n    return (\r\n        <div className=\"profile-outer\">\r\n            <div className=\"profile-details-wrap clearfix\">\r\n                <div className=\"profile-img\">\r\n                    <AccountCircleOutlinedIcon />\r\n                </div>\r\n                <div className=\"profile-details clearfix\">\r\n                    <div className=\"username-wrap clearfix\">\r\n                        <div className=\"username\">\r\n                            {loggedInUser.username}\r\n                        </div>\r\n                        <div className=\"edit-profile\" onClick={() => history.push('/profile/edit')}>\r\n                            Edit Profile\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"followers-wrap clearfix\">\r\n                        <div className=\"posts\">\r\n                            <span>999</span> Posts\r\n                        </div>\r\n                        <div className=\"followers\">\r\n                            <span>999</span> Followers\r\n                        </div>\r\n                        <div className=\"following\">\r\n                            <span>999</span> Followings\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"bio-wrap\">\r\n                        <div className=\"fullname\">\r\n                            {loggedInUser.name}\r\n                        </div>\r\n                        {loggedInUser.bio ? <div className=\"bio\">\r\n                            {loggedInUser.bio}\r\n                        </div> : <div className=\"bio\">\r\n                                Older dancers (especially from the SoCal dance community) – even if you can appreciate and welcome the ways dance has evolved, you’ll still feel pangs of nostalgia when going through this list.\r\n                        </div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"profile-content-wrap\">\r\n                <div className=\"headers-wrap\">\r\n                    <Tabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        variant=\"fullWidth\"\r\n                        aria-label=\"full width tabs example\"\r\n                    >\r\n                        <Tab label=\"Posts\" icon={<CollectionsOutlinedIcon />} {...a11yProps(0)} />\r\n                        <Tab label=\"Liked\" icon={<FavoriteBorderOutlinedIcon />}{...a11yProps(1)} />\r\n                        <Tab label=\"Competitions\" icon={<LoyaltyOutlinedIcon />} {...a11yProps(2)} />\r\n                    </Tabs>\r\n                    <SwipeableViews\r\n                        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                        index={value}\r\n                        onChangeIndex={handleChangeIndex}>\r\n                        <TabPanel value={value} index={0} dir={theme.direction}>\r\n                            <div className=\"flex-container\" >\r\n                                {UserUploadedVideoList.length !== 0 ? UserUploadedVideoList.map((vdoObj) => {\r\n                                    return <div className=\"flex-basis-3\" style={{ marginRight: '30px' }} key={vdoObj.key}>\r\n                                        <Vedio vdoObj={vdoObj} />\r\n                                    </div>\r\n                                }) :\r\n                                    <div>No video posted yet !</div>}\r\n                            </div>\r\n                        </TabPanel>\r\n                        <TabPanel value={value} index={1} dir={theme.direction}>\r\n                            <div className=\"flex-container\" >\r\n                                {UserLikedVideoList.length !== 0 ? UserLikedVideoList.map((vdoObj) => {\r\n                                    return <div className=\"flex-basis-3\" style={{ marginRight: '30px' }} key={vdoObj.key}>\r\n                                        <Vedio vdoObj={vdoObj} />\r\n                                    </div>\r\n                                }) :\r\n                                    <div>No video liked yet !</div>}\r\n                            </div>\r\n                        </TabPanel>\r\n                        <TabPanel value={value} index={2} dir={theme.direction}>\r\n                            <div className=\"flex-container\" >\r\n                                {UserCompetitionsList.length !== 0 ? UserCompetitionsList.map((competition) => {\r\n                                    return <div className=\"flex-basis-3\" style={{ marginRight: '30px' }} key={competition.key}>\r\n                                        <div>{competition.compName}</div>\r\n                                        <img src={competition.compImg} />\r\n                                    </div>\r\n                                }) :\r\n                                    <div>No competition enrolled yet !</div>}\r\n                            </div>\r\n                        </TabPanel>\r\n                    </SwipeableViews>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\EditProfile\\EditProfile.js",["193","194","195"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStoreConsumer } from '../../Providers/StateProvider';\r\nimport { signupUser } from '../../Actions/User';\r\nimport bgImg from '../../Images/bg1.svg';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport ArrowRightSharpIcon from '@material-ui/icons/ArrowRightSharp';\r\nimport * as $ from 'jquery';\r\nimport { updateUser } from \"../../Services/User.service\";\r\n\r\nexport default function EditProfile() {\r\n    const { state, dispatch } = useStoreConsumer();\r\n    const history = useHistory();\r\n    let loggedInUser = state.loggedInUser;\r\n    // get data from history props if redirected through google or facebook login\r\n    if (history.location.state && (history.location.state.source == 'Facebook' || history.location.state.source == 'Google')) {\r\n        loggedInUser.email = history.location.state.email;\r\n        loggedInUser.name = history.location.state.name;\r\n        // setNeedToRegisterError('You are not registered yet, Please register with Choreoculture.')\r\n    }\r\n    const [userDetails, setUserDetails] = useState(loggedInUser);\r\n    const [SignUpError, setSignUpError] = useState(null);\r\n    const [showHidePassword, setShowHidePassword] = useState({ showPassword: false, showConfirmPassword: false });\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setUserDetails({ ...userDetails, [prop]: event.target.value });\r\n        console.log(userDetails)\r\n    };\r\n\r\n    const handleClickShowPassword = (prop) => {\r\n        setShowHidePassword({ ...showHidePassword, [prop]: !showHidePassword[prop] });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    useEffect(() => {\r\n        $('html,body').animate({\r\n            scrollTop: 0\r\n        }, 500);\r\n    }, [])\r\n\r\n    const setSignupUserCred = (e) => {\r\n        if (userDetails.password != userDetails.confirmPassword) {\r\n            setSignUpError('Password dose not match.');\r\n            return;\r\n        }\r\n\r\n        updateUser(userDetails.key, userDetails).subscribe(() => {\r\n            dispatch(signupUser(userDetails));\r\n            history.push(({\r\n                pathname: '/profile',\r\n                state: null\r\n            }));\r\n        })\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div className=\"logout-wrap clearfix\">\r\n            <form className=\"form-wrap clearfix\" onSubmit={setSignupUserCred}>\r\n                <div className=\"heading-outer\">\r\n                    <div className=\"heading1\">Update Profile</div>\r\n                </div>\r\n                <div className=\"form-outer clearfix\">\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            id=\"outlined-required-Name\"\r\n                            label=\"Name\"\r\n                            onChange={handleChange('name')}\r\n                            value={userDetails.name}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            id=\"outlined-required-Username\"\r\n                            label=\"Username\"\r\n                            onChange={handleChange('username')}\r\n                            value={userDetails.username}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            type=\"tel\"\r\n                            id=\"outlined-required-phone\"\r\n                            label=\"Phone\"\r\n                            onChange={handleChange('phone')}\r\n                            value={userDetails.phone}\r\n                            variant=\"outlined\"\r\n                            InputProps={{ readOnly: true }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            id=\"outlined-required-email\"\r\n                            label=\"Email\"\r\n                            type=\"email\"\r\n                            onChange={handleChange('email')}\r\n                            value={userDetails.email}\r\n                            variant=\"outlined\"\r\n                            InputProps={{ readOnly: true }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            id=\"outlined-required-country\"\r\n                            label=\"Country\"\r\n                            onChange={handleChange('country')}\r\n                            value={userDetails.country}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            id=\"outlined-required-state\"\r\n                            label=\"State\"\r\n                            onChange={handleChange('state')}\r\n                            value={userDetails.state}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <FormControl className=\"\" variant=\"outlined\" style={{ width: '100%' }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                required\r\n                                id=\"outlined-adornment-password\"\r\n                                type={showHidePassword.showPassword ? 'text' : 'password'}\r\n                                value={userDetails.password}\r\n                                onChange={handleChange('password')}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={() => handleClickShowPassword('showPassword')}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {showHidePassword.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                labelWidth={70}\r\n                            />\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <FormControl className=\"\" variant=\"outlined\" style={{ width: '100%' }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-confirm-password\">Confirm Password</InputLabel>\r\n                            <OutlinedInput\r\n                                required\r\n                                id=\"outlined-adornment-confirm-password\"\r\n                                type={showHidePassword.showConfirmPassword ? 'text' : 'password'}\r\n                                value={userDetails.confirmPassword}\r\n                                onChange={handleChange('confirmPassword')}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle confirm password visibility\"\r\n                                            onClick={() => handleClickShowPassword('showConfirmPassword')}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {showHidePassword.showConfirmPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                labelWidth={70}\r\n                            />\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <div className=\"dob-wrap\">\r\n                            <TextField className=\"input-field\"\r\n                                id=\"date\"\r\n                                label=\"Birthday\"\r\n                                type=\"date\"\r\n                                style={{ width: '100%' }}\r\n                                onChange={handleChange('dob')}\r\n                                value={userDetails.dob}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <FormControl variant=\"outlined\" className=\"input-field\">\r\n                            <InputLabel id=\"select-outlined-label\">Gender</InputLabel>\r\n                            <Select\r\n                                labelId=\"select-outlined-label\"\r\n                                id=\"select-outlined\"\r\n                                value={userDetails.gender}\r\n                                onChange={handleChange('gender')}\r\n                                label=\"Gender\"\r\n                            >\r\n                                <MenuItem value=\"Male\">Male</MenuItem>\r\n                                <MenuItem value=\"Female\">Female</MenuItem>\r\n                                <MenuItem value=\"Other\">Other</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"input-wrap\" style={{ width: '93%' }}>\r\n                        <TextField className=\"input-field bio-input\"\r\n                            id=\"outlined-required-bio\"\r\n                            label=\"Bio\"\r\n                            value={userDetails.bio}\r\n                            onChange={handleChange('bio')}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"tnc-wrap\">\r\n                        <div className=\"tnc-content clearfix\">\r\n                            <div className=\"checkbox-wrap\">\r\n                                <Checkbox\r\n                                    required\r\n                                    color=\"primary\"\r\n                                    checked={userDetails.tnc}\r\n                                    onChange={(e) => setUserDetails({ ...userDetails, tnc: e.target.checked })}\r\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"note-wrap\">Yes, I agree to the terms and conditions </div>\r\n                        </div>\r\n                    </div>\r\n                    {SignUpError && <div className=\"login-error\">\r\n                        {SignUpError}\r\n                    </div>}\r\n                    <div className=\"submit-btn clearfix\">\r\n                        <Button variant=\"contained\" type=\"submit\" color=\"primary\" >Update\r\n                         <ArrowRightSharpIcon />\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div className=\"img-wrap\">\r\n                <img src={bgImg} alt=\"bg1\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}","F:\\Toms\\Business-work\\Boogalu\\src\\Services\\LocalstorageCache.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Navigation\\index.js",["196","197"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { FaHome, FaBookReader, FaCloudUploadAlt, FaTrophy, FaStaylinked } from 'react-icons/fa';\r\nimport boogaluLogo from '../../Images/Boogalu-logo.svg';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStoreConsumer } from '../../Providers/StateProvider';\r\nimport { logoutUser } from '../../Actions/User';\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nimport { enableLoginFlow } from \"../../Actions/LoginFlow\";\r\nimport * as $ from 'jquery';\r\nconst SCROLL_TOP_LIMIT = 200;\r\n\r\nfunction Navigation() {\r\n    const [goingUpClass, setGoingUpClass] = useState('');\r\n    const [hideVdoUploadBtn, setHideVdoUploadBtn] = useState(false);\r\n    const [didMount, setDidMount] = useState(false);\r\n    const [isMobile, toggleMobile] = useState(false);\r\n    const [goingDownClass, setGoingDownClass] = useState('');\r\n    const [showProfileTab, setShowProfileTab] = useState(false);\r\n    const ref = useRef();\r\n    const mobilHomelinkRef = useRef();\r\n    const history = useHistory();\r\n    const { state, dispatch } = useStoreConsumer();\r\n    useOnClickOutside(ref, () => setShowProfileTab(false));\r\n\r\n    useEffect(() => {\r\n        setDidMount(true);\r\n        setHideVdoUploadBtn(false);\r\n        let windowViewPortWidth = window.innerWidth;\r\n        if (windowViewPortWidth > 1023) {\r\n            toggleMobile(false);\r\n        } else {\r\n            toggleMobile(true);\r\n        }\r\n\r\n        const handleScroll = () => {\r\n            const currentScrollY = window.scrollY;\r\n            if (currentScrollY < SCROLL_TOP_LIMIT) {\r\n                setGoingUpClass('');\r\n                setGoingDownClass('');\r\n            } else {\r\n                setGoingUpClass('scrolled-up');\r\n                setTimeout(() => {\r\n                    setGoingDownClass('scrolled-down');\r\n                }, 200);\r\n            }\r\n        };\r\n\r\n        const windowResize = () => {\r\n            windowViewPortWidth = window.innerWidth;\r\n            if (windowViewPortWidth > 1023) {\r\n                toggleMobile(false);\r\n            } else {\r\n                toggleMobile(true);\r\n            }\r\n        }\r\n\r\n\r\n        setTimeout(() => {\r\n            const pathName = history?.location?.pathname.split('/')[1];\r\n            const navLinks = document.querySelectorAll('.nav-ul a');\r\n            if (pathName.includes('register') || pathName.includes('login') || pathName.includes('upload-video')) setHideVdoUploadBtn(true);\r\n            else setHideVdoUploadBtn(false);\r\n            if (navLinks && navLinks.length) {\r\n                navLinks.forEach((ele) => {\r\n                    const getHref = ele.getAttribute('href').toLocaleLowerCase();\r\n                    if (pathName?.length && getHref.includes(pathName)) {\r\n                        ele.classList.add('active');\r\n                    }\r\n                });\r\n            }\r\n        }, 1000);\r\n\r\n        window.addEventListener(\"resize\", windowResize, { passive: true });\r\n        window.addEventListener(\"scroll\", handleScroll, { passive: true });\r\n        return () => setDidMount(false);\r\n    }, [isMobile]);\r\n\r\n    const logout = () => {\r\n        console.log('logout success');\r\n        dispatch(logoutUser());\r\n        setShowProfileTab(false)\r\n        history.push(`/login`);\r\n    }\r\n\r\n    const onClickNav = (e, route) => {\r\n        e.preventDefault();\r\n        const navLinks = document.querySelectorAll('.nav-ul a');\r\n\r\n        setTimeout(() => {\r\n            const pathName = history?.location?.pathname.split('/')[1];\r\n            if (pathName.includes('register') || pathName.includes('login') || pathName.includes('upload-video')) setHideVdoUploadBtn(true);\r\n            else setHideVdoUploadBtn(false);\r\n        });\r\n\r\n        if (navLinks && navLinks.length) {\r\n            navLinks.forEach((ele) => {\r\n                if (ele.classList.contains('active')) {\r\n                    ele.classList.remove('active');\r\n                }\r\n            });\r\n        }\r\n        if (route) {\r\n            history.push(`/${route}`);\r\n            e.target.classList.add('active');\r\n            setTimeout(() => {\r\n                let target = $(`.${route}`);\r\n                if (target && target.offset()) {\r\n                    $('html,body').animate({\r\n                        scrollTop: target.offset().top - 200\r\n                    }, 700);\r\n                }\r\n            }, 100);\r\n        } else {\r\n            history.push(`/`);\r\n            setTimeout(() => {\r\n                let target = $(`.homepage`);\r\n                if (target.length) {\r\n                    $('html,body').animate({\r\n                        scrollTop: target.offset().top - 200\r\n                    }, 700);\r\n                }\r\n            }, 100);\r\n        }\r\n    }\r\n    // Hook\r\n    function useOnClickOutside(ref, handler) {\r\n        useEffect(\r\n            () => {\r\n                const listener = event => {\r\n                    if (!ref.current || ref.current.contains(event.target)) {\r\n                        return;\r\n                    }\r\n\r\n                    handler(event);\r\n                };\r\n                document.addEventListener('mousedown', listener);\r\n                document.addEventListener('touchstart', listener);\r\n                return () => {\r\n                    document.removeEventListener('mousedown', listener);\r\n                    document.removeEventListener('touchstart', listener);\r\n                };\r\n            },\r\n            [ref, handler]\r\n        );\r\n    }\r\n\r\n    function navigateToUserRegistrationLogin(path) {\r\n        setHideVdoUploadBtn(true);\r\n        history.push(`/${path}`)\r\n    }\r\n\r\n    if (!didMount) {\r\n        return null;\r\n    }\r\n\r\n    const uploadVdo = (e) => {\r\n        setHideVdoUploadBtn(true);\r\n        e.preventDefault();\r\n        if (state.loggedInUser && state.loggedInUser.email) {\r\n            history.push({\r\n                pathname: '/upload-video',\r\n                state: null\r\n            })\r\n        } else {\r\n            dispatch(enableLoginFlow('upload-video'));\r\n            history.push({\r\n                pathname: '/login',\r\n                state: null\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <nav className={`navigation-wrap ${goingUpClass} ${goingDownClass}`}>\r\n                <div className=\"flex-container desktop-navigation\">\r\n                    <h1 title=\"home\" >\r\n                        <a href=\"/\" onClick={(e) => onClickNav(e, '')}>\r\n                            <img src={boogaluLogo} alt=\"Boogalu\" />\r\n                        </a>\r\n                    </h1>\r\n                    {\r\n                        !isMobile ?\r\n                            <ul className=\"flex-1 nav-ul\">\r\n                                <li><a href=\"#Lessons\" onClick={(e) => onClickNav(e, 'lessons')}>Lessons</a></li>\r\n                                <li><a href=\"#Competitions\" onClick={(e) => onClickNav(e, 'competitions')}>Competitions</a></li>\r\n                                <li><a href=\"#Subscription\" onClick={(e) => onClickNav(e, 'subscription')}>Subscription</a></li>\r\n                            </ul> : ''\r\n                    }\r\n                    {(!state.loggedInUser || !state.loggedInUser.phone) && <div className=\"flex-2 signup-wrap\" >\r\n                        <button className=\"btn primary-light login\" onClick={() => navigateToUserRegistrationLogin('login')}>Login</button>\r\n                        <button className=\"btn primary-dark signup\" onClick={() => navigateToUserRegistrationLogin('register')}>Sign Up</button>\r\n                    </div>}\r\n\r\n                    {state.loggedInUser && state.loggedInUser.phone && <div className=\"flex-2 signup-wrap\" >\r\n                        <div className=\"profile\" ref={ref}>\r\n                            <AccountCircleOutlinedIcon onClick={() => setShowProfileTab(true)} style={{ fontSize: '35px', paddingRight: '20px' }} />\r\n                            {showProfileTab && <div className=\"profile-tab-wrap\">\r\n                                <div className=\"profile\" onClick={() => { history.push('/profile'); setShowProfileTab(false) }}>Profile</div>\r\n                                <div className=\"logout\" onClick={() => logout()}>Logout</div>\r\n                            </div>}\r\n                        </div>\r\n                        {/* <button className=\"signup\" onClick={() => logout()}>Logout</button> */}\r\n                    </div>}\r\n                </div>\r\n                {\r\n                    !hideVdoUploadBtn ?\r\n                        <a href=\"\" className=\"upload-btn\" onClick={(e) => uploadVdo(e)}>\r\n                            <i><FaCloudUploadAlt /></i>\r\n                        </a> : ''\r\n                }\r\n                {\r\n                    isMobile ?\r\n                        <div className=\"sticky-mobile-menu\">\r\n                            <ul className=\"flex-1 nav-ul\">\r\n                                <li>\r\n                                    <a href=\"/\" ref={mobilHomelinkRef} onClick={(e) => onClickNav(e, '')}>\r\n                                        <i>\r\n                                            <FaHome />\r\n                                        </i>\r\n                                        <span>Home</span>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#Lessons\" onClick={(e) => onClickNav(e, 'lessons')}>\r\n                                        <i><FaBookReader /></i>\r\n                                        <span>Lessons</span>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#upload\" onClick={(e) => onClickNav(e, 'competitions')}>\r\n                                        <i><FaTrophy /></i>\r\n                                        <span>Competition</span>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#Subscription\" onClick={(e) => onClickNav(e, 'subscription')}>\r\n                                        <i><FaStaylinked /></i>\r\n                                        <span>Subscription</span>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        : ''\r\n                }\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\nexport default Navigation","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Splash\\index.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Homepage\\index.js",["198","199","200","201","202"],"import React, { useState, useEffect } from \"react\";\r\nimport { useStoreConsumer } from '../../Providers/StateProvider';\r\nimport bgImg from '../../Images/hip-hop.png';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as $ from 'jquery';\r\n\r\nexport default function Homepage() {\r\n    const history = useHistory();\r\n    const { state, dispatch } = useStoreConsumer();\r\n    let loggedInUser = state.loggedInUser;\r\n    const [danceImageVisibleClass, activeDanceImage] = useState('');\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            activeDanceImage('show');\r\n        }, 800);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"homepage charcoal-bg clearfix\">\r\n            <div className=\"homepage-wrap clearfix\">\r\n                <div className=\"banner_vdo\">\r\n                    <div className=\"vdo_wrap rounded-dark-box\">\r\n                        <iframe width=\"100%\" src=\"https://www.youtube.com/embed/i3yMXpeLPuU\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                    </div>\r\n                    <div className=\"vdo_wrap rounded-dark-box\">\r\n                        <iframe width=\"100%\" src=\"https://www.youtube.com/embed/dM1ghaspLyc\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                    </div>\r\n                    <div className=\"vdo_wrap rounded-dark-box\">\r\n                        <iframe width=\"100%\" src=\"https://www.youtube.com/embed/U7NaFiqSeVE\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                    </div>\r\n                </div>\r\n                <div className=\"banner_img\">\r\n                    <h1>Dance Classes for Everyone</h1>\r\n                    <div className=\"get-started-wrap\">\r\n                        <h4>The world’s best dance learning tools – at your fingertips. Start free for 7 days.</h4>\r\n                        <button className=\"btn primary-light get_started\" onClick={() => {\r\n                            loggedInUser ? history.push('/lessons') : history.push('/login');\r\n                        }}>Get Started</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={`home-img-wrap ${danceImageVisibleClass}`}>\r\n                <img src={bgImg} alt=\"\" />\r\n            </div>\r\n            <div className=\"homepage-display-1 charcoal-bg-dark\">\r\n                <div className=\"learn_choreo\" id=\"Lessons\">\r\n                    <div className=\"heading-wrap\">\r\n                        <h2>\r\n                            Learn Choreography To <br /> Your Favorite Songs\r\n                        </h2>\r\n                        <div className=\"line1\">Dance to the music that makes YOU want to move at any skill level.</div>\r\n                    </div>\r\n                    <div className=\"flex-container vdo-wrap\" >\r\n                        <div className=\"flex-basis-3 rounded-dark-box\">\r\n                            <iframe className=\"iframe\" src=\"//www.youtube.com/embed/i3yMXpeLPuU?wmode=transparent&amp;autoplay=0&amp;theme=dark&amp;controls=0&amp;autohide=0&amp;loop=0&amp;showinfo=0&amp;rel=0&amp;playlist=false&amp;enablejsapi=0\" scrolling=\"no\" title=\"Vimeo embed\" frameBorder=\"0\" allow=\"autoplay; fullscreen\" allowFullScreen={false}>\r\n                            </iframe>\r\n                        </div>\r\n                        <div className=\"flex-basis-3 rounded-dark-box\">\r\n                            <iframe className=\"iframe\" src=\"//cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fplayer.vimeo.com%2Fvideo%2F453549133%3Fapp_id%3D122963&amp;dntp=1&amp;display_name=Vimeo&amp;url=https%3A%2F%2Fvimeo.com%2F453549133%3Flazy%3D1&amp;image=https%3A%2F%2Fi.vimeocdn.com%2Fvideo%2F951136340_1280.jpg&amp;key=96f1f04c5f4143bcb0f2e68c87d65feb&amp;type=text%2Fhtml&amp;schema=vimeo\" scrolling=\"no\" title=\"Vimeo embed\" frameBorder=\"0\" allow=\"autoplay; fullscreen\" allowFullScreen={false}>\r\n                            </iframe>\r\n                        </div>\r\n                        <div className=\"flex-basis-3 rounded-dark-box\">\r\n                            <iframe className=\"iframe\" src=\"//cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fplayer.vimeo.com%2Fvideo%2F453549133%3Fapp_id%3D122963&amp;dntp=1&amp;display_name=Vimeo&amp;url=https%3A%2F%2Fvimeo.com%2F453549133%3Flazy%3D1&amp;image=https%3A%2F%2Fi.vimeocdn.com%2Fvideo%2F951136340_1280.jpg&amp;key=96f1f04c5f4143bcb0f2e68c87d65feb&amp;type=text%2Fhtml&amp;schema=vimeo\" scrolling=\"no\" title=\"Vimeo embed\" frameBorder=\"0\" allow=\"autoplay; fullscreen\" allowFullScreen={false}>\r\n                            </iframe>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Subscription\\index.js",["203","204"],"import React, { useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStoreConsumer } from '../../Providers/StateProvider';\r\n\r\nfunction Subscription() {\r\n    const { state, dispatch } = useStoreConsumer();\r\n    const history = useHistory();\r\n    const loggedInUser = state.loggedInUser;\r\n\r\n    const subscribeClasses = plan => {\r\n        // if user already login then redirect to home\r\n        if (loggedInUser.name && loggedInUser.phone && loggedInUser.username) {\r\n\r\n        } else {\r\n            history.push({\r\n                pathname: `/register?plan=${plan}`,\r\n                state: null\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"subscription subscription-outer charcoal-bg\">\r\n            <div id=\"Subscription\" className=\"charcoal-bg\">\r\n                <div className=\"flex-container-VC subscription-wrap charcoal-bg\">\r\n                    <div className=\"flex-3 heading-content\">\r\n                        <h1>Unlimited Classes For The Price Of One</h1>\r\n                        <div className=\"line1\">Dance to the music that makes YOU want to move at any skill level.</div>\r\n                    </div>\r\n                    <div className=\"inner-plans-wrap\">\r\n                        <div className=\"flex-2 plan\" onClick={() => subscribeClasses('monthly')}>\r\n                            <div className=\"plan_tag\">MONTHLY PLAN (USD)</div>\r\n                            <div className=\"plan_price\">$2.74<span>/mo</span></div>\r\n                        </div>\r\n                        <div className=\"flex-2 plan\" onClick={() => subscribeClasses('yearly')}>\r\n                            <div className=\"plan_tag\">ANNUAL PLAN (USD)</div>\r\n                            <div className=\"plan_price\">$27.41<span>/year</span></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subscription\r\n","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Signup\\index.js",["205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStoreConsumer } from '../../Providers/StateProvider';\r\nimport { signupUser } from '../../Actions/User';\r\nimport bgImg from '../../Images/bg1.svg';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport stepListData from '../../Data/RegistrationStepData'\r\nimport ArrowRightSharpIcon from '@material-ui/icons/ArrowRightSharp';\r\nimport { registerUser, getUserByEmail, getUserByPhone } from \"../../Services/User.service\";\r\nimport * as $ from 'jquery';\r\n\r\nexport default function Signup() {\r\n    const { state, dispatch } = useStoreConsumer();\r\n    const history = useHistory();\r\n    let loggedInUser = state.loggedInUser;\r\n    // if user already login then redirect to home\r\n    if (loggedInUser.name && loggedInUser.phone && loggedInUser.email && loggedInUser.username) history.push({\r\n        pathname: '/',\r\n        state: null\r\n    })\r\n    // get data from history props if redirected through google or facebook login\r\n    if (history.location.state && (history.location.state.source === 'Facebook' || history.location.state.source === 'Google')) {\r\n        loggedInUser.email = history.location.state.email;\r\n        loggedInUser.name = history.location.state.name;\r\n        // setNeedToRegisterError('You are not registered yet, Please register with Choreoculture.')\r\n    }\r\n    const [userDetails, setUserDetails] = useState(loggedInUser);\r\n    const [SignUpError, setSignUpError] = useState(null);\r\n    const [showHidePassword, setShowHidePassword] = useState({ showPassword: false, showConfirmPassword: false });\r\n\r\n    const [activeStep, setActiveStep] = useState('stepOne');\r\n    const [showNextButton, setShowNextButton] = useState(false);\r\n    const [stepData, setStepListData] = useState(stepListData);\r\n    const [selectedOptionsList, setSelectedOptionsList] = useState([]);\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setUserDetails({ ...userDetails, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowPassword = (prop) => {\r\n        setShowHidePassword({ ...showHidePassword, [prop]: !showHidePassword[prop] });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    useEffect(() => {\r\n        $('html,body').animate({\r\n            scrollTop: 0\r\n        }, 500);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (stepData[activeStep]) {\r\n            let isAnySelected = stepData[activeStep].filter((data) => data.isSelected);\r\n            if (isAnySelected.length != 0) setShowNextButton(true);\r\n            else setShowNextButton(false);\r\n            // set selected options\r\n            let selectedOptions = [];\r\n            Object.entries(stepData).map(([parentKey, parentValue]) => {\r\n                parentValue.map((parentValueItem) => {\r\n                    if (parentValueItem.isSelected) {\r\n                        let selectionObj = { value: [parentValueItem.title], key: parentKey, heading: parentValueItem.heading };\r\n                        if (selectedOptions.length != 0) {\r\n                            let isAvl = selectedOptions.filter((data) => data.key === parentKey);\r\n                            if (isAvl.length != 0) {\r\n                                selectedOptions.map((item) => {\r\n                                    if (item.key === parentKey) item.value.push(parentValueItem.title);\r\n                                })\r\n                            } else selectedOptions.push(selectionObj);\r\n                        } else selectedOptions.push(selectionObj);\r\n                    }\r\n                })\r\n            })\r\n            setSelectedOptionsList(selectedOptions);\r\n        }\r\n    }, [activeStep])\r\n\r\n    const saveUserRegistrationDetails = () => {\r\n        return new Promise((res, rej) => {\r\n            registerUser(userDetails).subscribe((data) => {\r\n                console.log('user registered success', data);\r\n                res();\r\n            })\r\n        })\r\n    }\r\n\r\n    const checkForUsedPhone = () => {\r\n        return new Promise((res, rej) => {\r\n            getUserByPhone(userDetails.phone).subscribe((data) => {\r\n                if (data && data.length) {\r\n                    setSignUpError('Phone already registered.');\r\n                    rej(false);\r\n                } else {\r\n                    res(true);\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    const checkForUsedEmail = () => {\r\n        return new Promise((res, rej) => {\r\n            getUserByEmail(userDetails.email).subscribe((data) => {\r\n                if (data && data.length) {\r\n                    setSignUpError('Email already registered.');\r\n                    rej(false);\r\n                } else {\r\n                    res(true);\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    const setSignupUserCred = (e) => {\r\n        if (userDetails.password != userDetails.confirmPassword) {\r\n            setSignUpError('Password dose not match.');\r\n            return;\r\n        }\r\n\r\n        Promise.all([checkForUsedEmail(), checkForUsedPhone()]).then(() => {\r\n            saveUserRegistrationDetails()\r\n                .then(() => {\r\n                    dispatch(signupUser(userDetails));\r\n                    if (state.currentLoginFlow == 'competition') history.push('/competitions');\r\n                    if (state.currentLoginFlow == 'upload-video') history.push('/upload-video');\r\n                    else history.push(({\r\n                        pathname: '/',\r\n                        state: null\r\n                    }));\r\n                })\r\n                .catch((error) => {\r\n                    // error in user registration\r\n                    if (error) {\r\n\r\n                    }\r\n                })\r\n        }).catch(error => {\r\n            console.error(error)\r\n        });\r\n        e.preventDefault();\r\n    }\r\n\r\n    const setNextStep = () => {\r\n        switch (activeStep) {\r\n            case 'stepOne': setActiveStep('stepTwo'); break;\r\n            case 'stepTwo': setActiveStep('stepThree'); break;\r\n            case 'stepThree': setActiveStep('stepFour'); break;\r\n            case 'stepFour': setActiveStep('stepFive'); break;\r\n            case 'stepFive': setActiveStep(6); break;\r\n        }\r\n    }\r\n\r\n    const setPrevStep = () => {\r\n        switch (activeStep) {\r\n            case 'stepTwo': setActiveStep('stepOne'); break;\r\n            case 'stepThree': setActiveStep('stepTwo'); break;\r\n            case 'stepFour': setActiveStep('stepThree'); break;\r\n            case 'stepFive': setActiveStep('stepFour'); break;\r\n            case 6: setActiveStep('stepFive'); break;\r\n        }\r\n    }\r\n\r\n    const setStepListItemData = (e, activeItem, status) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const stepDataList = Object.assign({}, stepData);\r\n        stepDataList[activeStep].map((item) => {\r\n            if (item.title === activeItem.title) {\r\n                item.isSelected = item.isSelected ? false : true;\r\n            } else {\r\n                if (status != 'multi-select') {\r\n                    item.isSelected = false;\r\n                }\r\n            }\r\n        })\r\n        // set selected options\r\n        let selectedOptions = [];\r\n        Object.entries(stepDataList).map(([parentKey, parentValue]) => {\r\n            parentValue.map((parentValueItem) => {\r\n                if (parentValueItem.isSelected) {\r\n                    let selectionObj = { value: [parentValueItem.title], key: parentKey, heading: parentValueItem.heading };\r\n                    if (selectedOptions.length != 0) {\r\n                        let isAvl = selectedOptions.filter((data) => data.key === parentKey);\r\n                        if (isAvl.length != 0) {\r\n                            selectedOptions.map((item) => {\r\n                                if (item.key === parentKey) item.value.push(parentValueItem.title);\r\n                            })\r\n                        } else selectedOptions.push(selectionObj);\r\n                    } else selectedOptions.push(selectionObj);\r\n                }\r\n            })\r\n        })\r\n        setSelectedOptionsList(selectedOptions);\r\n        let isAnySelected = stepDataList[activeStep].filter((data) => data.isSelected);\r\n        if (isAnySelected.length != 0) setShowNextButton(true);\r\n        else setShowNextButton(false);\r\n        setStepListData(stepDataList);\r\n    }\r\n\r\n    return (\r\n        <div className=\"logout-wrap clearfix\">\r\n            {activeStep != 6 && <div className=\"step-wrap\">\r\n                <div className=\"heading1\">Let's Get Started!</div>\r\n                {activeStep === 'stepOne' && <>\r\n                    <div className=\"list-content\">\r\n                        <div className=\"list-heading-wrap\">\r\n                            <div className=\"heading2\">What’s your experience with dancing?</div>\r\n                            <div className=\"heading3\">Select One Option</div>\r\n                        </div>\r\n                        <div className=\"list\">\r\n                            {stepData.stepOne.map((item, i) => {\r\n                                return (\r\n                                    <div key={i} className={item.isSelected ? 'list-item selected-item' : 'list-item'} onClick={(e) => setStepListItemData(e, item)}>\r\n                                        <div className=\"title\">{item.title}</div>\r\n                                        <div className=\"desc\">{item.desc}</div>\r\n                                        <Checkbox\r\n                                            required\r\n                                            color=\"primary\"\r\n                                            className=\"selected-item-checkbox\"\r\n                                            checked={item.isSelected}\r\n                                            onChange={(e) => setStepListItemData(e, item)}\r\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </>}\r\n                {activeStep === 'stepTwo' && <>\r\n                    <div className=\"list-content\">\r\n                        <div className=\"list-heading-wrap\">\r\n                            <div className=\"heading2\">What is your first goal that you want to work on?</div>\r\n                            <div className=\"heading3\">Select One Option</div>\r\n                        </div>\r\n                        <div className=\"list\">\r\n                            {stepData.stepTwo.map((item, i) => {\r\n                                return (\r\n                                    <div key={i} className={item.isSelected ? 'list-item selected-item' : 'list-item'} onClick={(e) => setStepListItemData(e, item)}>\r\n                                        <div className=\"title\">{item.title}</div>\r\n                                        <div className=\"desc\">{item.desc}</div>\r\n                                        <Checkbox\r\n                                            required\r\n                                            color=\"primary\"\r\n                                            className=\"selected-item-checkbox\"\r\n                                            checked={item.isSelected}\r\n                                            onChange={(e) => setStepListItemData(e, item)}\r\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </>}\r\n                {activeStep === 'stepThree' && <>\r\n                    <div className=\"list-content\">\r\n                        <div className=\"list-heading-wrap\">\r\n                            <div className=\"heading2\">What are you interested in?</div>\r\n                            <div className=\"heading3\">Select all that apply</div>\r\n                        </div>\r\n                        <div className=\"list\">\r\n                            {stepData.stepThree.map((item, i) => {\r\n                                return (\r\n                                    <div key={i} className={item.isSelected ? 'list-item selected-item' : 'list-item'} onClick={(e) => setStepListItemData(e, item, 'multi-select')}>\r\n                                        <div className=\"title\">{item.title}</div>\r\n                                        <div className=\"desc\" style={{ paddingRight: '25px' }}>{item.desc}</div>\r\n                                        <Checkbox\r\n                                            required\r\n                                            color=\"primary\"\r\n                                            className=\"selected-item-checkbox\"\r\n                                            checked={item.isSelected}\r\n                                            onChange={(e) => setStepListItemData(e, item, 'multi-select')}\r\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </>}\r\n                {activeStep === 'stepFour' && <>\r\n                    <div className=\"list-content\">\r\n                        <div className=\"list-heading-wrap\">\r\n                            <div className=\"heading2\">How long would you like your dance sessions to be?</div>\r\n                            <div className=\"heading3\">Select One Option</div>\r\n                        </div>\r\n                        <div className=\"list\">\r\n                            {stepData.stepFour.map((item, i) => {\r\n                                return (\r\n                                    <div key={i} className={item.isSelected ? 'list-item selected-item' : 'list-item'} onClick={(e) => setStepListItemData(e, item)}>\r\n                                        <div className=\"title\">{item.title}</div>\r\n                                        <div className=\"desc\">{item.desc}</div>\r\n                                        <Checkbox\r\n                                            required\r\n                                            color=\"primary\"\r\n                                            className=\"selected-item-checkbox\"\r\n                                            checked={item.isSelected}\r\n                                            onChange={(e) => setStepListItemData(e, item)}\r\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </>}\r\n                {activeStep === 'stepFive' && <>\r\n                    <div className=\"list-content\">\r\n                        <div className=\"list-heading-wrap\">\r\n                            <div style={{ paddingBottom: 0 }} className=\"heading2\">Your Personal Schedule & Recommendations</div>\r\n                        </div>\r\n                        <div className=\"list\">\r\n                            {selectedOptionsList.map((item, i) => {\r\n                                return (\r\n                                    <div key={i} className=\"list-item selected-item\" onClick={() => setActiveStep(item.key)}>\r\n                                        <div className=\"title\">{item.heading}</div>\r\n                                        <div className=\"desc\">\r\n                                            {item.value.length === 1 &&\r\n                                                item.value.map((listValue, j) => {\r\n                                                    return <span key={j}>{listValue} </span>\r\n                                                })\r\n                                            }\r\n                                            {item.value.length != 1 &&\r\n                                                item.value.map((listValue, j) => {\r\n                                                    return <span key={j}>{listValue}, </span>\r\n                                                })\r\n                                            }\r\n\r\n                                        </div>\r\n                                        {/* <Checkbox\r\n                                            required\r\n                                            color=\"primary\"\r\n                                            className=\"selected-item-checkbox\"\r\n                                            checked={true}\r\n                                            disabled={true}\r\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                        /> */}\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </>}\r\n                {activeStep != 6 && <div className=\"step-already-login-wrap clearfix\">\r\n                    <div className=\"text-wrap\">Already have an account?</div>\r\n                    <Button color=\"primary\" onClick={() => history.push({\r\n                        pathname: '/login',\r\n                        state: null\r\n                    })}>SIGN IN</Button>\r\n                    {\r\n                        showNextButton ?\r\n                            <div className={`next-prev-actions ${activeStep != 'stepOne' ? 'next-step-active' : ''} `}>\r\n                                {activeStep != 'stepOne' && <Button color=\"primary\" variant=\"contained\" className=\"next-btn previous\" onClick={() => setPrevStep()}>Prev</Button>}\r\n                                {showNextButton && <Button color=\"primary\" variant=\"contained\" className=\"next-btn\" onClick={() => setNextStep()}>Next</Button>}\r\n                            </div> : ''\r\n                    }\r\n                </div>}\r\n            </div>}\r\n            {activeStep == 6 && <form className=\"form-wrap final-registration-block clearfix\" onSubmit={setSignupUserCred}>\r\n                <div className=\"heading-outer\">\r\n                    <div className=\"heading1\">Let's Get Started!</div>\r\n                    <div className=\"heading2\">Create an account to Choreoculture to get all features.</div>\r\n                </div>\r\n                {/* {NeedToRegisterError && <div className=\"login-error\">\r\n                    {NeedToRegisterError}\r\n                </div>} */}\r\n                <div className=\"form-outer clearfix\">\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            id=\"outlined-required-Name\"\r\n                            label=\"Name\"\r\n                            onChange={handleChange('name')}\r\n                            value={userDetails.name}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            id=\"outlined-required-Username\"\r\n                            label=\"Username\"\r\n                            onChange={handleChange('username')}\r\n                            value={userDetails.username}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            type=\"tel\"\r\n                            id=\"outlined-required-phone\"\r\n                            label=\"Phone\"\r\n                            onChange={handleChange('phone')}\r\n                            value={userDetails.phone}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            id=\"outlined-required-email\"\r\n                            label=\"Email\"\r\n                            type=\"email\"\r\n                            onChange={handleChange('email')}\r\n                            value={userDetails.email}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            id=\"outlined-required-country\"\r\n                            label=\"Country\"\r\n                            onChange={handleChange('country')}\r\n                            value={userDetails.country}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            id=\"outlined-required-state\"\r\n                            label=\"State\"\r\n                            onChange={handleChange('state')}\r\n                            value={userDetails.state}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <FormControl className=\"\" variant=\"outlined\">\r\n                            <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                required\r\n                                id=\"outlined-adornment-password\"\r\n                                type={showHidePassword.showPassword ? 'text' : 'password'}\r\n                                value={userDetails.password}\r\n                                onChange={handleChange('password')}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={() => handleClickShowPassword('showPassword')}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {showHidePassword.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                labelWidth={70}\r\n                            />\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <FormControl className=\"\" variant=\"outlined\">\r\n                            <InputLabel htmlFor=\"outlined-adornment-confirm-password\">Confirm Password</InputLabel>\r\n                            <OutlinedInput\r\n                                required\r\n                                id=\"outlined-adornment-confirm-password\"\r\n                                type={showHidePassword.showConfirmPassword ? 'text' : 'password'}\r\n                                value={userDetails.confirmPassword}\r\n                                onChange={handleChange('confirmPassword')}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle confirm password visibility\"\r\n                                            onClick={() => handleClickShowPassword('showConfirmPassword')}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {showHidePassword.showConfirmPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                labelWidth={70}\r\n                            />\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <div className=\"dob-wrap\">\r\n                            <TextField className=\"input-field\"\r\n                                id=\"date\"\r\n                                label=\"Birthday\"\r\n                                type=\"date\"\r\n                                onChange={handleChange('dob')}\r\n                                value={userDetails.dob}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <FormControl variant=\"outlined\" className=\"input-field\">\r\n                            <InputLabel id=\"select-outlined-label\">Gender</InputLabel>\r\n                            <Select\r\n                                labelId=\"select-outlined-label\"\r\n                                id=\"select-outlined\"\r\n                                value={userDetails.gender}\r\n                                onChange={handleChange('gender')}\r\n                                label=\"Gender\"\r\n                            >\r\n                                <MenuItem value=\"Male\">Male</MenuItem>\r\n                                <MenuItem value=\"Female\">Female</MenuItem>\r\n                                <MenuItem value=\"Other\">Other</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"input-wrap bio-wrap\">\r\n                        <TextField className=\"input-field bio-input\"\r\n                            id=\"outlined-required-bio\"\r\n                            label=\"Bio\"\r\n                            value={userDetails.bio}\r\n                            onChange={handleChange('bio')}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"tnc-wrap\">\r\n                        <div className=\"tnc-content clearfix\">\r\n                            <div className=\"checkbox-wrap\">\r\n                                <Checkbox\r\n                                    required\r\n                                    color=\"primary\"\r\n                                    checked={userDetails.tnc}\r\n                                    onChange={(e) => setUserDetails({ ...userDetails, tnc: e.target.checked })}\r\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"note-wrap\">Yes, I agree to the terms and conditions </div>\r\n                        </div>\r\n                    </div>\r\n                    {SignUpError && <div className=\"login-error\">\r\n                        {SignUpError}\r\n                    </div>}\r\n                    <div className=\"submit-btn clearfix\">\r\n                        <Button variant=\"contained\" type=\"submit\" color=\"primary\" >Sign Up\r\n                         <ArrowRightSharpIcon />\r\n                        </Button>\r\n                        {activeStep != 'stepOne' && <Button color=\"primary\" variant=\"contained\" className=\"next-btn previous\" onClick={() => setPrevStep()}>Prev</Button>}\r\n                    </div>\r\n                    <div className=\"already-login-wrap\">\r\n                        <div className=\"text-wrap\">Already have an account?</div>\r\n                        <Button color=\"primary\" onClick={() => history.push({\r\n                            pathname: '/login',\r\n                            state: null\r\n                        })}>SIGN IN</Button>\r\n                    </div>\r\n                </div>\r\n            </form>}\r\n\r\n            <div className=\"img-wrap\">\r\n                <img src={bgImg} alt=\"bg1\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Upcoming\\index.js",["232","233","234"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport LessonsCategories from '../../Data/LessonsCategory';\r\nimport Video from \"../Vedio/Video\";\r\n\r\nfunction Upcoming () {\r\n    const [activeCategory, setActiveCategory] = useState(LessonsCategories[0]);\r\n    return (\r\n        <div className=\"lessons lessons-wrap\" id=\"upcomingLessons\">\r\n            <div className=\"inner-page\">\r\n                <h1>Learn from the Experts</h1>\r\n                <p>\r\n                    Lessons for all users from our expert faculty members.\r\n                    From Hip-Hop to Bharatnatyam. You'll get all learning videos\r\n                    at one place.\r\n                </p>\r\n                <p className=\"launching-soon\">Videos launching soon! Stay connected!</p>\r\n                <p className=\"from-our-expert-title\">Few sample lessons</p>\r\n                <div className=\"lessons-vdo-wrap\">\r\n                    {activeCategory.upcoming.map((item, index) => {\r\n                        return <Video key={'upcoming-'+index} vdoObj={item}></Video>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Upcoming;\r\n","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Competitions\\index.js",["235","236","237"],"import React, { useState, useEffect } from 'react'\r\nimport CompetitionsDetails from \"../CompetitionsDetails\";\r\nimport { getCompetitionsList } from \"../../Services/Competition.service\";\r\nimport { useStoreConsumer } from '../../Providers/StateProvider';\r\nimport { setActiveCompetition } from \"../../Actions/Competition\";\r\nimport { disableLoginFlow } from \"../../Actions/LoginFlow\";\r\n\r\nfunction Competitions() {\r\n    const { state, dispatch } = useStoreConsumer();\r\n    const [isOpenDetailsModal, setIsOpenDetailsModal] = useState(state.currentLoginFlow ? true : false);\r\n    const [CompletitionList, setCompletitionList] = useState(null);\r\n\r\n    var initialStep = state.currentLoginFlow == 'competition' ? 2 : 1;\r\n\r\n    useEffect(() => {\r\n        getCompetitionsList().subscribe(list => setCompletitionList(list));\r\n        if (state.currentLoginFlow == 'competition') {\r\n            dispatch(disableLoginFlow());\r\n        }\r\n    }, [])\r\n\r\n    const openDetailsModal = (competition) => {\r\n        dispatch(setActiveCompetition(competition));\r\n        setIsOpenDetailsModal(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"competition-wrap\">\r\n            <div className=\"competition-inner\">\r\n                <div className=\"title-wrap\">\r\n                    <h1>Our Active Competition !</h1>\r\n                    <div className=\"competition-desc\">Participate in different competitions &amp; win exciting prizes.</div>\r\n                </div>\r\n                <ul className=\"competition-list\" >\r\n                    {CompletitionList && CompletitionList.map((competition) => {\r\n                        return <li key={competition.name + '-id'} onClick={() => openDetailsModal(competition)}>\r\n                            <img src={competition.img} alt={competition.name} />\r\n                            <h2>{competition.name}</h2>\r\n                        </li>\r\n                    })}\r\n                </ul>\r\n\r\n                {isOpenDetailsModal && <CompetitionsDetails open={isOpenDetailsModal} handleClose={() => setIsOpenDetailsModal(false)} initialStep={initialStep} />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Competitions\r\n","F:\\Toms\\Business-work\\Boogalu\\src\\Reducers\\index.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Actions\\User\\index.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Data\\LessonsCategory.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Vedio\\Video.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Data\\RegistrationStepData.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\CompetitionsDetails\\index.js",["238","239","240","241","242","243","244","245","246"],"import React, { useState, useEffect } from 'react'\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStoreConsumer } from '../../Providers/StateProvider';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { THUMBNAIL_URL } from '../../Constants';\r\nimport \"./CompetitionsDetails.scss\";\r\nimport EnrollCompetition from \"../EnrollCompetition\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { setActiveCompetition } from \"../../Actions/Competition\";\r\nimport { enableLoginFlow } from \"../../Actions/LoginFlow\";\r\nimport { getUploadedVideosByUserId } from \"../../Services/UploadedVideo.service\";\r\n\r\nfunction CompetitionsDetails({ open, handleClose, initialStep }) {\r\n\r\n    const { state, dispatch } = useStoreConsumer();\r\n    const history = useHistory();\r\n    const competitionDetails = state.activeCompetition;\r\n    console.log(competitionDetails);\r\n    const loggedInUser = state.loggedInUser;\r\n    const [userUploadedVdos, setUserUploadedVideoList] = useState([]);\r\n    const [TnC, setTnC] = useState(false);\r\n    const [ActiveStep, setActiveStep] = useState(initialStep || 1);\r\n    // const [SelectedVdo, setSelectedVdo] = useState(null);\r\n\r\n    useEffect(() => {\r\n        (loggedInUser.email && ActiveStep === 2 && userUploadedVdos.length == 0) && getUploadedVideosByUserId(loggedInUser.key).subscribe((vdoList) => setUserUploadedVideoList(vdoList));\r\n    }, [ActiveStep])\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        paper: {\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    const selectVdo = (e, vdo) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        let updatedVdos = userUploadedVdos;\r\n        updatedVdos.map((item) => {\r\n            if (item.key == vdo.key) {\r\n                item.isSelected = true;\r\n                let updatedCompetition = competitionDetails;\r\n                updatedCompetition.selectedVideo = item;\r\n                dispatch(setActiveCompetition(updatedCompetition));\r\n            }\r\n            else item.isSelected = false;\r\n        })\r\n        setUserUploadedVideoList([...updatedVdos]);\r\n    }\r\n\r\n    const enrollForCompetition = () => {\r\n        if (loggedInUser.name && loggedInUser.phone && loggedInUser.username) {\r\n            setActiveStep(2);\r\n        } else {\r\n            handleClose();\r\n            dispatch(enableLoginFlow('competition'));\r\n            history.push({\r\n                pathname: '/login',\r\n                state: null\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className='competition-modal-box'\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <div className={classes.paper}>\r\n                        {ActiveStep == 1 && <IconButton onClick={() => { handleClose(); (state.activeCompetition && !state.currentLoginFlow) && dispatch(setActiveCompetition(null)) }}>\r\n                            <CloseIcon />\r\n                        </IconButton>}\r\n                        {(ActiveStep == 2 || ActiveStep == 3) && <IconButton onClick={() => setActiveStep(ActiveStep - 1)}>\r\n                            <ArrowBackIcon />\r\n                        </IconButton>}\r\n                        {ActiveStep == 1 && <div>\r\n                            <h2 id=\"title\">{competitionDetails.name}</h2>\r\n                            <img src={competitionDetails.img} alt={competitionDetails.name} style={{ width: '20%' }} />\r\n\r\n                            <div className=\"\">About Competition-</div>\r\n                            <p id=\"description\">{competitionDetails.desc}</p>\r\n\r\n                            <div>Age Category-</div>\r\n                            <div >Age 4 to 13 years</div>\r\n                            <div >Age 14 to 17 years</div>\r\n                            <div >Age 18 and above</div>\r\n\r\n                            <div id=\"fees\">Fees: {competitionDetails.fee}</div>\r\n\r\n                            <div className=\"start-at\">\r\n                                Start At: {competitionDetails.startingDate}\r\n                            </div>\r\n                            <div className=\"end-at\">\r\n                                End At: {competitionDetails.endingDate}\r\n                            </div>\r\n\r\n                            <div>Winners -</div>\r\n                            <div>1. Top 3 Winner From Each Category Get Award.</div>\r\n                            <div>2. There will be a three category as mention above.</div>\r\n                            <div>1. Winner will be based on best performance.</div>\r\n                            <div className=\"prices\">\r\n                                <div className=\"price-details\">\r\n                                    First Price : {competitionDetails.prices[0]}\r\n                                </div>\r\n                                <div className=\"price-details\">\r\n                                    Second Price : {competitionDetails.prices[1]}\r\n                                </div>\r\n                                <div className=\"price-details\">\r\n                                    Third Price : {competitionDetails.prices[2]}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div>Submission And Result -</div>\r\n                            <div>1. You Have to submit Your video till 15th June</div>\r\n                            <div>2. Result will be declared on 16th June At 4 Pm On</div>\r\n                            <div>1. Winner will be based on best performance.</div>\r\n\r\n                            <h3>Time To Express Your Talent on Our Platform during this Lockdown</h3>\r\n\r\n                            <div onClick={() => setTnC((TnC ? false : true))}>Terms & Conditions</div>\r\n                            {TnC && <div>\r\n                                <div>You may not be able to attend the live session if you are late.</div>\r\n                                <div>You may face interruptions during the course of the live stream due to internet connectivity issues.</div>\r\n                                <div>Show details and the artist lineup are subject to change as per the artist’s discretion.</div>\r\n                                <div> No refunds on purchased tickets are possible, even in case of any rescheduling.</div>\r\n                            </div>}\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={() => enrollForCompetition(2)}>Submit Video</Button>\r\n                        </div>}\r\n\r\n                        {ActiveStep === 2 && <div>\r\n                            <div className=\"lessons-vdo-wrap\">\r\n                                {userUploadedVdos.length && userUploadedVdos.map((item, index) => {\r\n                                    return <div className={item.isSelected ? 'vdo-outer selected-vdo' : 'vdo-outer'} key={index} onClick={(e) => selectVdo(e, item)}>\r\n                                        <div className=\"vdo-wrap\" >\r\n                                            <img src={item.thumbnail ? item.thumbnail : THUMBNAIL_URL} style={{ width: \"50%\" }} />\r\n                                            <div>{item.title}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                })}\r\n                            </div>\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={() => setActiveStep(3)}>Submit</Button>\r\n                        </div>}\r\n\r\n                        {ActiveStep === 3 && <div>\r\n                            <EnrollCompetition handleClose={(e) => handleClose(e)} changeSelectedVdo={() => setActiveStep(2)} />\r\n                        </div>}\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default CompetitionsDetails\r\n","F:\\Toms\\Business-work\\Boogalu\\src\\Constants\\index.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Contactus\\index.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Admin\\Competition.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Services\\User.service.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Services\\Competition.service.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Services\\EnrollCompetition.service.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Services\\UploadedVideo.service.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\VideoUploader\\index.js",["247"],"import React, { useRef, useState, useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useStoreConsumer } from '../../Providers/StateProvider';\r\nimport { uploadVideo, uploadImage } from \"../../Services/Upload.service\";\r\nimport { saveUploadedVideo } from \"../../Services/UploadedVideo.service\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { THUMBNAIL_URL } from \"../../Constants\";\r\nimport ImageUploader from 'react-images-upload';\r\nimport { disableLoginFlow } from \"../../Actions/LoginFlow\";\r\nexport default function VideoUploader() {\r\n    const history = useHistory();\r\n    const { state, dispatch } = useStoreConsumer();\r\n    const loggedInUser = state.loggedInUser;\r\n    const uploaderRef = useRef(null);\r\n    const [SelectedVideo, setSelectedVideo] = useState({ title: \"\", desc: \"\", file: null });\r\n    const [UploadedVdoUrl, setUploadedVdoUrl] = useState(null);\r\n    const [ThumbnailImage, setThumbnailImage] = useState(null);\r\n\r\n    useEffect(() => {\r\n        dispatch(disableLoginFlow());\r\n    }, [])\r\n\r\n    async function onChangeFile(event) {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        var file = event.target.files[0];\r\n        console.log(file);\r\n        if (file) {\r\n            setSelectedVideo({ ...SelectedVideo, file: null });\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => {\r\n                setSelectedVideo({ ...SelectedVideo, file: reader.result });\r\n            }\r\n            reader.onerror = error => console.error(error);\r\n        }\r\n    }\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setSelectedVideo({ ...SelectedVideo, [prop]: event.target.value });\r\n    };\r\n\r\n    async function uploadSelectedVideo() {\r\n        var thumbnailImage = THUMBNAIL_URL;\r\n        if (ThumbnailImage && ThumbnailImage[0]) {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(ThumbnailImage[0]);\r\n            reader.onload = () => {\r\n                uploadImage(reader.result, 'thumbnail', 'small').subscribe((downloadableUrl) => {\r\n                    thumbnailImage = downloadableUrl;\r\n                })\r\n            }\r\n            reader.onerror = error => console.error(error);\r\n        }\r\n\r\n        uploadVideo(SelectedVideo.file).subscribe((response) => {\r\n            if (response.donePercentage) {\r\n                console.log('Upload is ' + response.donePercentage + '% done');\r\n            }\r\n            if (response.downloadURL && !UploadedVdoUrl) {\r\n                setUploadedVdoUrl(response.downloadURL);\r\n                const uploadObj = {\r\n                    title: SelectedVideo.title,\r\n                    desc: SelectedVideo.desc,\r\n                    url: response.downloadURL,\r\n                    userId: loggedInUser.key,\r\n                    thumbnail: thumbnailImage\r\n                }\r\n                saveUploadedVideo(uploadObj).subscribe((response) => {\r\n                    console.log(\"vedio data saved to db\", response);\r\n                    history.push('/profile');\r\n                })\r\n            }\r\n        })\r\n        console.log(SelectedVideo);\r\n        console.log(loggedInUser);\r\n    }\r\n\r\n    const onThumbnailImgSelect = (picture) => {\r\n        setThumbnailImage(picture);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input id=\"myInput\"\r\n                type=\"file\"\r\n                accept=\"video/mp4,video/x-m4v,video/*\"\r\n                ref={uploaderRef}\r\n                style={{ display: 'none' }}\r\n                onChange={(e) => onChangeFile(e)}\r\n            />\r\n\r\n            {!SelectedVideo.file && <Button\r\n                variant=\"contained\" color=\"primary\"\r\n                onClick={() => { uploaderRef.current.click() }}>Upload Video</Button>}\r\n\r\n            {SelectedVideo.file &&\r\n                <div >\r\n                    <video width=\"400\" controls>\r\n                        <source src={SelectedVideo.file} />\r\n                    </video>\r\n                    <div className=\"input-wrap\">\r\n                        <ImageUploader\r\n                            withIcon={true}\r\n                            buttonText='Select image'\r\n                            onChange={onThumbnailImgSelect}\r\n                            imgExtension={['.jpg', '.gif', '.png', '.gif', '.svg']}\r\n                            maxFileSize={5242880}\r\n                            accept=\"image/*\"\r\n                            withPreview={true}\r\n                            singleImage={true}\r\n                            label=\"Select thumbnail image\"\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        variant=\"contained\" color=\"primary\"\r\n                        onClick={() => { uploaderRef.current.click() }}\r\n                    >Change vdo</Button>\r\n                    <div className=\"input-field-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            id=\"outlined-required-title\"\r\n                            label=\"Video title\"\r\n                            onChange={handleChange('title')}\r\n                            value={SelectedVideo.title}\r\n                            variant=\"outlined\"\r\n                            autoComplete=\"off\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-field-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            id=\"outlined-required-desc\"\r\n                            label=\"Video description\"\r\n                            onChange={handleChange('desc')}\r\n                            value={SelectedVideo.desc}\r\n                            variant=\"outlined\"\r\n                            autoComplete=\"off\"\r\n                        />\r\n                    </div>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={(e) => uploadSelectedVideo(e)}>Upload</Button>\r\n                </div>}\r\n        </div>\r\n    )\r\n}","F:\\Toms\\Business-work\\Boogalu\\src\\Services\\Upload.service.js",["248","249"],"import { Observable } from 'rxjs';\r\nimport firebase from './firebase';\r\nconst storageRef = firebase.storage().ref();\r\n\r\nconst BASE_PATH = '/uploads';\r\nvar FILE_NAME = '';\r\nvar FILE_PATH = '';\r\n// from ==> competition or user upload\r\n// type => small or large\r\nexport function uploadImage(image, from, type) {\r\n\r\n    let date = new Date();\r\n    let id = date.getTime().toString();\r\n    FILE_NAME = (type ? type : '') + 'pic' + id + '.jpg';\r\n    FILE_PATH = BASE_PATH + '/' + from + '/' + FILE_NAME;\r\n\r\n    let uploadTask = storageRef.child(FILE_PATH).putString(image, 'data_url');\r\n\r\n    return new Observable((observer) => {\r\n        uploadTask.on('state_changed',\r\n            (snapshot) => {\r\n                let progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                console.log('Upload is ' + progress + '% done');\r\n                switch (snapshot.state) {\r\n                    case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                        console.log('Upload is paused');\r\n                        break;\r\n                    case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                        console.log('Upload is running');\r\n                        break;\r\n                }\r\n            }, (error) => {\r\n                console.log(error);\r\n            }, () => {\r\n                uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\r\n                    observer.next(downloadURL);\r\n                });\r\n            });\r\n    });\r\n}\r\n\r\nexport function deleteImage(imageUrl) {\r\n    storageRef.refFromURL(imageUrl).delete();\r\n}\r\n\r\nexport function uploadVideo(video) {\r\n\r\n    let date = new Date();\r\n    let id = date.getTime().toString();\r\n    FILE_NAME = 'user' + id + '.mp4';\r\n    FILE_PATH = BASE_PATH + '/video/' + FILE_NAME;\r\n\r\n    let uploadTask = storageRef.child(FILE_PATH).putString(video, 'data_url');\r\n\r\n    return new Observable((observer) => {\r\n        uploadTask.on('state_changed',\r\n            (snapshot) => {\r\n                let progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                // console.log('Upload is ' + progress + '% done');\r\n                observer.next({ donePercentage: progress });\r\n                switch (snapshot.state) {\r\n                    case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                        console.log('Upload is paused');\r\n                        break;\r\n                    case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                        console.log('Upload is running');\r\n                        break;\r\n                }\r\n            }, (error) => {\r\n                console.log(error);\r\n            }, () => {\r\n                uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\r\n                    observer.next({ downloadURL });\r\n                });\r\n            });\r\n    });\r\n}\r\n\r\nexport function deleteVideo(videoUrl) {\r\n    storageRef.refFromURL(videoUrl).delete();\r\n}\r\n","F:\\Toms\\Business-work\\Boogalu\\src\\Services\\Utils.js",["250","251","252"],"export function formatTime(time) {\r\n    time = new Date(time);\r\n    const hour24 = time.getHours();\r\n    let minutes = (time.getMinutes() === 0) ? '00' : time.getMinutes();\r\n    minutes = (minutes > 0 && minutes < 10) ? `0${minutes}` : minutes;\r\n    const ampm = (hour24 >= 12) ? 'PM' : 'AM';\r\n    let hour = hour24 % 12 || 12;\r\n    //append zero is hour is single digit\r\n    if (hour < 10) {\r\n        hour = `0${hour}`;\r\n    }\r\n    return `${hour}:${minutes} ${ampm}`;\r\n};\r\n\r\nexport function formatDate(date, status) {\r\n    date = new Date(date);\r\n    var monthNames = [\r\n        \"January\", \"February\", \"March\",\r\n        \"April\", \"May\", \"June\", \"July\",\r\n        \"August\", \"September\", \"October\",\r\n        \"November\", \"December\"\r\n    ];\r\n    let day = date.getDate();\r\n    let monthIndex = date.getMonth();\r\n    let year = date.getFullYear();\r\n    if (status == 3) return day + 'th ' + monthNames[monthIndex] + \" \" + year;\r\n    if (status == 2) return day + 'th ' + monthNames[monthIndex];\r\n    if (status == 1) return day;\r\n};\r\n\r\nexport function timeStampToNewDate(timeStamp) {\r\n    return new Date(timeStamp.seconds * 1000 + Math.round(timeStamp.nanoseconds / 1000000));\r\n}\r\n\r\nexport function toBase64(file) {\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n}","F:\\Toms\\Business-work\\Boogalu\\src\\Actions\\LoginFlow\\index.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Actions\\Competition\\index.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Services\\firebase.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Database\\index.js",["253"],"import { data } from 'jquery';\r\nimport firebase from '../Services/firebase';\r\nconst database = firebase.firestore();\r\nexport default database;","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\EnrollCompetition\\index.js",["254","255"],"import React, { useState } from 'react'\r\nimport ArrowRightSharpIcon from '@material-ui/icons/ArrowRightSharp';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { THUMBNAIL_URL } from '../../Constants';\r\nimport { useStoreConsumer } from '../../Providers/StateProvider';\r\nimport { saveCompetition } from \"../../Services/EnrollCompetition.service\";\r\n\r\nfunction EnrollCompetition({ handleClose, changeSelectedVdo }) {\r\n\r\n    const history = useHistory();\r\n    const { state, dispatch } = useStoreConsumer();\r\n    const [AgeGroup, setAgeGroup] = useState('');\r\n    const loggedInUser = state.loggedInUser;\r\n    const competitionDetails = state.activeCompetition;\r\n    const SelectedVdo = competitionDetails.selectedVideo;\r\n    console.log(competitionDetails);\r\n    const onAgeGroupChange = (groupValue) => {\r\n        setAgeGroup(groupValue);\r\n    }\r\n\r\n    const submitForCompetition = () => {\r\n        const competitionObj = {\r\n            compId: competitionDetails.key,\r\n            compName: competitionDetails.name,\r\n            compImg: competitionDetails.img,\r\n            userId: loggedInUser.key,\r\n            vdo: {\r\n                key: competitionDetails.selectedVideo.key,\r\n                title: competitionDetails.selectedVideo.title,\r\n                thumbnail: competitionDetails.selectedVideo.thumbnail,\r\n                url: competitionDetails.selectedVideo.url,\r\n                desc: competitionDetails.selectedVideo.desc,\r\n            },\r\n            ageGroup: AgeGroup,\r\n            status: 'Submited'\r\n        }\r\n        console.log(competitionObj)\r\n        saveCompetition(competitionObj).subscribe((response) => {\r\n            console.log('vdo uploaded for competition suceess');\r\n            history.push('/profile');\r\n        })\r\n        // handleClose();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 id=\"title\">Enroll for {competitionDetails.name}</h2>\r\n            <img src={competitionDetails.img} alt={competitionDetails.name} style={{ width: '20%' }} />\r\n            <p id=\"description\">{competitionDetails.desc}</p>\r\n            <div className=\"userdata\">\r\n                <div>Name:<span>{loggedInUser.name}</span></div>\r\n                <div>Phone:<span>{loggedInUser.phone}</span></div>\r\n                <div>Email:<span>{loggedInUser.email}</span></div>\r\n                <div>Gender:<span>{loggedInUser.gender}</span></div>\r\n            </div>\r\n            <div className=\"age-group-dropdown\">\r\n                <FormControl variant=\"outlined\" className=\"input-field\">\r\n                    <InputLabel id=\"select-outlined-label\">Select Age Group</InputLabel>\r\n                    <Select\r\n                        labelId=\"select-outlined-label\"\r\n                        id=\"select-outlined\"\r\n                        value={AgeGroup}\r\n                        onChange={(e) => onAgeGroupChange(e.target.value)}\r\n                        label=\"Select Age Group\"\r\n                    >\r\n                        <MenuItem value=\"Age 4 to 13 years\">Age 4 to 13 years</MenuItem>\r\n                        <MenuItem value=\"Age 14 to 17 years\">Age 14 to 17 years</MenuItem>\r\n                        <MenuItem value=\"Age 18 and above\">Age 18 and above</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            {SelectedVdo && <div className=\"selected-vdo\">\r\n                <div>Selected video for competition -</div>\r\n                <div onClick={() => changeSelectedVdo()}>Change</div>\r\n                <div className=\"vdo-wrap\" >\r\n                    <img src={SelectedVdo.thumbnail ? SelectedVdo.thumbnail : THUMBNAIL_URL} style={{ width: \"50%\" }} />\r\n                    <div>{SelectedVdo.title}</div>\r\n                </div>\r\n            </div>}\r\n            <Button variant=\"contained\" color=\"primary\" onClick={() => submitForCompetition()}>Enroll Competition<ArrowRightSharpIcon /></Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EnrollCompetition\r\n",{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","severity":1,"message":"261","line":2,"column":50,"nodeType":"262","messageId":"263","endLine":2,"endColumn":54},{"ruleId":"260","severity":1,"message":"264","line":5,"column":7,"nodeType":"262","messageId":"263","endLine":5,"endColumn":24},{"ruleId":"260","severity":1,"message":"265","line":1,"column":17,"nodeType":"262","messageId":"263","endLine":1,"endColumn":25},{"ruleId":"266","severity":1,"message":"267","line":26,"column":8,"nodeType":"268","endLine":26,"endColumn":10,"suggestions":"269"},{"ruleId":"270","severity":1,"message":"271","line":61,"column":66,"nodeType":"272","endLine":61,"endColumn":81},{"ruleId":"273","severity":1,"message":"274","line":78,"column":29,"nodeType":"275","endLine":78,"endColumn":83},{"ruleId":"270","severity":1,"message":"271","line":84,"column":114,"nodeType":"272","endLine":84,"endColumn":129},{"ruleId":"270","severity":1,"message":"271","line":90,"column":110,"nodeType":"272","endLine":90,"endColumn":125},{"ruleId":"270","severity":1,"message":"271","line":96,"column":109,"nodeType":"272","endLine":96,"endColumn":124},{"ruleId":"260","severity":1,"message":"276","line":18,"column":21,"nodeType":"262","messageId":"263","endLine":18,"endColumn":31},{"ruleId":"266","severity":1,"message":"277","line":32,"column":8,"nodeType":"268","endLine":32,"endColumn":28,"suggestions":"278"},{"ruleId":"279","severity":1,"message":"280","line":60,"column":28,"nodeType":"281","messageId":"282","endLine":60,"endColumn":30},{"ruleId":"283","severity":1,"message":"284","line":153,"column":9,"nodeType":"285","messageId":"286","endLine":210,"endColumn":10},{"ruleId":"279","severity":1,"message":"287","line":170,"column":52,"nodeType":"281","messageId":"282","endLine":170,"endColumn":54},{"ruleId":"279","severity":1,"message":"287","line":171,"column":57,"nodeType":"281","messageId":"282","endLine":171,"endColumn":59},{"ruleId":"279","severity":1,"message":"287","line":195,"column":52,"nodeType":"281","messageId":"282","endLine":195,"endColumn":54},{"ruleId":"279","severity":1,"message":"287","line":196,"column":57,"nodeType":"281","messageId":"282","endLine":196,"endColumn":59},{"ruleId":"288","severity":1,"message":"289","line":306,"column":17,"nodeType":"275","endLine":306,"endColumn":36},{"ruleId":"260","severity":1,"message":"290","line":59,"column":11,"nodeType":"262","messageId":"263","endLine":59,"endColumn":18},{"ruleId":"260","severity":1,"message":"291","line":62,"column":20,"nodeType":"262","messageId":"263","endLine":62,"endColumn":28},{"ruleId":"260","severity":1,"message":"292","line":67,"column":32,"nodeType":"262","messageId":"263","endLine":67,"endColumn":53},{"ruleId":"266","severity":1,"message":"293","line":76,"column":8,"nodeType":"268","endLine":76,"endColumn":10,"suggestions":"294"},{"ruleId":"288","severity":1,"message":"289","line":167,"column":41,"nodeType":"275","endLine":167,"endColumn":74},{"ruleId":"279","severity":1,"message":"287","line":27,"column":66,"nodeType":"281","messageId":"282","endLine":27,"endColumn":68},{"ruleId":"279","severity":1,"message":"287","line":27,"column":113,"nodeType":"281","messageId":"282","endLine":27,"endColumn":115},{"ruleId":"279","severity":1,"message":"280","line":56,"column":34,"nodeType":"281","messageId":"282","endLine":56,"endColumn":36},{"ruleId":"266","severity":1,"message":"267","line":76,"column":8,"nodeType":"268","endLine":76,"endColumn":18,"suggestions":"295"},{"ruleId":"273","severity":1,"message":"296","line":208,"column":25,"nodeType":"275","endLine":208,"endColumn":89},{"ruleId":"260","severity":1,"message":"297","line":5,"column":13,"nodeType":"262","messageId":"263","endLine":5,"endColumn":14},{"ruleId":"260","severity":1,"message":"291","line":9,"column":20,"nodeType":"262","messageId":"263","endLine":9,"endColumn":28},{"ruleId":"298","severity":1,"message":"299","line":24,"column":25,"nodeType":"275","endLine":24,"endColumn":223},{"ruleId":"298","severity":1,"message":"299","line":27,"column":25,"nodeType":"275","endLine":27,"endColumn":223},{"ruleId":"298","severity":1,"message":"299","line":30,"column":25,"nodeType":"275","endLine":30,"endColumn":223},{"ruleId":"260","severity":1,"message":"265","line":1,"column":17,"nodeType":"262","messageId":"263","endLine":1,"endColumn":25},{"ruleId":"260","severity":1,"message":"291","line":6,"column":20,"nodeType":"262","messageId":"263","endLine":6,"endColumn":28},{"ruleId":"279","severity":1,"message":"280","line":68,"column":38,"nodeType":"281","messageId":"282","endLine":68,"endColumn":40},{"ruleId":"300","severity":1,"message":"301","line":72,"column":69,"nodeType":"302","messageId":"303","endLine":72,"endColumn":71},{"ruleId":"300","severity":1,"message":"301","line":73,"column":51,"nodeType":"302","messageId":"303","endLine":73,"endColumn":53},{"ruleId":"279","severity":1,"message":"280","line":76,"column":52,"nodeType":"281","messageId":"282","endLine":76,"endColumn":54},{"ruleId":"279","severity":1,"message":"280","line":78,"column":46,"nodeType":"281","messageId":"282","endLine":78,"endColumn":48},{"ruleId":"300","severity":1,"message":"301","line":79,"column":60,"nodeType":"302","messageId":"303","endLine":79,"endColumn":62},{"ruleId":"266","severity":1,"message":"304","line":89,"column":8,"nodeType":"268","endLine":89,"endColumn":20,"suggestions":"305"},{"ruleId":"279","severity":1,"message":"280","line":127,"column":34,"nodeType":"281","messageId":"282","endLine":127,"endColumn":36},{"ruleId":"279","severity":1,"message":"287","line":136,"column":48,"nodeType":"281","messageId":"282","endLine":136,"endColumn":50},{"ruleId":"279","severity":1,"message":"287","line":137,"column":48,"nodeType":"281","messageId":"282","endLine":137,"endColumn":50},{"ruleId":"283","severity":1,"message":"284","line":156,"column":9,"nodeType":"285","messageId":"286","endLine":162,"endColumn":10},{"ruleId":"283","severity":1,"message":"284","line":166,"column":9,"nodeType":"285","messageId":"286","endLine":172,"endColumn":10},{"ruleId":"300","severity":1,"message":"301","line":179,"column":45,"nodeType":"302","messageId":"303","endLine":179,"endColumn":47},{"ruleId":"279","severity":1,"message":"280","line":183,"column":28,"nodeType":"281","messageId":"282","endLine":183,"endColumn":30},{"ruleId":"300","severity":1,"message":"301","line":190,"column":69,"nodeType":"302","messageId":"303","endLine":190,"endColumn":71},{"ruleId":"300","severity":1,"message":"301","line":191,"column":47,"nodeType":"302","messageId":"303","endLine":191,"endColumn":49},{"ruleId":"279","severity":1,"message":"280","line":194,"column":48,"nodeType":"281","messageId":"282","endLine":194,"endColumn":50},{"ruleId":"279","severity":1,"message":"280","line":196,"column":42,"nodeType":"281","messageId":"282","endLine":196,"endColumn":44},{"ruleId":"300","severity":1,"message":"301","line":197,"column":56,"nodeType":"302","messageId":"303","endLine":197,"endColumn":58},{"ruleId":"279","severity":1,"message":"280","line":207,"column":34,"nodeType":"281","messageId":"282","endLine":207,"endColumn":36},{"ruleId":"279","severity":1,"message":"280","line":214,"column":25,"nodeType":"281","messageId":"282","endLine":214,"endColumn":27},{"ruleId":"279","severity":1,"message":"280","line":336,"column":64,"nodeType":"281","messageId":"282","endLine":336,"endColumn":66},{"ruleId":"279","severity":1,"message":"280","line":357,"column":29,"nodeType":"281","messageId":"282","endLine":357,"endColumn":31},{"ruleId":"279","severity":1,"message":"280","line":365,"column":77,"nodeType":"281","messageId":"282","endLine":365,"endColumn":79},{"ruleId":"279","severity":1,"message":"280","line":366,"column":45,"nodeType":"281","messageId":"282","endLine":366,"endColumn":47},{"ruleId":"279","severity":1,"message":"287","line":372,"column":25,"nodeType":"281","messageId":"282","endLine":372,"endColumn":27},{"ruleId":"279","severity":1,"message":"280","line":553,"column":37,"nodeType":"281","messageId":"282","endLine":553,"endColumn":39},{"ruleId":"260","severity":1,"message":"306","line":1,"column":27,"nodeType":"262","messageId":"263","endLine":1,"endColumn":33},{"ruleId":"260","severity":1,"message":"307","line":1,"column":35,"nodeType":"262","messageId":"263","endLine":1,"endColumn":44},{"ruleId":"260","severity":1,"message":"308","line":6,"column":28,"nodeType":"262","messageId":"263","endLine":6,"endColumn":45},{"ruleId":"279","severity":1,"message":"287","line":13,"column":46,"nodeType":"281","messageId":"282","endLine":13,"endColumn":48},{"ruleId":"279","severity":1,"message":"287","line":17,"column":36,"nodeType":"281","messageId":"282","endLine":17,"endColumn":38},{"ruleId":"266","severity":1,"message":"309","line":20,"column":8,"nodeType":"268","endLine":20,"endColumn":10,"suggestions":"310"},{"ruleId":"279","severity":1,"message":"287","line":32,"column":76,"nodeType":"281","messageId":"282","endLine":32,"endColumn":78},{"ruleId":"266","severity":1,"message":"311","line":33,"column":8,"nodeType":"268","endLine":33,"endColumn":20,"suggestions":"312"},{"ruleId":"300","severity":1,"message":"301","line":54,"column":32,"nodeType":"302","messageId":"303","endLine":54,"endColumn":34},{"ruleId":"279","severity":1,"message":"287","line":55,"column":26,"nodeType":"281","messageId":"282","endLine":55,"endColumn":28},{"ruleId":"279","severity":1,"message":"287","line":95,"column":37,"nodeType":"281","messageId":"282","endLine":95,"endColumn":39},{"ruleId":"279","severity":1,"message":"287","line":98,"column":38,"nodeType":"281","messageId":"282","endLine":98,"endColumn":40},{"ruleId":"279","severity":1,"message":"287","line":98,"column":57,"nodeType":"281","messageId":"282","endLine":98,"endColumn":59},{"ruleId":"279","severity":1,"message":"287","line":101,"column":37,"nodeType":"281","messageId":"282","endLine":101,"endColumn":39},{"ruleId":"288","severity":1,"message":"289","line":160,"column":45,"nodeType":"275","endLine":160,"endColumn":131},{"ruleId":"266","severity":1,"message":"313","line":22,"column":8,"nodeType":"268","endLine":22,"endColumn":10,"suggestions":"314"},{"ruleId":"283","severity":1,"message":"284","line":24,"column":17,"nodeType":"285","messageId":"286","endLine":31,"endColumn":18},{"ruleId":"283","severity":1,"message":"284","line":61,"column":17,"nodeType":"285","messageId":"286","endLine":68,"endColumn":18},{"ruleId":"279","severity":1,"message":"287","line":26,"column":16,"nodeType":"281","messageId":"282","endLine":26,"endColumn":18},{"ruleId":"279","severity":1,"message":"287","line":27,"column":16,"nodeType":"281","messageId":"282","endLine":27,"endColumn":18},{"ruleId":"279","severity":1,"message":"287","line":28,"column":16,"nodeType":"281","messageId":"282","endLine":28,"endColumn":18},{"ruleId":"260","severity":1,"message":"315","line":1,"column":10,"nodeType":"262","messageId":"263","endLine":1,"endColumn":14},{"ruleId":"260","severity":1,"message":"291","line":16,"column":20,"nodeType":"262","messageId":"263","endLine":16,"endColumn":28},{"ruleId":"288","severity":1,"message":"289","line":81,"column":21,"nodeType":"275","endLine":81,"endColumn":121},"no-native-reassign",["316"],"no-negated-in-lhs",["317"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'loggedInUserState' is assigned a value but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history?.location?.pathname'. Either include it or remove the dependency array.","ArrayExpression",["318"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'signupUser' is defined but never used.","React Hook useEffect has a missing dependency: 'signinUser'. Either include it or remove the dependency array.",["319"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Expected '===' and instead saw '=='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'classes' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'setUserLikedVideoList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loggedInUser.key'. Either include it or remove the dependency array.",["320"],["321"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'$' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'stepData'. Either include it or remove the dependency array.",["322"],"'useRef' is defined but never used.","'useEffect' is defined but never used.","'setActiveCategory' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'state.currentLoginFlow'. Either include them or remove the dependency array.",["323"],"React Hook useEffect has missing dependencies: 'loggedInUser.email', 'loggedInUser.key', and 'userUploadedVdos.length'. Either include them or remove the dependency array.",["324"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["325"],"'data' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},"Update the dependencies array to be: [history?.location?.pathname]",{"range":"342","text":"343"},"Update the dependencies array to be: [signinUser, thirdPartyResponse]",{"range":"344","text":"345"},"Update the dependencies array to be: [loggedInUser.key]",{"range":"346","text":"347"},"Update the dependencies array to be: [history?.location?.pathname, isMobile]",{"range":"348","text":"349"},"Update the dependencies array to be: [activeStep, stepData]",{"range":"350","text":"351"},"Update the dependencies array to be: [dispatch, state.currentLoginFlow]",{"range":"352","text":"353"},"Update the dependencies array to be: [ActiveStep, loggedInUser.email, loggedInUser.key, userUploadedVdos.length]",{"range":"354","text":"355"},"Update the dependencies array to be: [dispatch]",{"range":"356","text":"357"},[950,952],"[history?.location?.pathname]",[1730,1750],"[signinUser, thirdPartyResponse]",[2919,2921],"[loggedInUser.key]",[3135,3145],"[history?.location?.pathname, isMobile]",[4355,4367],"[activeStep, stepData]",[931,933],"[dispatch, state.currentLoginFlow]",[1700,1712],"[ActiveStep, loggedInUser.email, loggedInUser.key, userUploadedVdos.length]",[1099,1101],"[dispatch]"]