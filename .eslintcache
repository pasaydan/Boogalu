[{"F:\\Toms\\Business-work\\Boogalu\\src\\index.js":"1","F:\\Toms\\Business-work\\Boogalu\\src\\reportWebVitals.js":"2","F:\\Toms\\Business-work\\Boogalu\\src\\Providers\\StateProvider.js":"3","F:\\Toms\\Business-work\\Boogalu\\src\\App.js":"4","F:\\Toms\\Business-work\\Boogalu\\src\\Services\\LocalstorageCache.js":"5","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Footer\\index.js":"6","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\EditProfile\\EditProfile.js":"7","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Login\\Login.js":"8","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Navigation\\index.js":"9","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Profile\\Profile.js":"10","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Admin\\Competition.js":"11","F:\\Toms\\Business-work\\Boogalu\\src\\Reducers\\index.js":"12","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Homepage\\index.js":"13","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Splash\\index.js":"14","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Signup\\index.js":"15","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Contactus\\index.js":"16","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Upcoming\\index.js":"17","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Competitions\\index.js":"18","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\VideoUploader\\index.js":"19","F:\\Toms\\Business-work\\Boogalu\\src\\Services\\User.service.js":"20","F:\\Toms\\Business-work\\Boogalu\\src\\Services\\Competition.service.js":"21","F:\\Toms\\Business-work\\Boogalu\\src\\Services\\UploadedVideo.service.js":"22","F:\\Toms\\Business-work\\Boogalu\\src\\Services\\Utils.js":"23","F:\\Toms\\Business-work\\Boogalu\\src\\Services\\Upload.service.js":"24","F:\\Toms\\Business-work\\Boogalu\\src\\Services\\EnrollCompetition.service.js":"25","F:\\Toms\\Business-work\\Boogalu\\src\\Actions\\User\\index.js":"26","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Vedio\\Video.js":"27","F:\\Toms\\Business-work\\Boogalu\\src\\Data\\LessonsCategory.js":"28","F:\\Toms\\Business-work\\Boogalu\\src\\Data\\RegistrationStepData.js":"29","F:\\Toms\\Business-work\\Boogalu\\src\\Actions\\LoginFlow\\index.js":"30","F:\\Toms\\Business-work\\Boogalu\\src\\Actions\\Competition\\index.js":"31","F:\\Toms\\Business-work\\Boogalu\\src\\Services\\firebase.js":"32","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\CompetitionsDetails\\index.js":"33","F:\\Toms\\Business-work\\Boogalu\\src\\Constants\\index.js":"34","F:\\Toms\\Business-work\\Boogalu\\src\\Database\\index.js":"35","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\EnrollCompetition\\index.js":"36","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Admin\\Subscription.js":"37","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Subscriptions\\index.js":"38","F:\\Toms\\Business-work\\Boogalu\\src\\Services\\Subscription.service.js":"39","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\BuySubscription\\index.js":"40","F:\\Toms\\Business-work\\Boogalu\\src\\Actions\\Subscription\\index.js":"41"},{"size":737,"mtime":1610191707084,"results":"42","hashOfConfig":"43"},{"size":375,"mtime":1610191707092,"results":"44","hashOfConfig":"43"},{"size":1002,"mtime":1611725424904,"results":"45","hashOfConfig":"43"},{"size":3367,"mtime":1612009015711,"results":"46","hashOfConfig":"43"},{"size":251,"mtime":1610191707084,"results":"47","hashOfConfig":"43"},{"size":4562,"mtime":1611768340593,"results":"48","hashOfConfig":"43"},{"size":13009,"mtime":1611725424890,"results":"49","hashOfConfig":"43"},{"size":14414,"mtime":1612009015715,"results":"50","hashOfConfig":"43"},{"size":11383,"mtime":1611993980568,"results":"51","hashOfConfig":"43"},{"size":9431,"mtime":1611993980569,"results":"52","hashOfConfig":"43"},{"size":7832,"mtime":1612009015714,"results":"53","hashOfConfig":"43"},{"size":1059,"mtime":1612009015729,"results":"54","hashOfConfig":"43"},{"size":4951,"mtime":1611725424892,"results":"55","hashOfConfig":"43"},{"size":351,"mtime":1611462124467,"results":"56","hashOfConfig":"43"},{"size":29689,"mtime":1612009015715,"results":"57","hashOfConfig":"43"},{"size":2095,"mtime":1611674526188,"results":"58","hashOfConfig":"43"},{"size":1172,"mtime":1611468791321,"results":"59","hashOfConfig":"43"},{"size":3643,"mtime":1611993980431,"results":"60","hashOfConfig":"43"},{"size":9313,"mtime":1611993980607,"results":"61","hashOfConfig":"43"},{"size":2183,"mtime":1612009015730,"results":"62","hashOfConfig":"43"},{"size":3117,"mtime":1611725424905,"results":"63","hashOfConfig":"43"},{"size":1567,"mtime":1611725424908,"results":"64","hashOfConfig":"43"},{"size":1447,"mtime":1611725424909,"results":"65","hashOfConfig":"43"},{"size":3006,"mtime":1611725424906,"results":"66","hashOfConfig":"43"},{"size":3387,"mtime":1611993980668,"results":"67","hashOfConfig":"43"},{"size":403,"mtime":1610191706906,"results":"68","hashOfConfig":"43"},{"size":634,"mtime":1611469409351,"results":"69","hashOfConfig":"43"},{"size":12210,"mtime":1611462124486,"results":"70","hashOfConfig":"43"},{"size":7647,"mtime":1610191706964,"results":"71","hashOfConfig":"43"},{"size":320,"mtime":1611725424874,"results":"72","hashOfConfig":"43"},{"size":193,"mtime":1611725424866,"results":"73","hashOfConfig":"43"},{"size":1017,"mtime":1611725424909,"results":"74","hashOfConfig":"43"},{"size":16337,"mtime":1612033661761,"results":"75","hashOfConfig":"43"},{"size":665,"mtime":1612009015725,"results":"76","hashOfConfig":"43"},{"size":142,"mtime":1611725424900,"results":"77","hashOfConfig":"43"},{"size":5185,"mtime":1612034544487,"results":"78","hashOfConfig":"43"},{"size":6699,"mtime":1612009015715,"results":"79","hashOfConfig":"43"},{"size":4291,"mtime":1612030664723,"results":"80","hashOfConfig":"43"},{"size":2649,"mtime":1612009015730,"results":"81","hashOfConfig":"43"},{"size":4995,"mtime":1612031853340,"results":"82","hashOfConfig":"43"},{"size":196,"mtime":1612009015708,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g3scqe",{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"101"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"101"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Toms\\Business-work\\Boogalu\\src\\index.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\reportWebVitals.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Providers\\StateProvider.js",["170"],"F:\\Toms\\Business-work\\Boogalu\\src\\App.js",["171"],"F:\\Toms\\Business-work\\Boogalu\\src\\Services\\LocalstorageCache.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Footer\\index.js",["172","173","174","175","176","177","178"],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\EditProfile\\EditProfile.js",["179","180","181"],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Login\\Login.js",["182","183","184","185","186","187","188","189","190"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStoreConsumer } from '../../Providers/StateProvider';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport ArrowRightSharpIcon from '@material-ui/icons/ArrowRightSharp';\r\nimport bgImg from '../../Images/bg1.svg';\r\nimport { loginUser, signupUser } from '../../Actions/User/index';\r\nimport { getUserByEmail, getUserByPhone } from \"../../Services/User.service\";\r\nimport VideoUploader from \"../VideoUploader\";\r\nimport * as $ from 'jquery';\r\n\r\nexport default function Login() {\r\n    const { state, dispatch } = useStoreConsumer();\r\n    const history = useHistory();\r\n    const [loginCred, setloginCred] = useState({ username: \"\", password: \"\", showPassWord: false })\r\n    const [LoginError, setLoginError] = useState(null);\r\n    const [thirdPartyResponse, setThirdPartyResponse] = useState({ isLogginSuccess: false, data: null, source: '' })\r\n    const [openVdoUploadModal, setOpenVdoUploadModal] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (thirdPartyResponse.source === 'Facebook') signinUser('', 'Facebook');\r\n        if (thirdPartyResponse.source === 'Google') signinUser('', 'Google');\r\n    }, [thirdPartyResponse]);\r\n\r\n    useEffect(() => {\r\n        $('html,body').animate({\r\n            scrollTop: 0\r\n        }, 500);\r\n    }, [])\r\n\r\n    const setLoginResponseToServer = () => {\r\n        // notify server that user is loggedin\r\n        console.log('Save loggin user to db')\r\n\r\n    }\r\n    const successResponseGoogle = function (response) {\r\n        console.log(response);\r\n        let loginResponse = {\r\n            data: {\r\n                name: response.profileObj.name,\r\n                email: response.profileObj.email,\r\n                token: response.googleId,\r\n                profileImage: response.profileObj.imageUrl,\r\n            },\r\n            source: 'Google'\r\n        }\r\n        setThirdPartyResponse(loginResponse);\r\n    }\r\n\r\n    const failureResponseGoogle = function (response) {\r\n        if (response.error != \"idpiframe_initialization_failed\") {\r\n            setLoginError('Sorry there was a problem with your google login request.')\r\n        }\r\n    }\r\n\r\n    const responseFacebook = (response) => {\r\n        console.log(response);\r\n        if (response && response.userID) {\r\n            let loginResponse = {\r\n                isLogginSuccess: true,\r\n                data: response,\r\n                source: 'Facebook'\r\n            }\r\n            setThirdPartyResponse(loginResponse);\r\n        } else {\r\n            setLoginError('Sorry there was a problem with your facebook login request.')\r\n            console.log(\"facebook login error\", response);\r\n        }\r\n    }\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setLoginError(null);\r\n        setloginCred({ ...loginCred, [prop]: event.target.value });\r\n    };\r\n\r\n    const showPassword = () => {\r\n        setloginCred({ ...loginCred, showPassWord: (loginCred.showPassWord ? false : true) })\r\n    }\r\n\r\n    const checkForUserPhone = (phone) => {\r\n        return new Promise((res, rej) => {\r\n            getUserByPhone(phone).subscribe((data) => {\r\n                if (data && data.length) res(data);\r\n                else res(null);\r\n            })\r\n        })\r\n    }\r\n\r\n    const checkForUserEmail = (email) => {\r\n        return new Promise((res, rej) => {\r\n            getUserByEmail(email).subscribe((data) => {\r\n                if (data && data.length) res(data);\r\n                else res(null);\r\n            })\r\n        })\r\n    }\r\n\r\n    const getUserLoginData = (userData) => {\r\n        return new Promise((res, rej) => {\r\n            if (thirdPartyResponse.data && thirdPartyResponse.data.email) {\r\n                // with gmail or fb flow\r\n                getUserByEmail(userData.email).subscribe((isRegisteredUser) => {\r\n                    if (isRegisteredUser.length) {\r\n                        res(isRegisteredUser[0]);\r\n                    } else {\r\n                        setLoginError('Please enter correct credentials.')\r\n                        rej({ ...userData, isRegistered: false });\r\n                    }\r\n                })\r\n            } else {\r\n                // without gmail fb flow\r\n                checkForUserEmail(userData.emailOrPhone).then((isRegisteredUser) => {\r\n                    if (isRegisteredUser && isRegisteredUser.length) {\r\n                        if (isRegisteredUser[0].password === userData.password) res(isRegisteredUser[0]);\r\n                        else {\r\n                            setLoginError('Please enter correct credentials.')\r\n                            rej();\r\n                        }\r\n                    } else {\r\n                        checkForUserPhone(userData.emailOrPhone).then((isRegisteredUser) => {\r\n                            if (isRegisteredUser && isRegisteredUser.length) {\r\n                                if (isRegisteredUser[0].password === userData.password) res(isRegisteredUser[0]);\r\n                                else {\r\n                                    setLoginError('Please enter correct credentials.')\r\n                                    rej();\r\n                                }\r\n                            } else {\r\n                                setLoginError('Please enter correct credentials.')\r\n                                rej();\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n    const signinUser = (e, status) => {\r\n        setLoginError(null);\r\n        let userData = {};\r\n        switch (status) {\r\n            case 'cred':\r\n                setThirdPartyResponse({ isLogginSuccess: false, data: null, source: '' })\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                userData = {\r\n                    ...loginCred,\r\n                    phone: loginCred.username,\r\n                    email: loginCred.username,\r\n                    emailOrPhone: loginCred.username\r\n                }\r\n                getUserLoginData(userData)\r\n                    .then((data) => {\r\n                        //user is registered\r\n                        setLoginResponseToServer();\r\n                        data.source = 'Website';\r\n                        dispatch(loginUser(data));\r\n                        if (state.currentLoginFlow == 'competition') history.push('/competitions');\r\n                        else if (state.currentLoginFlow == 'subscription') history.push('/subscription');\r\n                        else if (state.currentLoginFlow == 'upload-video') setOpenVdoUploadModal(true);\r\n                        else history.push('/')\r\n                    })\r\n                    .catch((data) => {\r\n                        if (data) {\r\n                            //user not registered\r\n                            history.push({\r\n                                pathname: '/register',\r\n                                state: data\r\n                            })\r\n                        }\r\n                    })\r\n                break;\r\n            case 'Google': case 'Facebook':\r\n                userData = {\r\n                    name: thirdPartyResponse.data.name,\r\n                    email: thirdPartyResponse.data.email,\r\n                }\r\n                getUserLoginData(userData)\r\n                    .then((data) => {\r\n                        //user is registered\r\n                        setLoginResponseToServer();\r\n                        data.source = thirdPartyResponse.source;\r\n                        dispatch(loginUser(data));\r\n                        if (state.currentLoginFlow == 'competition') history.push('/competitions');\r\n                        else if (state.currentLoginFlow == 'subscription') history.push('/subscription');\r\n                        else if (state.currentLoginFlow == 'upload-video') setOpenVdoUploadModal(true);\r\n                        else history.push('/')\r\n                    })\r\n                    .catch((data) => {\r\n                        if (data) {\r\n                            data.source = thirdPartyResponse.source;\r\n                            //user not registered\r\n                            history.push({\r\n                                pathname: '/register',\r\n                                state: data\r\n                            })\r\n                        }\r\n                    })\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-wrap clearfix\">\r\n            <form className=\"form-wrap clearfix\" onSubmit={(e) => signinUser(e, 'cred')}>\r\n                <div className=\"heading-outer\">\r\n                    <div className=\"heading1\">Welcome Back!</div>\r\n                    <div className=\"heading2\">Login to your existant account of Choreoculture.</div>\r\n                </div>\r\n                <div className=\"form-outer clearfix\">\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            id=\"outlined-required-username\"\r\n                            label=\"Username / Email / Phone\"\r\n                            onChange={handleChange('username')}\r\n                            value={loginCred.username}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <FormControl className=\"\" variant=\"outlined\" style={{ width: '100%' }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                required\r\n                                id=\"outlined-adornment-password\"\r\n                                type={loginCred.showPassWord ? 'text' : 'password'}\r\n                                value={loginCred.password}\r\n                                onChange={handleChange('password')}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={showPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {loginCred.showPassWord ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                labelWidth={70}\r\n                            />\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"action-wrap\">\r\n                        {LoginError && <div className=\"login-error\">\r\n                            {LoginError}\r\n                        </div>}\r\n                        <div className=\"submit-btn clearfix\">\r\n                            <Button variant=\"contained\" type=\"submit\" color=\"primary\">Sign In\r\n                            <ArrowRightSharpIcon />\r\n                            </Button>\r\n                        </div>\r\n                        <div className=\"forgot-password clearfix\">\r\n                            <div>Forgot Password ?</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"or-seprator clearfix\">\r\n                        <span></span>\r\n                        <div>OR</div>\r\n                        <span></span>\r\n                    </div>\r\n                    <div className=\"login-with\">\r\n                        <p className=\"loginWithTitle\">Login with</p>\r\n                        <div className=\"login-with-google\">\r\n                            <GoogleLogin\r\n                                className=\"google-login-btn\"\r\n                                clientId=\"417866547364-mesv7a9cn6bj4n3ge45s8b6hhl1vdam0.apps.googleusercontent.com\"\r\n                                buttonText=\"Login with Google\"\r\n                                onSuccess={successResponseGoogle}\r\n                                onFailure={failureResponseGoogle} >\r\n                            </GoogleLogin>\r\n                        </div>\r\n                        <div className=\"login-with-fb\">\r\n                            <div className=\"login-with-fb\">\r\n                                <FacebookLogin\r\n                                    appId=\"813330422546108\"\r\n                                    autoLoad={false}\r\n                                    fields=\"name,email,picture\"\r\n                                    callback={responseFacebook}\r\n                                    cssClass=\"facebook-login-btn\"\r\n                                    icon={<FacebookIcon />}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"already-login-wrap\">\r\n                        <div className=\"text-wrap\">New to Choreoculture?</div>\r\n                        <Button color=\"primary\" onClick={() => history.push('/register')}>SIGN UP</Button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            <div className=\"img-wrap\">\r\n                <img src={bgImg} />\r\n            </div>\r\n            {openVdoUploadModal && <VideoUploader handleClose={() => setOpenVdoUploadModal(false)} />}\r\n        </div>\r\n    );\r\n}",["191","192"],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Navigation\\index.js",["193","194","195"],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Profile\\Profile.js",["196","197","198","199","200"],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Admin\\Competition.js",["201"],"import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport ImageUploader from 'react-images-upload';\r\nimport Button from '@material-ui/core/Button';\r\nimport { saveCompetition } from \"../../Services/Competition.service\";\r\nimport { uploadImage } from \"../../Services/Upload.service\";\r\nimport { toBase64 } from \"../../Services/Utils\";\r\n\r\nexport default function Competition() {\r\n    const initialCompetitionData = {\r\n        name: \"\",\r\n        type: \"\",\r\n        desc: \"\",\r\n        active: true,\r\n        fee: \"\",\r\n        img: \"\",\r\n        startAt: \"\",\r\n        endAt: \"\",\r\n        prices: [],\r\n    }\r\n    const [CompetitionData, setCompetitionData] = useState(initialCompetitionData);\r\n\r\n    const handleChange = (prop, index) => (event) => {\r\n        let value = event.target.value;\r\n        if (prop === 'active') value = event.target.checked;\r\n        if (prop === 'prices') {\r\n            CompetitionData.prices[index] = event.target.value;\r\n            value = CompetitionData.prices;\r\n        }\r\n        setCompetitionData({ ...CompetitionData, [prop]: value });\r\n    };\r\n\r\n    const onimageUpload = (picture) => {\r\n        setCompetitionData({ ...CompetitionData, img: picture });\r\n    }\r\n\r\n    async function saveDetails(e) {\r\n        console.log(CompetitionData)\r\n        // upload competition image to bucket\r\n        if (CompetitionData.img[0]) {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(CompetitionData.img[0]);\r\n            reader.onload = () => {\r\n                uploadImage(reader.result, 'competition', 'small').subscribe((downloadableUrl) => {\r\n                    CompetitionData.img = downloadableUrl;\r\n                    // save competition data to db with imag url\r\n                    saveCompetition(CompetitionData).subscribe((response) => {\r\n                        console.log('competition success', response);\r\n                        setCompetitionData(initialCompetitionData);\r\n                    })\r\n                })\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"competition-bo-wrap\">\r\n            <div className=\"input-wrap\">\r\n                <TextField className=\"input-field\"\r\n                    required\r\n                    id=\"outlined-required-name\"\r\n                    label=\"Name\"\r\n                    onChange={handleChange('name')}\r\n                    value={CompetitionData.name}\r\n                    variant=\"outlined\"\r\n                />\r\n            </div>\r\n            <div className=\"input-wrap\">\r\n                <TextField className=\"input-field\"\r\n                    id=\"outlined-required-desc\"\r\n                    label=\"Description\"\r\n                    onChange={handleChange('desc')}\r\n                    value={CompetitionData.desc}\r\n                    variant=\"outlined\"\r\n                />\r\n            </div>\r\n            <div className=\"input-wrap\">\r\n                <TextField className=\"input-field\"\r\n                    id=\"outlined-required-fee\"\r\n                    label=\"Fee\"\r\n                    type=\"number\"\r\n                    onChange={handleChange('fee')}\r\n                    value={CompetitionData.fee}\r\n                    variant=\"outlined\"\r\n                />\r\n            </div>\r\n            <div className=\"input-wrap\">\r\n                <FormControl variant=\"outlined\" className=\"input-field\">\r\n                    <InputLabel id=\"select-outlined-label\">Type</InputLabel>\r\n                    <Select\r\n                        labelId=\"select-outlined-label\"\r\n                        id=\"select-outlined\"\r\n                        value={CompetitionData.type}\r\n                        onChange={handleChange('type')}\r\n                        label=\"Type\"\r\n                    >\r\n                        <MenuItem value=\"running\">Currently Running</MenuItem>\r\n                        <MenuItem value=\"upcomming\">Up-Comming</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            <div className=\"input-wrap\">\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox\r\n                            required\r\n                            color=\"primary\"\r\n                            className=\"selected-item-checkbox\"\r\n                            checked={CompetitionData.active}\r\n                            onChange={handleChange('active')}\r\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                        />\r\n                    }\r\n                    label=\"Active\"\r\n                />\r\n            </div>\r\n            <div className=\"inpyt-wrap\">\r\n                <TextField\r\n                    id=\"datetime-local\"\r\n                    label=\"Start Date & Time\"\r\n                    type=\"datetime-local\"\r\n                    value={CompetitionData.startAt}\r\n                    onChange={handleChange('startAt')}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"input-wrap\">\r\n                <TextField\r\n                    id=\"datetime-local\"\r\n                    label=\"End Date & Time\"\r\n                    type=\"datetime-local\"\r\n                    value={CompetitionData.endAt}\r\n                    onChange={handleChange('endAt')}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"input-wrap\">\r\n                <TextField className=\"input-field\"\r\n                    required\r\n                    id=\"outlined-required-name\"\r\n                    label=\"First Price\"\r\n                    onChange={handleChange('prices', 0)}\r\n                    value={CompetitionData.prices[0]}\r\n                    variant=\"outlined\"\r\n                />\r\n            </div>\r\n            <div className=\"input-wrap\">\r\n                <TextField className=\"input-field\"\r\n                    required\r\n                    id=\"outlined-required-name\"\r\n                    label=\"Second Price\"\r\n                    onChange={handleChange('prices', 1)}\r\n                    value={CompetitionData.prices[1]}\r\n                    variant=\"outlined\"\r\n                />\r\n            </div>\r\n            <div className=\"input-wrap\">\r\n                <TextField className=\"input-field\"\r\n                    required\r\n                    id=\"outlined-required-name\"\r\n                    label=\"Third Price\"\r\n                    onChange={handleChange('prices', 2)}\r\n                    value={CompetitionData.prices[2]}\r\n                    variant=\"outlined\"\r\n                />\r\n            </div>\r\n            <div className=\"input-wrap\">\r\n                <ImageUploader\r\n                    withIcon={true}\r\n                    buttonText='Upload image'\r\n                    onChange={onimageUpload}\r\n                    imgExtension={['.jpg', '.gif', '.png', '.gif', '.svg']}\r\n                    maxFileSize={5242880}\r\n                    accept=\"image/*\"\r\n                    withPreview={true}\r\n                    singleImage={true}\r\n                    label=\"Select competition image\"\r\n                />\r\n            </div>\r\n            <Button variant=\"contained\" color=\"primary\">Cancel</Button>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={(e) => saveDetails(e)}>Save</Button>\r\n        </div>\r\n    )\r\n}\r\n","F:\\Toms\\Business-work\\Boogalu\\src\\Reducers\\index.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Homepage\\index.js",["202","203","204","205","206"],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Splash\\index.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Signup\\index.js",["207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStoreConsumer } from '../../Providers/StateProvider';\r\nimport { signupUser } from '../../Actions/User';\r\nimport bgImg from '../../Images/bg1.svg';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport stepListData from '../../Data/RegistrationStepData'\r\nimport ArrowRightSharpIcon from '@material-ui/icons/ArrowRightSharp';\r\nimport { registerUser, getUserByEmail, getUserByPhone } from \"../../Services/User.service\";\r\nimport * as $ from 'jquery';\r\n\r\nexport default function Signup() {\r\n    const { state, dispatch } = useStoreConsumer();\r\n    const history = useHistory();\r\n    let loggedInUser = state.loggedInUser;\r\n    // if user already login then redirect to home\r\n    if (loggedInUser.name && loggedInUser.phone && loggedInUser.email && loggedInUser.username) history.push({\r\n        pathname: '/',\r\n        state: null\r\n    })\r\n    // get data from history props if redirected through google or facebook login\r\n    if (history.location.state && (history.location.state.source === 'Facebook' || history.location.state.source === 'Google')) {\r\n        loggedInUser.email = history.location.state.email;\r\n        loggedInUser.name = history.location.state.name;\r\n        // setNeedToRegisterError('You are not registered yet, Please register with Choreoculture.')\r\n    }\r\n    const [userDetails, setUserDetails] = useState(loggedInUser);\r\n    const [SignUpError, setSignUpError] = useState(null);\r\n    const [showHidePassword, setShowHidePassword] = useState({ showPassword: false, showConfirmPassword: false });\r\n\r\n    const [activeStep, setActiveStep] = useState('stepOne');\r\n    const [showNextButton, setShowNextButton] = useState(false);\r\n    const [stepData, setStepListData] = useState(stepListData);\r\n    const [selectedOptionsList, setSelectedOptionsList] = useState([]);\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setUserDetails({ ...userDetails, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowPassword = (prop) => {\r\n        setShowHidePassword({ ...showHidePassword, [prop]: !showHidePassword[prop] });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    useEffect(() => {\r\n        $('html,body').animate({\r\n            scrollTop: 0\r\n        }, 500);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (stepData[activeStep]) {\r\n            let isAnySelected = stepData[activeStep].filter((data) => data.isSelected);\r\n            if (isAnySelected.length != 0) setShowNextButton(true);\r\n            else setShowNextButton(false);\r\n            // set selected options\r\n            let selectedOptions = [];\r\n            Object.entries(stepData).map(([parentKey, parentValue]) => {\r\n                parentValue.map((parentValueItem) => {\r\n                    if (parentValueItem.isSelected) {\r\n                        let selectionObj = { value: [parentValueItem.title], key: parentKey, heading: parentValueItem.heading };\r\n                        if (selectedOptions.length != 0) {\r\n                            let isAvl = selectedOptions.filter((data) => data.key === parentKey);\r\n                            if (isAvl.length != 0) {\r\n                                selectedOptions.map((item) => {\r\n                                    if (item.key === parentKey) item.value.push(parentValueItem.title);\r\n                                })\r\n                            } else selectedOptions.push(selectionObj);\r\n                        } else selectedOptions.push(selectionObj);\r\n                    }\r\n                })\r\n            })\r\n            setSelectedOptionsList(selectedOptions);\r\n        }\r\n    }, [activeStep])\r\n\r\n    const saveUserRegistrationDetails = () => {\r\n        return new Promise((res, rej) => {\r\n            registerUser(userDetails).subscribe((data) => {\r\n                console.log('user registered success', data);\r\n                res();\r\n            })\r\n        })\r\n    }\r\n\r\n    const checkForUsedPhone = () => {\r\n        return new Promise((res, rej) => {\r\n            getUserByPhone(userDetails.phone).subscribe((data) => {\r\n                if (data && data.length) {\r\n                    setSignUpError('Phone already registered.');\r\n                    rej(false);\r\n                } else {\r\n                    res(true);\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    const checkForUsedEmail = () => {\r\n        return new Promise((res, rej) => {\r\n            getUserByEmail(userDetails.email).subscribe((data) => {\r\n                if (data && data.length) {\r\n                    setSignUpError('Email already registered.');\r\n                    rej(false);\r\n                } else {\r\n                    res(true);\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    const setSignupUserCred = (e) => {\r\n        if (userDetails.password != userDetails.confirmPassword) {\r\n            setSignUpError('Password dose not match.');\r\n            return;\r\n        }\r\n\r\n        Promise.all([checkForUsedEmail(), checkForUsedPhone()]).then(() => {\r\n            saveUserRegistrationDetails()\r\n                .then(() => {\r\n                    dispatch(signupUser(userDetails));\r\n                    if (state.currentLoginFlow == 'competition') history.push('/competitions');\r\n                    else if (state.currentLoginFlow == 'subscription') history.push('/subscription');\r\n                    if (state.currentLoginFlow == 'upload-video') history.push('/upload-video');\r\n                    else history.push(({\r\n                        pathname: '/',\r\n                        state: null\r\n                    }));\r\n                })\r\n                .catch((error) => {\r\n                    // error in user registration\r\n                    if (error) {\r\n\r\n                    }\r\n                })\r\n        }).catch(error => {\r\n            console.error(error)\r\n        });\r\n        e.preventDefault();\r\n    }\r\n\r\n    const setNextStep = () => {\r\n        switch (activeStep) {\r\n            case 'stepOne': setActiveStep('stepTwo'); break;\r\n            case 'stepTwo': setActiveStep('stepThree'); break;\r\n            case 'stepThree': setActiveStep('stepFour'); break;\r\n            case 'stepFour': setActiveStep('stepFive'); break;\r\n            case 'stepFive': setActiveStep(6); break;\r\n        }\r\n    }\r\n\r\n    const setPrevStep = () => {\r\n        switch (activeStep) {\r\n            case 'stepTwo': setActiveStep('stepOne'); break;\r\n            case 'stepThree': setActiveStep('stepTwo'); break;\r\n            case 'stepFour': setActiveStep('stepThree'); break;\r\n            case 'stepFive': setActiveStep('stepFour'); break;\r\n            case 6: setActiveStep('stepFive'); break;\r\n        }\r\n    }\r\n\r\n    const setStepListItemData = (e, activeItem, status) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const stepDataList = Object.assign({}, stepData);\r\n        stepDataList[activeStep].map((item) => {\r\n            if (item.title === activeItem.title) {\r\n                item.isSelected = item.isSelected ? false : true;\r\n            } else {\r\n                if (status != 'multi-select') {\r\n                    item.isSelected = false;\r\n                }\r\n            }\r\n        })\r\n        // set selected options\r\n        let selectedOptions = [];\r\n        Object.entries(stepDataList).map(([parentKey, parentValue]) => {\r\n            parentValue.map((parentValueItem) => {\r\n                if (parentValueItem.isSelected) {\r\n                    let selectionObj = { value: [parentValueItem.title], key: parentKey, heading: parentValueItem.heading };\r\n                    if (selectedOptions.length != 0) {\r\n                        let isAvl = selectedOptions.filter((data) => data.key === parentKey);\r\n                        if (isAvl.length != 0) {\r\n                            selectedOptions.map((item) => {\r\n                                if (item.key === parentKey) item.value.push(parentValueItem.title);\r\n                            })\r\n                        } else selectedOptions.push(selectionObj);\r\n                    } else selectedOptions.push(selectionObj);\r\n                }\r\n            })\r\n        })\r\n        setSelectedOptionsList(selectedOptions);\r\n        let isAnySelected = stepDataList[activeStep].filter((data) => data.isSelected);\r\n        if (isAnySelected.length != 0) setShowNextButton(true);\r\n        else setShowNextButton(false);\r\n        setStepListData(stepDataList);\r\n    }\r\n\r\n    return (\r\n        <div className=\"logout-wrap clearfix\">\r\n            {activeStep != 6 && <div className=\"step-wrap\">\r\n                <div className=\"heading1\">Let's Get Started!</div>\r\n                {activeStep === 'stepOne' && <>\r\n                    <div className=\"list-content\">\r\n                        <div className=\"list-heading-wrap\">\r\n                            <div className=\"heading2\">What’s your experience with dancing?</div>\r\n                            <div className=\"heading3\">Select One Option</div>\r\n                        </div>\r\n                        <div className=\"list\">\r\n                            {stepData.stepOne.map((item, i) => {\r\n                                return (\r\n                                    <div key={i} className={item.isSelected ? 'list-item selected-item' : 'list-item'} onClick={(e) => setStepListItemData(e, item)}>\r\n                                        <div className=\"title\">{item.title}</div>\r\n                                        <div className=\"desc\">{item.desc}</div>\r\n                                        <Checkbox\r\n                                            required\r\n                                            color=\"primary\"\r\n                                            className=\"selected-item-checkbox\"\r\n                                            checked={item.isSelected}\r\n                                            onChange={(e) => setStepListItemData(e, item)}\r\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </>}\r\n                {activeStep === 'stepTwo' && <>\r\n                    <div className=\"list-content\">\r\n                        <div className=\"list-heading-wrap\">\r\n                            <div className=\"heading2\">What is your first goal that you want to work on?</div>\r\n                            <div className=\"heading3\">Select One Option</div>\r\n                        </div>\r\n                        <div className=\"list\">\r\n                            {stepData.stepTwo.map((item, i) => {\r\n                                return (\r\n                                    <div key={i} className={item.isSelected ? 'list-item selected-item' : 'list-item'} onClick={(e) => setStepListItemData(e, item)}>\r\n                                        <div className=\"title\">{item.title}</div>\r\n                                        <div className=\"desc\">{item.desc}</div>\r\n                                        <Checkbox\r\n                                            required\r\n                                            color=\"primary\"\r\n                                            className=\"selected-item-checkbox\"\r\n                                            checked={item.isSelected}\r\n                                            onChange={(e) => setStepListItemData(e, item)}\r\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </>}\r\n                {activeStep === 'stepThree' && <>\r\n                    <div className=\"list-content\">\r\n                        <div className=\"list-heading-wrap\">\r\n                            <div className=\"heading2\">What are you interested in?</div>\r\n                            <div className=\"heading3\">Select all that apply</div>\r\n                        </div>\r\n                        <div className=\"list\">\r\n                            {stepData.stepThree.map((item, i) => {\r\n                                return (\r\n                                    <div key={i} className={item.isSelected ? 'list-item selected-item' : 'list-item'} onClick={(e) => setStepListItemData(e, item, 'multi-select')}>\r\n                                        <div className=\"title\">{item.title}</div>\r\n                                        <div className=\"desc\" style={{ paddingRight: '25px' }}>{item.desc}</div>\r\n                                        <Checkbox\r\n                                            required\r\n                                            color=\"primary\"\r\n                                            className=\"selected-item-checkbox\"\r\n                                            checked={item.isSelected}\r\n                                            onChange={(e) => setStepListItemData(e, item, 'multi-select')}\r\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </>}\r\n                {activeStep === 'stepFour' && <>\r\n                    <div className=\"list-content\">\r\n                        <div className=\"list-heading-wrap\">\r\n                            <div className=\"heading2\">How long would you like your dance sessions to be?</div>\r\n                            <div className=\"heading3\">Select One Option</div>\r\n                        </div>\r\n                        <div className=\"list\">\r\n                            {stepData.stepFour.map((item, i) => {\r\n                                return (\r\n                                    <div key={i} className={item.isSelected ? 'list-item selected-item' : 'list-item'} onClick={(e) => setStepListItemData(e, item)}>\r\n                                        <div className=\"title\">{item.title}</div>\r\n                                        <div className=\"desc\">{item.desc}</div>\r\n                                        <Checkbox\r\n                                            required\r\n                                            color=\"primary\"\r\n                                            className=\"selected-item-checkbox\"\r\n                                            checked={item.isSelected}\r\n                                            onChange={(e) => setStepListItemData(e, item)}\r\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </>}\r\n                {activeStep === 'stepFive' && <>\r\n                    <div className=\"list-content\">\r\n                        <div className=\"list-heading-wrap\">\r\n                            <div style={{ paddingBottom: 0 }} className=\"heading2\">Your Personal Schedule & Recommendations</div>\r\n                        </div>\r\n                        <div className=\"list\">\r\n                            {selectedOptionsList.map((item, i) => {\r\n                                return (\r\n                                    <div key={i} className=\"list-item selected-item\" onClick={() => setActiveStep(item.key)}>\r\n                                        <div className=\"title\">{item.heading}</div>\r\n                                        <div className=\"desc\">\r\n                                            {item.value.length === 1 &&\r\n                                                item.value.map((listValue, j) => {\r\n                                                    return <span key={j}>{listValue} </span>\r\n                                                })\r\n                                            }\r\n                                            {item.value.length != 1 &&\r\n                                                item.value.map((listValue, j) => {\r\n                                                    return <span key={j}>{listValue}, </span>\r\n                                                })\r\n                                            }\r\n\r\n                                        </div>\r\n                                        {/* <Checkbox\r\n                                            required\r\n                                            color=\"primary\"\r\n                                            className=\"selected-item-checkbox\"\r\n                                            checked={true}\r\n                                            disabled={true}\r\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                        /> */}\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </>}\r\n                {activeStep != 6 && <div className=\"step-already-login-wrap clearfix\">\r\n                    <div className=\"text-wrap\">Already have an account?</div>\r\n                    <Button color=\"primary\" onClick={() => history.push({\r\n                        pathname: '/login',\r\n                        state: null\r\n                    })}>SIGN IN</Button>\r\n                    {\r\n                        showNextButton ?\r\n                            <div className={`next-prev-actions ${activeStep != 'stepOne' ? 'next-step-active' : ''} `}>\r\n                                {activeStep != 'stepOne' && <Button color=\"primary\" variant=\"contained\" className=\"next-btn previous\" onClick={() => setPrevStep()}>Prev</Button>}\r\n                                {showNextButton && <Button color=\"primary\" variant=\"contained\" className=\"next-btn\" onClick={() => setNextStep()}>Next</Button>}\r\n                            </div> : ''\r\n                    }\r\n                </div>}\r\n            </div>}\r\n            {activeStep == 6 && <form className=\"form-wrap final-registration-block clearfix\" onSubmit={setSignupUserCred}>\r\n                <div className=\"heading-outer\">\r\n                    <div className=\"heading1\">Let's Get Started!</div>\r\n                    <div className=\"heading2\">Create an account to Choreoculture to get all features.</div>\r\n                </div>\r\n                {/* {NeedToRegisterError && <div className=\"login-error\">\r\n                    {NeedToRegisterError}\r\n                </div>} */}\r\n                <div className=\"form-outer clearfix\">\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            id=\"outlined-required-Name\"\r\n                            label=\"Name\"\r\n                            onChange={handleChange('name')}\r\n                            value={userDetails.name}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            id=\"outlined-required-Username\"\r\n                            label=\"Username\"\r\n                            onChange={handleChange('username')}\r\n                            value={userDetails.username}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            type=\"tel\"\r\n                            id=\"outlined-required-phone\"\r\n                            label=\"Phone\"\r\n                            onChange={handleChange('phone')}\r\n                            value={userDetails.phone}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            id=\"outlined-required-email\"\r\n                            label=\"Email\"\r\n                            type=\"email\"\r\n                            onChange={handleChange('email')}\r\n                            value={userDetails.email}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            id=\"outlined-required-country\"\r\n                            label=\"Country\"\r\n                            onChange={handleChange('country')}\r\n                            value={userDetails.country}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            id=\"outlined-required-state\"\r\n                            label=\"State\"\r\n                            onChange={handleChange('state')}\r\n                            value={userDetails.state}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <FormControl className=\"\" variant=\"outlined\">\r\n                            <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                required\r\n                                id=\"outlined-adornment-password\"\r\n                                type={showHidePassword.showPassword ? 'text' : 'password'}\r\n                                value={userDetails.password}\r\n                                onChange={handleChange('password')}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={() => handleClickShowPassword('showPassword')}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {showHidePassword.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                labelWidth={70}\r\n                            />\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <FormControl className=\"\" variant=\"outlined\">\r\n                            <InputLabel htmlFor=\"outlined-adornment-confirm-password\">Confirm Password</InputLabel>\r\n                            <OutlinedInput\r\n                                required\r\n                                id=\"outlined-adornment-confirm-password\"\r\n                                type={showHidePassword.showConfirmPassword ? 'text' : 'password'}\r\n                                value={userDetails.confirmPassword}\r\n                                onChange={handleChange('confirmPassword')}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle confirm password visibility\"\r\n                                            onClick={() => handleClickShowPassword('showConfirmPassword')}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {showHidePassword.showConfirmPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                labelWidth={70}\r\n                            />\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <div className=\"dob-wrap\">\r\n                            <TextField className=\"input-field\"\r\n                                id=\"date\"\r\n                                label=\"Birthday\"\r\n                                type=\"date\"\r\n                                onChange={handleChange('dob')}\r\n                                value={userDetails.dob}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <FormControl variant=\"outlined\" className=\"input-field\">\r\n                            <InputLabel id=\"select-outlined-label\">Gender</InputLabel>\r\n                            <Select\r\n                                labelId=\"select-outlined-label\"\r\n                                id=\"select-outlined\"\r\n                                value={userDetails.gender}\r\n                                onChange={handleChange('gender')}\r\n                                label=\"Gender\"\r\n                            >\r\n                                <MenuItem value=\"Male\">Male</MenuItem>\r\n                                <MenuItem value=\"Female\">Female</MenuItem>\r\n                                <MenuItem value=\"Other\">Other</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"input-wrap bio-wrap\">\r\n                        <TextField className=\"input-field bio-input\"\r\n                            id=\"outlined-required-bio\"\r\n                            label=\"Bio\"\r\n                            value={userDetails.bio}\r\n                            onChange={handleChange('bio')}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"tnc-wrap\">\r\n                        <div className=\"tnc-content clearfix\">\r\n                            <div className=\"checkbox-wrap\">\r\n                                <Checkbox\r\n                                    required\r\n                                    color=\"primary\"\r\n                                    checked={userDetails.tnc}\r\n                                    onChange={(e) => setUserDetails({ ...userDetails, tnc: e.target.checked })}\r\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"note-wrap\">Yes, I agree to the terms and conditions </div>\r\n                        </div>\r\n                    </div>\r\n                    {SignUpError && <div className=\"login-error\">\r\n                        {SignUpError}\r\n                    </div>}\r\n                    <div className=\"submit-btn clearfix\">\r\n                        <Button variant=\"contained\" type=\"submit\" color=\"primary\" >Sign Up\r\n                         <ArrowRightSharpIcon />\r\n                        </Button>\r\n                        {activeStep != 'stepOne' && <Button color=\"primary\" variant=\"contained\" className=\"next-btn previous\" onClick={() => setPrevStep()}>Prev</Button>}\r\n                    </div>\r\n                    <div className=\"already-login-wrap\">\r\n                        <div className=\"text-wrap\">Already have an account?</div>\r\n                        <Button color=\"primary\" onClick={() => history.push({\r\n                            pathname: '/login',\r\n                            state: null\r\n                        })}>SIGN IN</Button>\r\n                    </div>\r\n                </div>\r\n            </form>}\r\n\r\n            <div className=\"img-wrap\">\r\n                <img src={bgImg} alt=\"bg1\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Contactus\\index.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Upcoming\\index.js",["234","235","236"],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Competitions\\index.js",["237","238","239","240","241","242"],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\VideoUploader\\index.js",["243"],"F:\\Toms\\Business-work\\Boogalu\\src\\Services\\User.service.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Services\\Competition.service.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Services\\UploadedVideo.service.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Services\\Utils.js",["244","245","246"],"F:\\Toms\\Business-work\\Boogalu\\src\\Services\\Upload.service.js",["247","248"],"F:\\Toms\\Business-work\\Boogalu\\src\\Services\\EnrollCompetition.service.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Actions\\User\\index.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Vedio\\Video.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Data\\LessonsCategory.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Data\\RegistrationStepData.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Actions\\LoginFlow\\index.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Actions\\Competition\\index.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Services\\firebase.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\CompetitionsDetails\\index.js",["249","250","251","252","253","254","255","256","257","258","259","260","261"],"F:\\Toms\\Business-work\\Boogalu\\src\\Constants\\index.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Database\\index.js",["262"],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\EnrollCompetition\\index.js",["263","264"],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Admin\\Subscription.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Subscriptions\\index.js",["265","266","267"],"F:\\Toms\\Business-work\\Boogalu\\src\\Services\\Subscription.service.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\BuySubscription\\index.js",["268","269","270","271","272","273","274","275","276","277"],"F:\\Toms\\Business-work\\Boogalu\\src\\Actions\\Subscription\\index.js",[],{"ruleId":"278","severity":1,"message":"279","line":5,"column":7,"nodeType":"280","messageId":"281","endLine":5,"endColumn":24},{"ruleId":"278","severity":1,"message":"282","line":2,"column":50,"nodeType":"280","messageId":"281","endLine":2,"endColumn":54},{"ruleId":"278","severity":1,"message":"283","line":1,"column":17,"nodeType":"280","messageId":"281","endLine":1,"endColumn":25},{"ruleId":"284","severity":1,"message":"285","line":26,"column":8,"nodeType":"286","endLine":26,"endColumn":10,"suggestions":"287"},{"ruleId":"288","severity":1,"message":"289","line":61,"column":66,"nodeType":"290","endLine":61,"endColumn":81},{"ruleId":"291","severity":1,"message":"292","line":78,"column":29,"nodeType":"293","endLine":78,"endColumn":83},{"ruleId":"288","severity":1,"message":"289","line":84,"column":114,"nodeType":"290","endLine":84,"endColumn":129},{"ruleId":"288","severity":1,"message":"289","line":90,"column":110,"nodeType":"290","endLine":90,"endColumn":125},{"ruleId":"288","severity":1,"message":"289","line":96,"column":109,"nodeType":"290","endLine":96,"endColumn":124},{"ruleId":"294","severity":1,"message":"295","line":27,"column":66,"nodeType":"296","messageId":"297","endLine":27,"endColumn":68},{"ruleId":"294","severity":1,"message":"295","line":27,"column":113,"nodeType":"296","messageId":"297","endLine":27,"endColumn":115},{"ruleId":"294","severity":1,"message":"298","line":56,"column":34,"nodeType":"296","messageId":"297","endLine":56,"endColumn":36},{"ruleId":"278","severity":1,"message":"299","line":18,"column":21,"nodeType":"280","messageId":"281","endLine":18,"endColumn":31},{"ruleId":"284","severity":1,"message":"300","line":34,"column":8,"nodeType":"286","endLine":34,"endColumn":28,"suggestions":"301"},{"ruleId":"294","severity":1,"message":"298","line":62,"column":28,"nodeType":"296","messageId":"297","endLine":62,"endColumn":30},{"ruleId":"302","severity":1,"message":"303","line":155,"column":9,"nodeType":"304","messageId":"305","endLine":212,"endColumn":10},{"ruleId":"294","severity":1,"message":"295","line":172,"column":52,"nodeType":"296","messageId":"297","endLine":172,"endColumn":54},{"ruleId":"294","severity":1,"message":"295","line":173,"column":57,"nodeType":"296","messageId":"297","endLine":173,"endColumn":59},{"ruleId":"294","severity":1,"message":"295","line":197,"column":52,"nodeType":"296","messageId":"297","endLine":197,"endColumn":54},{"ruleId":"294","severity":1,"message":"295","line":198,"column":57,"nodeType":"296","messageId":"297","endLine":198,"endColumn":59},{"ruleId":"306","severity":1,"message":"307","line":308,"column":17,"nodeType":"293","endLine":308,"endColumn":36},{"ruleId":"308","replacedBy":"309"},{"ruleId":"310","replacedBy":"311"},{"ruleId":"284","severity":1,"message":"285","line":77,"column":8,"nodeType":"286","endLine":77,"endColumn":18,"suggestions":"312"},{"ruleId":"278","severity":1,"message":"313","line":80,"column":15,"nodeType":"280","messageId":"281","endLine":80,"endColumn":32},{"ruleId":"291","severity":1,"message":"314","line":221,"column":25,"nodeType":"293","endLine":221,"endColumn":89},{"ruleId":"278","severity":1,"message":"315","line":63,"column":11,"nodeType":"280","messageId":"281","endLine":63,"endColumn":18},{"ruleId":"278","severity":1,"message":"316","line":71,"column":32,"nodeType":"280","messageId":"281","endLine":71,"endColumn":53},{"ruleId":"284","severity":1,"message":"317","line":82,"column":8,"nodeType":"286","endLine":82,"endColumn":10,"suggestions":"318"},{"ruleId":"294","severity":1,"message":"295","line":94,"column":72,"nodeType":"296","messageId":"297","endLine":94,"endColumn":74},{"ruleId":"306","severity":1,"message":"307","line":186,"column":41,"nodeType":"293","endLine":186,"endColumn":74},{"ruleId":"278","severity":1,"message":"319","line":13,"column":10,"nodeType":"280","messageId":"281","endLine":13,"endColumn":18},{"ruleId":"278","severity":1,"message":"320","line":5,"column":13,"nodeType":"280","messageId":"281","endLine":5,"endColumn":14},{"ruleId":"278","severity":1,"message":"321","line":9,"column":20,"nodeType":"280","messageId":"281","endLine":9,"endColumn":28},{"ruleId":"322","severity":1,"message":"323","line":24,"column":25,"nodeType":"293","endLine":24,"endColumn":223},{"ruleId":"322","severity":1,"message":"323","line":27,"column":25,"nodeType":"293","endLine":27,"endColumn":223},{"ruleId":"322","severity":1,"message":"323","line":30,"column":25,"nodeType":"293","endLine":30,"endColumn":223},{"ruleId":"294","severity":1,"message":"298","line":68,"column":38,"nodeType":"296","messageId":"297","endLine":68,"endColumn":40},{"ruleId":"324","severity":1,"message":"325","line":72,"column":69,"nodeType":"326","messageId":"327","endLine":72,"endColumn":71},{"ruleId":"324","severity":1,"message":"325","line":73,"column":51,"nodeType":"326","messageId":"327","endLine":73,"endColumn":53},{"ruleId":"294","severity":1,"message":"298","line":76,"column":52,"nodeType":"296","messageId":"297","endLine":76,"endColumn":54},{"ruleId":"294","severity":1,"message":"298","line":78,"column":46,"nodeType":"296","messageId":"297","endLine":78,"endColumn":48},{"ruleId":"324","severity":1,"message":"325","line":79,"column":60,"nodeType":"326","messageId":"327","endLine":79,"endColumn":62},{"ruleId":"284","severity":1,"message":"328","line":89,"column":8,"nodeType":"286","endLine":89,"endColumn":20,"suggestions":"329"},{"ruleId":"294","severity":1,"message":"298","line":127,"column":34,"nodeType":"296","messageId":"297","endLine":127,"endColumn":36},{"ruleId":"294","severity":1,"message":"295","line":136,"column":48,"nodeType":"296","messageId":"297","endLine":136,"endColumn":50},{"ruleId":"294","severity":1,"message":"295","line":137,"column":48,"nodeType":"296","messageId":"297","endLine":137,"endColumn":50},{"ruleId":"302","severity":1,"message":"303","line":156,"column":9,"nodeType":"304","messageId":"305","endLine":162,"endColumn":10},{"ruleId":"302","severity":1,"message":"303","line":166,"column":9,"nodeType":"304","messageId":"305","endLine":172,"endColumn":10},{"ruleId":"324","severity":1,"message":"325","line":179,"column":45,"nodeType":"326","messageId":"327","endLine":179,"endColumn":47},{"ruleId":"294","severity":1,"message":"298","line":183,"column":28,"nodeType":"296","messageId":"297","endLine":183,"endColumn":30},{"ruleId":"324","severity":1,"message":"325","line":190,"column":69,"nodeType":"326","messageId":"327","endLine":190,"endColumn":71},{"ruleId":"324","severity":1,"message":"325","line":191,"column":47,"nodeType":"326","messageId":"327","endLine":191,"endColumn":49},{"ruleId":"294","severity":1,"message":"298","line":194,"column":48,"nodeType":"296","messageId":"297","endLine":194,"endColumn":50},{"ruleId":"294","severity":1,"message":"298","line":196,"column":42,"nodeType":"296","messageId":"297","endLine":196,"endColumn":44},{"ruleId":"324","severity":1,"message":"325","line":197,"column":56,"nodeType":"326","messageId":"327","endLine":197,"endColumn":58},{"ruleId":"294","severity":1,"message":"298","line":207,"column":34,"nodeType":"296","messageId":"297","endLine":207,"endColumn":36},{"ruleId":"294","severity":1,"message":"298","line":214,"column":25,"nodeType":"296","messageId":"297","endLine":214,"endColumn":27},{"ruleId":"294","severity":1,"message":"298","line":336,"column":64,"nodeType":"296","messageId":"297","endLine":336,"endColumn":66},{"ruleId":"294","severity":1,"message":"298","line":357,"column":29,"nodeType":"296","messageId":"297","endLine":357,"endColumn":31},{"ruleId":"294","severity":1,"message":"298","line":365,"column":77,"nodeType":"296","messageId":"297","endLine":365,"endColumn":79},{"ruleId":"294","severity":1,"message":"298","line":366,"column":45,"nodeType":"296","messageId":"297","endLine":366,"endColumn":47},{"ruleId":"294","severity":1,"message":"295","line":372,"column":25,"nodeType":"296","messageId":"297","endLine":372,"endColumn":27},{"ruleId":"294","severity":1,"message":"298","line":553,"column":37,"nodeType":"296","messageId":"297","endLine":553,"endColumn":39},{"ruleId":"278","severity":1,"message":"330","line":1,"column":27,"nodeType":"280","messageId":"281","endLine":1,"endColumn":33},{"ruleId":"278","severity":1,"message":"331","line":1,"column":35,"nodeType":"280","messageId":"281","endLine":1,"endColumn":44},{"ruleId":"278","severity":1,"message":"332","line":6,"column":28,"nodeType":"280","messageId":"281","endLine":6,"endColumn":45},{"ruleId":"294","severity":1,"message":"295","line":11,"column":89,"nodeType":"296","messageId":"297","endLine":11,"endColumn":91},{"ruleId":"294","severity":1,"message":"295","line":13,"column":75,"nodeType":"296","messageId":"297","endLine":13,"endColumn":77},{"ruleId":"324","severity":1,"message":"325","line":20,"column":51,"nodeType":"326","messageId":"327","endLine":20,"endColumn":53},{"ruleId":"294","severity":1,"message":"295","line":21,"column":104,"nodeType":"296","messageId":"297","endLine":21,"endColumn":106},{"ruleId":"294","severity":1,"message":"295","line":43,"column":36,"nodeType":"296","messageId":"297","endLine":43,"endColumn":38},{"ruleId":"284","severity":1,"message":"333","line":46,"column":8,"nodeType":"286","endLine":46,"endColumn":10,"suggestions":"334"},{"ruleId":"284","severity":1,"message":"335","line":31,"column":8,"nodeType":"286","endLine":31,"endColumn":10,"suggestions":"336"},{"ruleId":"294","severity":1,"message":"295","line":26,"column":16,"nodeType":"296","messageId":"297","endLine":26,"endColumn":18},{"ruleId":"294","severity":1,"message":"295","line":27,"column":16,"nodeType":"296","messageId":"297","endLine":27,"endColumn":18},{"ruleId":"294","severity":1,"message":"295","line":28,"column":16,"nodeType":"296","messageId":"297","endLine":28,"endColumn":18},{"ruleId":"302","severity":1,"message":"303","line":24,"column":17,"nodeType":"304","messageId":"305","endLine":31,"endColumn":18},{"ruleId":"302","severity":1,"message":"303","line":61,"column":17,"nodeType":"304","messageId":"305","endLine":68,"endColumn":18},{"ruleId":"278","severity":1,"message":"337","line":5,"column":10,"nodeType":"280","messageId":"281","endLine":5,"endColumn":20},{"ruleId":"294","severity":1,"message":"295","line":58,"column":98,"nodeType":"296","messageId":"297","endLine":58,"endColumn":100},{"ruleId":"324","severity":1,"message":"325","line":60,"column":43,"nodeType":"326","messageId":"327","endLine":60,"endColumn":45},{"ruleId":"294","severity":1,"message":"295","line":62,"column":45,"nodeType":"296","messageId":"297","endLine":62,"endColumn":47},{"ruleId":"284","severity":1,"message":"338","line":74,"column":8,"nodeType":"286","endLine":74,"endColumn":20,"suggestions":"339"},{"ruleId":"294","severity":1,"message":"295","line":85,"column":97,"nodeType":"296","messageId":"297","endLine":85,"endColumn":99},{"ruleId":"324","severity":1,"message":"325","line":93,"column":32,"nodeType":"326","messageId":"327","endLine":93,"endColumn":34},{"ruleId":"294","severity":1,"message":"295","line":94,"column":26,"nodeType":"296","messageId":"297","endLine":94,"endColumn":28},{"ruleId":"294","severity":1,"message":"295","line":156,"column":42,"nodeType":"296","messageId":"297","endLine":156,"endColumn":44},{"ruleId":"294","severity":1,"message":"295","line":159,"column":42,"nodeType":"296","messageId":"297","endLine":159,"endColumn":44},{"ruleId":"294","severity":1,"message":"295","line":159,"column":61,"nodeType":"296","messageId":"297","endLine":159,"endColumn":63},{"ruleId":"294","severity":1,"message":"295","line":163,"column":42,"nodeType":"296","messageId":"297","endLine":163,"endColumn":44},{"ruleId":"294","severity":1,"message":"295","line":163,"column":61,"nodeType":"296","messageId":"297","endLine":163,"endColumn":63},{"ruleId":"278","severity":1,"message":"340","line":1,"column":10,"nodeType":"280","messageId":"281","endLine":1,"endColumn":14},{"ruleId":"278","severity":1,"message":"321","line":16,"column":20,"nodeType":"280","messageId":"281","endLine":16,"endColumn":28},{"ruleId":"306","severity":1,"message":"307","line":92,"column":21,"nodeType":"293","endLine":92,"endColumn":121},{"ruleId":"278","severity":1,"message":"341","line":15,"column":24,"nodeType":"280","messageId":"281","endLine":15,"endColumn":37},{"ruleId":"294","severity":1,"message":"295","line":41,"column":36,"nodeType":"296","messageId":"297","endLine":41,"endColumn":38},{"ruleId":"284","severity":1,"message":"342","line":45,"column":8,"nodeType":"286","endLine":45,"endColumn":10,"suggestions":"343"},{"ruleId":"278","severity":1,"message":"330","line":1,"column":17,"nodeType":"280","messageId":"281","endLine":1,"endColumn":23},{"ruleId":"278","severity":1,"message":"344","line":6,"column":38,"nodeType":"280","messageId":"281","endLine":6,"endColumn":63},{"ruleId":"278","severity":1,"message":"345","line":16,"column":11,"nodeType":"280","messageId":"281","endLine":16,"endColumn":18},{"ruleId":"278","severity":1,"message":"321","line":17,"column":20,"nodeType":"280","messageId":"281","endLine":17,"endColumn":28},{"ruleId":"278","severity":1,"message":"346","line":21,"column":12,"nodeType":"280","messageId":"281","endLine":21,"endColumn":31},{"ruleId":"278","severity":1,"message":"315","line":36,"column":11,"nodeType":"280","messageId":"281","endLine":36,"endColumn":18},{"ruleId":"278","severity":1,"message":"347","line":50,"column":11,"nodeType":"280","messageId":"281","endLine":50,"endColumn":32},{"ruleId":"294","severity":1,"message":"295","line":86,"column":37,"nodeType":"296","messageId":"297","endLine":86,"endColumn":39},{"ruleId":"294","severity":1,"message":"295","line":100,"column":37,"nodeType":"296","messageId":"297","endLine":100,"endColumn":39},{"ruleId":"294","severity":1,"message":"295","line":102,"column":37,"nodeType":"296","messageId":"297","endLine":102,"endColumn":39},"no-unused-vars","'loggedInUserState' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history?.location?.pathname'. Either include it or remove the dependency array.","ArrayExpression",["348"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'signupUser' is defined but never used.","React Hook useEffect has a missing dependency: 'signinUser'. Either include it or remove the dependency array.",["349"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-native-reassign",["350"],"no-negated-in-lhs",["351"],["352"],"'listenRouteChange' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'classes' is assigned a value but never used.","'setUserLikedVideoList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loggedInUser.key'. Either include it or remove the dependency array.",["353"],"'toBase64' is defined but never used.","'$' is defined but never used.","'dispatch' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'stepData'. Either include it or remove the dependency array.",["354"],"'useRef' is defined but never used.","'useEffect' is defined but never used.","'setActiveCategory' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'loggedInUser.email', 'loggedInUser.phone', 'prepareUserCompData', and 'state.currentLoginFlow'. Either include them or remove the dependency array.",["355"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["356"],"'makeStyles' is defined but never used.","React Hook useEffect has missing dependencies: 'competitionDetails', 'dispatch', 'loggedInUser.email', 'loggedInUser.key', 'loggedInUser.phone', and 'userUploadedVdos.length'. Either include them or remove the dependency array.",["357"],"'data' is defined but never used.","'setActiveStep' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'state.currentLoginFlow'. Either include them or remove the dependency array.",["358"],"'SUBSCRIPTION_ENDED_STATUS' is defined but never used.","'history' is assigned a value but never used.","'subsciptionValidity' is assigned a value but never used.","'submitForSubscription' is assigned a value but never used.",{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},"no-global-assign","no-unsafe-negation",{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},"Update the dependencies array to be: [history?.location?.pathname]",{"range":"377","text":"378"},"Update the dependencies array to be: [signinUser, thirdPartyResponse]",{"range":"379","text":"380"},"Update the dependencies array to be: [history?.location?.pathname, isMobile]",{"range":"381","text":"382"},"Update the dependencies array to be: [loggedInUser.key]",{"range":"383","text":"384"},"Update the dependencies array to be: [activeStep, stepData]",{"range":"385","text":"386"},"Update the dependencies array to be: [dispatch, loggedInUser.email, loggedInUser.phone, prepareUserCompData, state.currentLoginFlow]",{"range":"387","text":"388"},"Update the dependencies array to be: [dispatch]",{"range":"389","text":"390"},"Update the dependencies array to be: [ActiveStep, competitionDetails, dispatch, loggedInUser.email, loggedInUser.key, loggedInUser.phone, userUploadedVdos.length]",{"range":"391","text":"392"},"Update the dependencies array to be: [dispatch, state.currentLoginFlow]",{"range":"393","text":"394"},[950,952],"[history?.location?.pathname]",[1850,1870],"[signinUser, thirdPartyResponse]",[3128,3138],"[history?.location?.pathname, isMobile]",[3280,3282],"[loggedInUser.key]",[4355,4367],"[activeStep, stepData]",[2293,2295],"[dispatch, loggedInUser.email, loggedInUser.phone, prepareUserCompData, state.currentLoginFlow]",[1516,1518],"[dispatch]",[3586,3598],"[ActiveStep, competitionDetails, dispatch, loggedInUser.email, loggedInUser.key, loggedInUser.phone, userUploadedVdos.length]",[2416,2418],"[dispatch, state.currentLoginFlow]"]