[{"/Users/danny/Documents/Projects/boogalu/src/index.js":"1","/Users/danny/Documents/Projects/boogalu/src/App.js":"2","/Users/danny/Documents/Projects/boogalu/src/reportWebVitals.js":"3","/Users/danny/Documents/Projects/boogalu/src/Providers/StateProvider.js":"4","/Users/danny/Documents/Projects/boogalu/src/Components/Footer/index.js":"5","/Users/danny/Documents/Projects/boogalu/src/Components/Login/Login.js":"6","/Users/danny/Documents/Projects/boogalu/src/Components/Profile/Profile.js":"7","/Users/danny/Documents/Projects/boogalu/src/Components/Admin/Subscription.js":"8","/Users/danny/Documents/Projects/boogalu/src/Components/Admin/Competition.js":"9","/Users/danny/Documents/Projects/boogalu/src/Components/EditProfile/EditProfile.js":"10","/Users/danny/Documents/Projects/boogalu/src/Services/LocalstorageCache.js":"11","/Users/danny/Documents/Projects/boogalu/src/Components/Navigation/index.js":"12","/Users/danny/Documents/Projects/boogalu/src/Components/Splash/index.js":"13","/Users/danny/Documents/Projects/boogalu/src/Components/Signup/index.js":"14","/Users/danny/Documents/Projects/boogalu/src/Components/Upcoming/index.js":"15","/Users/danny/Documents/Projects/boogalu/src/Components/Subscriptions/index.js":"16","/Users/danny/Documents/Projects/boogalu/src/Components/Page404/index.js":"17","/Users/danny/Documents/Projects/boogalu/src/Components/Feeds/index.js":"18","/Users/danny/Documents/Projects/boogalu/src/Components/Homepage/index.js":"19","/Users/danny/Documents/Projects/boogalu/src/Components/VideoUploader/index.js":"20","/Users/danny/Documents/Projects/boogalu/src/Components/Competitions/index.js":"21","/Users/danny/Documents/Projects/boogalu/src/Components/Contactus/index.js":"22","/Users/danny/Documents/Projects/boogalu/src/Components/Loader/index.js":"23","/Users/danny/Documents/Projects/boogalu/src/Components/Notification/index.js":"24","/Users/danny/Documents/Projects/boogalu/src/Reducers/index.js":"25","/Users/danny/Documents/Projects/boogalu/src/Services/User.service.js":"26","/Users/danny/Documents/Projects/boogalu/src/Services/UploadedVideo.service.js":"27","/Users/danny/Documents/Projects/boogalu/src/Services/EnrollCompetition.service.js":"28","/Users/danny/Documents/Projects/boogalu/src/Services/Competition.service.js":"29","/Users/danny/Documents/Projects/boogalu/src/Services/Subscription.service.js":"30","/Users/danny/Documents/Projects/boogalu/src/Services/Upload.service.js":"31","/Users/danny/Documents/Projects/boogalu/src/Components/Vedio/Video.js":"32","/Users/danny/Documents/Projects/boogalu/src/Actions/User/index.js":"33","/Users/danny/Documents/Projects/boogalu/src/Services/Utils.js":"34","/Users/danny/Documents/Projects/boogalu/src/Constants/index.js":"35","/Users/danny/Documents/Projects/boogalu/src/Components/CompetitionsDetails/index.js":"36","/Users/danny/Documents/Projects/boogalu/src/Actions/Notification/index.js":"37","/Users/danny/Documents/Projects/boogalu/src/Actions/Loader/index.js":"38","/Users/danny/Documents/Projects/boogalu/src/Actions/Competition/index.js":"39","/Users/danny/Documents/Projects/boogalu/src/Actions/Utility/index.js":"40","/Users/danny/Documents/Projects/boogalu/src/Services/firebase.js":"41","/Users/danny/Documents/Projects/boogalu/src/Actions/LoginFlow/index.js":"42","/Users/danny/Documents/Projects/boogalu/src/Data/LessonsCategory.js":"43","/Users/danny/Documents/Projects/boogalu/src/Data/RegistrationStepData.js":"44","/Users/danny/Documents/Projects/boogalu/src/Database/index.js":"45","/Users/danny/Documents/Projects/boogalu/src/Components/BuySubscription/index.js":"46","/Users/danny/Documents/Projects/boogalu/src/Actions/Subscription/index.js":"47","/Users/danny/Documents/Projects/boogalu/src/Components/EnrollCompetition/index.js":"48","/Users/danny/Documents/Projects/boogalu/src/Components/VideoDetails/index.js":"49","/Users/danny/Documents/Projects/boogalu/src/Components/ProfileImage/index.js":"50","/Users/danny/Documents/Projects/boogalu/src/Services/Email.service.js":"51"},{"size":714,"mtime":1607871183480,"results":"52","hashOfConfig":"53"},{"size":3978,"mtime":1612471028648,"results":"54","hashOfConfig":"53"},{"size":362,"mtime":1607448783643,"results":"55","hashOfConfig":"53"},{"size":1061,"mtime":1612286797394,"results":"56","hashOfConfig":"53"},{"size":4454,"mtime":1611990120104,"results":"57","hashOfConfig":"53"},{"size":15026,"mtime":1612121315897,"results":"58","hashOfConfig":"53"},{"size":22004,"mtime":1612475995720,"results":"59","hashOfConfig":"53"},{"size":9655,"mtime":1612121473779,"results":"60","hashOfConfig":"53"},{"size":11016,"mtime":1612121473778,"results":"61","hashOfConfig":"53"},{"size":15769,"mtime":1612283738043,"results":"62","hashOfConfig":"53"},{"size":244,"mtime":1608092665797,"results":"63","hashOfConfig":"53"},{"size":12348,"mtime":1612472164454,"results":"64","hashOfConfig":"53"},{"size":337,"mtime":1610252476571,"results":"65","hashOfConfig":"53"},{"size":33406,"mtime":1612469072057,"results":"66","hashOfConfig":"53"},{"size":1144,"mtime":1611500144741,"results":"67","hashOfConfig":"53"},{"size":7706,"mtime":1612464628298,"results":"68","hashOfConfig":"53"},{"size":454,"mtime":1612089803600,"results":"69","hashOfConfig":"53"},{"size":8428,"mtime":1612476606757,"results":"70","hashOfConfig":"53"},{"size":6725,"mtime":1612471970587,"results":"71","hashOfConfig":"53"},{"size":15404,"mtime":1612464601173,"results":"72","hashOfConfig":"53"},{"size":5207,"mtime":1612475144970,"results":"73","hashOfConfig":"53"},{"size":2054,"mtime":1611682060478,"results":"74","hashOfConfig":"53"},{"size":358,"mtime":1612286899848,"results":"75","hashOfConfig":"53"},{"size":1189,"mtime":1612283162498,"results":"76","hashOfConfig":"53"},{"size":1792,"mtime":1612120553627,"results":"77","hashOfConfig":"53"},{"size":2483,"mtime":1612121473782,"results":"78","hashOfConfig":"53"},{"size":2423,"mtime":1612305365673,"results":"79","hashOfConfig":"53"},{"size":3292,"mtime":1611776438217,"results":"80","hashOfConfig":"53"},{"size":3029,"mtime":1611657725425,"results":"81","hashOfConfig":"53"},{"size":2579,"mtime":1611998841256,"results":"82","hashOfConfig":"53"},{"size":2925,"mtime":1611659867189,"results":"83","hashOfConfig":"53"},{"size":616,"mtime":1611500501935,"results":"84","hashOfConfig":"53"},{"size":382,"mtime":1607543824191,"results":"85","hashOfConfig":"53"},{"size":1406,"mtime":1611638880845,"results":"86","hashOfConfig":"53"},{"size":2181,"mtime":1612380184391,"results":"87","hashOfConfig":"53"},{"size":20393,"mtime":1612283112961,"results":"88","hashOfConfig":"53"},{"size":322,"mtime":1612120835900,"results":"89","hashOfConfig":"53"},{"size":285,"mtime":1612213987846,"results":"90","hashOfConfig":"53"},{"size":186,"mtime":1611686954131,"results":"91","hashOfConfig":"53"},{"size":355,"mtime":1612115913064,"results":"92","hashOfConfig":"53"},{"size":984,"mtime":1611418181345,"results":"93","hashOfConfig":"53"},{"size":306,"mtime":1611686954131,"results":"94","hashOfConfig":"53"},{"size":11937,"mtime":1610252476574,"results":"95","hashOfConfig":"53"},{"size":7490,"mtime":1608453248853,"results":"96","hashOfConfig":"53"},{"size":139,"mtime":1611420039353,"results":"97","hashOfConfig":"53"},{"size":6044,"mtime":1612472901781,"results":"98","hashOfConfig":"53"},{"size":189,"mtime":1612003974266,"results":"99","hashOfConfig":"53"},{"size":9034,"mtime":1612464615401,"results":"100","hashOfConfig":"53"},{"size":4182,"mtime":1612381532604,"results":"101","hashOfConfig":"53"},{"size":399,"mtime":1612304535187,"results":"102","hashOfConfig":"53"},{"size":549,"mtime":1612381171338,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"1gp1tlp",{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"106"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"106"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"106"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"106"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"106"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"106"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"106"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"106"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"106"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"106"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"106"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"106"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"106"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"106"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"/Users/danny/Documents/Projects/boogalu/src/index.js",[],["221","222"],"/Users/danny/Documents/Projects/boogalu/src/App.js",["223"],"/Users/danny/Documents/Projects/boogalu/src/reportWebVitals.js",[],"/Users/danny/Documents/Projects/boogalu/src/Providers/StateProvider.js",["224"],"import React, { createContext, useReducer, useContext } from 'react';\nimport storeReducer from '../Reducers';\nimport LocalstorageCache from '../Services/LocalstorageCache';\n\nconst loggedInUserState = {\n  name: '',\n  username: '',\n  email: '',\n  phone: '',\n  dob: '2017-05-24',\n  gender: '',\n  country: '',\n  state: '',\n  password: '',\n  confirmPassword: '',\n  bio: '',\n  tnc: true,\n  profileImage: '',\n  source: ''\n}\n\nconst initialState = localStorage.getItem(\"Choreoculture\") ? JSON.parse(localStorage.getItem(\"Choreoculture\"))\n  : {\n    loggedInUser: {},\n    isLoading: null,\n    currentLoginFlow: null,\n    notification: {\n      msg: \"\",\n      type: \"\",\n      time: 3000\n    }\n  };\nconst store = createContext(initialState);\nconst { Provider } = store;\n\nconst useStoreConsumer = () => useContext(store);\n\nconst StateProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(LocalstorageCache(storeReducer), initialState);\n\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nexport { store, StateProvider, useStoreConsumer }","/Users/danny/Documents/Projects/boogalu/src/Components/Footer/index.js",["225","226","227","228","229","230","231"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport boogaluLogo from '../../Images/Boogalu-logo.svg';\nimport { FaInstagramSquare, FaYoutube, FaFacebookSquare } from 'react-icons/fa';\nimport * as $ from 'jquery';\n\nfunction Footer() {\n    const history = useHistory();\n    \n    useEffect(() => {\n        setTimeout(() => {\n            const pathName = history?.location?.pathname.split('/')[1];\n            const footerLinks = document.querySelectorAll('.js-page-links li');\n\n            if (footerLinks && footerLinks.length) {\n                footerLinks.forEach((ele) => {\n                    const getData = ele.getAttribute('data-name').toLocaleLowerCase();\n                    if (pathName?.length && getData.includes(pathName)) {\n                        ele.classList.add('active');\n                    }\n                });\n            }\n\n        }, 1000);\n\n    }, []);\n\n    function navigatePageLinks(event, path) {\n        const footerLinks = document.querySelectorAll('.js-page-links li');\n        if (footerLinks && footerLinks.length) {\n            footerLinks.forEach((ele) => {\n                const getData = ele.getAttribute('data-name').toLocaleLowerCase();\n                if (path?.length && getData.includes(path)) {\n                    ele.classList.add('active');\n                } else {\n                    if (ele.classList.contains('active')) {\n                        ele.classList.remove('active');    \n                    }\n                }\n            });\n        }\n        history.push(`/${path}`);\n        if (path) {\n            setTimeout(() => {\n                $('html,body').animate({\n                    scrollTop: 0\n                }, 700);\n            }, 100);\n        }\n    }\n\n    return (\n        <div>\n            <footer className=\"flex-container-VC\">\n                <div className=\"flex-1 copyright-wrap\">\n                    <div className=\"footer-logo-wrap\">\n                        <img src={boogaluLogo} alt=\"Logo\" className=\"image-7\" />\n                    </div>\n                    <div className=\"copyright-inner\">\n                        &#169; 2021 &nbsp;  \n                        <a href=\"https://www.choreoculture.com/\" target=\"_blank\">\n                            CHOREOCULTURE STUDIO.\n                        </a>\n                        <div>ALL RIGHTS RESERVED.</div>\n                    </div>\n                </div>\n                <div className=\"flex-1\">\n                    <div className=\"footer-tagline\" >Get the latest dance content &amp; ChoreoCulture news</div>\n                    <div className=\"email-input-inner\">\n                        <input type=\"email\" placeholder=\"Email\" />\n                    </div>\n                    <button className=\"subscribe\" >Subscribe</button>\n                </div>\n                <div className=\"footer-menus flex-1\">\n                    <ul className=\"menu-lists js-page-links flex-1\">\n                        <li data-name=\"career\">Careers</li>\n                        <li data-name=\"contactus\">\n                            <a onClick={(e) => navigatePageLinks(e, 'contactus')}>Contact us</a>\n                        </li>\n                        <li data-name=\"terms\">Terms</li>\n                    </ul>\n                    <ul className=\"menu-lists menu-lists-2 flex-1\">\n                        <li>\n                            <a href=\"https://www.instagram.com/choreo_culture/?hl=en\" title=\"Follow us on Insta\" target=\"_blank\">\n                                <i><FaInstagramSquare /></i>\n                                <span>Instagram</span>\n                            </a>\n                        </li>\n                        <li>\n                            <a href=\"https://www.youtube.com/user/anjanevents\" title=\"Subscribe our channel\" target=\"_blank\">\n                                <i><FaYoutube /></i>\n                                <span>Youtube</span>\n                            </a>\n                        </li>\n                        <li>\n                            <a href=\"https://www.facebook.com/choreocultureindia/\" title=\"Like our FB page\" target=\"_blank\">\n                                <i><FaFacebookSquare /></i>\n                                <span>Facebook</span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </footer>\n        </div>\n    )\n}\n\nexport default Footer\n","/Users/danny/Documents/Projects/boogalu/src/Components/Login/Login.js",["232","233","234","235","236","237","238","239","240","241","242","243"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useStoreConsumer } from '../../Providers/StateProvider';\nimport { GoogleLogin } from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport ArrowRightSharpIcon from '@material-ui/icons/ArrowRightSharp';\nimport bgImg from '../../Images/bg1.svg';\nimport { loginUser, signupUser } from '../../Actions/User/index';\nimport { getUserByEmail, getUserByPhone } from \"../../Services/User.service\";\nimport VideoUploader from \"../VideoUploader\";\nimport { enableLoading, disableLoading } from \"../../Actions/Loader\";\nimport { displayNotification } from \"../../Actions/Notification\";\nimport { NOTIFICATION_SUCCCESS, NOTIFICATION_ERROR } from \"../../Constants\";\nimport * as $ from 'jquery';\n\nexport default function Login() {\n    const { state, dispatch } = useStoreConsumer();\n    const history = useHistory();\n    const [loginCred, setloginCred] = useState({ username: \"\", password: \"\", showPassWord: false })\n    const [LoginError, setLoginError] = useState(null);\n    const [thirdPartyResponse, setThirdPartyResponse] = useState({ isLogginSuccess: false, data: null, source: '' })\n    const [openVdoUploadModal, setOpenVdoUploadModal] = useState(false)\n\n    useEffect(() => {\n        if (thirdPartyResponse.source === 'Facebook') signinUser('', 'Facebook');\n        if (thirdPartyResponse.source === 'Google') signinUser('', 'Google');\n    }, [thirdPartyResponse]);\n\n    useEffect(() => {\n        $('html,body').animate({\n            scrollTop: 0\n        }, 500);\n    }, [])\n\n    const setLoginResponseToServer = () => {\n        // notify server that user is loggedin\n        console.log('Save loggin user to db')\n\n    }\n    const successResponseGoogle = function (response) {\n        console.log(response);\n        let loginResponse = {\n            data: {\n                name: response.profileObj.name,\n                email: response.profileObj.email,\n                token: response.googleId,\n                profileImage: response.profileObj.imageUrl,\n            },\n            source: 'Google'\n        }\n        setThirdPartyResponse(loginResponse);\n    }\n\n    const failureResponseGoogle = function (response) {\n        if (response.error != \"idpiframe_initialization_failed\") {\n            setLoginError('Sorry there was a problem with your google login request.')\n        }\n    }\n\n    const responseFacebook = (response) => {\n        console.log(response);\n        if (response && response.userID) {\n            let loginResponse = {\n                isLogginSuccess: true,\n                data: response,\n                source: 'Facebook'\n            }\n            setThirdPartyResponse(loginResponse);\n        } else {\n            setLoginError('Sorry there was a problem with your facebook login request.')\n            console.log(\"facebook login error\", response);\n        }\n    }\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const handleChange = (prop) => (event) => {\n        setLoginError(null);\n        setloginCred({ ...loginCred, [prop]: event.target.value });\n    };\n\n    const showPassword = () => {\n        setloginCred({ ...loginCred, showPassWord: (loginCred.showPassWord ? false : true) })\n    }\n\n    const checkForUserPhone = (phone) => {\n        return new Promise((res, rej) => {\n            getUserByPhone(phone).subscribe((data) => {\n                if (data && data.length) res(data);\n                else res(null);\n            })\n        })\n    }\n\n    const checkForUserEmail = (email) => {\n        return new Promise((res, rej) => {\n            getUserByEmail(email).subscribe((data) => {\n                if (data && data.length) res(data);\n                else res(null);\n            })\n        })\n    }\n\n    const getUserLoginData = (userData) => {\n        return new Promise((res, rej) => {\n            if (thirdPartyResponse.data && thirdPartyResponse.data.email) {\n                // with gmail or fb flow\n                getUserByEmail(userData.email).subscribe((isRegisteredUser) => {\n                    if (isRegisteredUser.length) {\n                        res(isRegisteredUser[0]);\n                    } else {\n                        setLoginError('Please enter correct credentials.')\n                        rej({ ...userData, isRegistered: false });\n                    }\n                })\n            } else {\n                // without gmail fb flow\n                checkForUserEmail(userData.emailOrPhone).then((isRegisteredUser) => {\n                    if (isRegisteredUser && isRegisteredUser.length) {\n                        if (isRegisteredUser[0].password === userData.password) res(isRegisteredUser[0]);\n                        else {\n                            setLoginError('Please enter correct credentials.')\n                            rej();\n                        }\n                    } else {\n                        checkForUserPhone(userData.emailOrPhone).then((isRegisteredUser) => {\n                            if (isRegisteredUser && isRegisteredUser.length) {\n                                if (isRegisteredUser[0].password === userData.password) res(isRegisteredUser[0]);\n                                else {\n                                    setLoginError('Please enter correct credentials.')\n                                    rej();\n                                }\n                            } else {\n                                setLoginError('Please enter correct credentials.')\n                                rej();\n                            }\n                        })\n                    }\n                })\n            }\n        })\n    }\n    const signinUser = (e, status) => {\n        dispatch(enableLoading());\n        setLoginError(null);\n        let userData = {};\n        switch (status) {\n            case 'cred':\n                setThirdPartyResponse({ isLogginSuccess: false, data: null, source: '' })\n                e.preventDefault();\n                e.stopPropagation();\n                userData = {\n                    ...loginCred,\n                    phone: loginCred.username,\n                    email: loginCred.username,\n                    emailOrPhone: loginCred.username\n                }\n                getUserLoginData(userData)\n                    .then((data) => {\n                        //user is registered\n                        setLoginResponseToServer();\n                        data.source = 'Website';\n                        dispatch(loginUser(data));\n                        dispatch(disableLoading());\n                        dispatch(displayNotification({\n                            msg: \"Login successfully\",\n                            type: NOTIFICATION_SUCCCESS,\n                            time: 3000\n                        }));\n                        if (state.currentLoginFlow == 'competition') history.push('/competitions');\n                        else if (state.currentLoginFlow == 'subscription') history.push('/subscription');\n                        else if (state.currentLoginFlow == 'upload-video') setOpenVdoUploadModal(true);\n                        else history.push('/')\n                    })\n                    .catch((data) => {\n                        dispatch(disableLoading());\n                        if (data) {\n                            //user not registered\n                            history.push({\n                                pathname: '/register',\n                                state: data\n                            })\n                        }\n                    })\n                break;\n            case 'Google': case 'Facebook':\n                userData = {\n                    name: thirdPartyResponse.data.name,\n                    email: thirdPartyResponse.data.email,\n                }\n                getUserLoginData(userData)\n                    .then((data) => {\n                        //user is registered\n                        dispatch(disableLoading());\n                        setLoginResponseToServer();\n                        data.source = thirdPartyResponse.source;\n                        dispatch(loginUser(data));\n                        dispatch(displayNotification({\n                            msg: \"Login successfully\",\n                            type: NOTIFICATION_SUCCCESS,\n                            time: 3000\n                        }));\n                        if (state.currentLoginFlow == 'competition') history.push('/competitions');\n                        else if (state.currentLoginFlow == 'subscription') history.push('/subscription');\n                        else if (state.currentLoginFlow == 'upload-video') setOpenVdoUploadModal(true);\n                        else history.push('/')\n                    })\n                    .catch((data) => {\n                        dispatch(disableLoading());\n                        if (data) {\n                            data.source = thirdPartyResponse.source;\n                            //user not registered\n                            history.push({\n                                pathname: '/register',\n                                state: data\n                            })\n                        }\n                    })\n                break;\n        }\n    }\n\n    return (\n        <div className=\"login-wrap clearfix\">\n            <form className=\"form-wrap clearfix\" onSubmit={(e) => signinUser(e, 'cred')}>\n                <div className=\"heading-outer\">\n                    <div className=\"heading1\">Welcome Back!</div>\n                    <div className=\"heading2\">Login to your existant account of Choreoculture.</div>\n                </div>\n                <div className=\"form-outer clearfix\">\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-username\"\n                            label=\"Username / Email / Phone\"\n                            onChange={handleChange('username')}\n                            value={loginCred.username}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl className=\"\" variant=\"outlined\" style={{ width: '100%' }}>\n                            <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n                            <OutlinedInput\n                                required\n                                id=\"outlined-adornment-password\"\n                                type={loginCred.showPassWord ? 'text' : 'password'}\n                                value={loginCred.password}\n                                onChange={handleChange('password')}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={showPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {loginCred.showPassWord ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                labelWidth={70}\n                            />\n                        </FormControl>\n                    </div>\n                    <div className=\"action-wrap\">\n                        {LoginError && <div className=\"login-error\">\n                            {LoginError}\n                        </div>}\n                        <div className=\"submit-btn clearfix\">\n                            <Button variant=\"contained\" type=\"submit\" color=\"primary\">Sign In\n                            <ArrowRightSharpIcon />\n                            </Button>\n                        </div>\n                        <div className=\"forgot-password clearfix\">\n                            <div>Forgot Password ?</div>\n                        </div>\n                    </div>\n                    <div className=\"or-seprator clearfix\">\n                        <span></span>\n                        <div>OR</div>\n                        <span></span>\n                    </div>\n                    <div className=\"login-with\">\n                        <p className=\"loginWithTitle\">Login with</p>\n                        <div className=\"login-with-google\">\n                            <GoogleLogin\n                                className=\"google-login-btn\"\n                                clientId=\"417866547364-mesv7a9cn6bj4n3ge45s8b6hhl1vdam0.apps.googleusercontent.com\"\n                                buttonText=\"Login with Google\"\n                                onSuccess={successResponseGoogle}\n                                onFailure={failureResponseGoogle} >\n                            </GoogleLogin>\n                        </div>\n                        <div className=\"login-with-fb\">\n                            <div className=\"login-with-fb\">\n                                <FacebookLogin\n                                    appId=\"813330422546108\"\n                                    autoLoad={false}\n                                    fields=\"name,email,picture\"\n                                    callback={responseFacebook}\n                                    cssClass=\"facebook-login-btn\"\n                                    icon={<FacebookIcon />}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"already-login-wrap\">\n                        <div className=\"text-wrap\">New to Choreoculture?</div>\n                        <Button color=\"primary\" onClick={() => history.push('/register')}>SIGN UP</Button>\n                    </div>\n                </div>\n            </form>\n\n            <div className=\"img-wrap\">\n                <img src={bgImg} />\n            </div>\n            {openVdoUploadModal && <VideoUploader handleClose={() => setOpenVdoUploadModal(false)} />}\n        </div>\n    );\n}","/Users/danny/Documents/Projects/boogalu/src/Components/Profile/Profile.js",["244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280"],"/Users/danny/Documents/Projects/boogalu/src/Components/Admin/Subscription.js",["281","282"],"import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ImageUploader from 'react-images-upload';\nimport Button from '@material-ui/core/Button';\nimport { uploadImage } from \"../../Services/Upload.service\";\nimport { saveSubscription } from \"../../Services/Subscription.service\";\n\nexport default function Subscription() {\n    const initialSubscriptionData = {\n        name: \"\",\n        desc: \"\",\n        active: true,\n        type: \"\",\n        amount: \"\",\n        img: \"\",\n        startAt: \"\",\n        endAt: \"\",\n        plans: \"\",\n    }\n    const [Subscription, setSubscription] = useState(initialSubscriptionData);\n    const [isAdminLoggedIn, toggleAdminLogin] = useState(false);\n    const [adminEmail, setAdminEmail] = useState('');\n    const [adminPwd, setAdminPwd] = useState('');\n    const [loggedInMessages, setLoginMessage] = useState('');\n\n    function handleAdminLogin(value, type) {\n        if (type === 'email') {\n            setAdminEmail(value?.target?.value);\n        } else {\n            setAdminPwd(value?.target?.value);\n        }\n    }\n\n    function triggerLogin(event) {\n        if (adminEmail && adminEmail === 'b2b@boxpuppet.com' && adminPwd && adminPwd === 'Box-puppet@1001') {\n            toggleAdminLogin(true);\n        } else {\n            toggleAdminLogin(false);\n            setLoginMessage('Invalid credentials, please enter valid email-Id and Password!');\n        }\n    }\n\n    const handleChange = (prop, index) => (event) => {\n        let value = event.target.value;\n        if (prop === 'active') value = event.target.checked;\n        if (prop === 'prices') {\n            Subscription.prices[index] = event.target.value;\n            value = Subscription.prices;\n        }\n        setSubscription({ ...Subscription, [prop]: value });\n    };\n\n    const onimageUpload = (picture) => {\n        setSubscription({ ...Subscription, img: picture });\n    }\n\n    async function saveDetails(e) {\n        console.log(Subscription)\n        // upload Subscription image to bucket\n        if (Subscription.img[0]) {\n            const reader = new FileReader();\n            reader.readAsDataURL(Subscription.img[0]);\n            reader.onload = () => {\n                uploadImage(reader.result, 'subscription', 'small').subscribe((downloadableUrl) => {\n                    Subscription.img = downloadableUrl;\n                    // save Subscription data to db with imag url\n                    saveSubscription(Subscription).subscribe((response) => {\n                        console.log('Subscription success', response);\n                        setSubscription(initialSubscriptionData);\n                    })\n                })\n            }\n        } else {\n            saveSubscription(Subscription).subscribe((response) => {\n                console.log('Subscription success', response);\n                setSubscription(initialSubscriptionData);\n            })\n        }\n    }\n    return (\n        <div className=\"subscription-bo-wrap clearfix\">\n            {\n                isAdminLoggedIn ?\n                    <h1>Create a new Subscription</h1>\n                :\n                    <h1>Login to create new Subscription</h1>\n            }\n            {\n                isAdminLoggedIn ?\n                <div className=\"inner-form-wrap\">\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-name\"\n                            label=\"Name\"\n                            onChange={handleChange('name')}\n                            value={Subscription.name}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            id=\"outlined-required-desc\"\n                            label=\"Description\"\n                            onChange={handleChange('desc')}\n                            value={Subscription.desc}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            id=\"outlined-required-amount\"\n                            label=\"Amount\"\n                            type=\"number\"\n                            onChange={handleChange('amount')}\n                            value={Subscription.amount}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl variant=\"outlined\" className=\"input-field\">\n                            <InputLabel id=\"select-outlined-label\">Plans</InputLabel>\n                            <Select\n                                labelId=\"select-outlined-label\"\n                                id=\"select-outlined\"\n                                value={Subscription.plans}\n                                onChange={handleChange('plans')}\n                            >\n                                <MenuItem value=\"monthly\">Monthly</MenuItem>\n                                <MenuItem value=\"annual\">Annual</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div className=\"input-wrap data-time-wrap\">\n                        <TextField\n                            id=\"datetime-local-start\"\n                            label=\"Start Date & Time\"\n                            type=\"datetime-local\"\n                            value={Subscription.startAt}\n                            onChange={handleChange('startAt')}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n                        <TextField\n                            id=\"datetime-local-end\"\n                            label=\"End Date & Time\"\n                            type=\"datetime-local\"\n                            value={Subscription.endAt}\n                            onChange={handleChange('endAt')}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n                    </div>\n                    {/* <div className=\"input-wrap\">\n                        <ImageUploader\n                            withIcon={true}\n                            buttonText='Upload image'\n                            onChange={onimageUpload}\n                            imgExtension={['.jpg', '.gif', '.png', '.gif', '.svg']}\n                            maxFileSize={5242880}\n                            accept=\"image/*\"\n                            withPreview={true}\n                            singleImage={true}\n                            label=\"Select subscription image\"\n                        />\n                    </div> */}\n                    <div className=\"input-wrap action-wrap\">\n                        <Button variant=\"contained\" color=\"primary\">Cancel</Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={(e) => saveDetails(e)}>Save</Button>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    required\n                                    color=\"primary\"\n                                    className=\"selected-item-checkbox\"\n                                    checked={Subscription.active}\n                                    onChange={handleChange('active')}\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                />\n                            }\n                            label=\"Active Subscription\"\n                        />\n                    </div>\n                </div> : \n\n                <div className=\"login-admin-form\">\n                    <p className=\"errorMessage\">{loggedInMessages}</p>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"admin-id\"\n                            label=\"Email Id\"\n                            onChange={value => handleAdminLogin(value, 'email')}\n                            variant=\"outlined\"\n                        />\n                    </div>    \n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"admin-pwd\"\n                            type=\"password\"\n                            label=\"Password\"\n                            onChange={value => handleAdminLogin(value, 'pwd')}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap action-wrap\">\n                        <Button variant=\"contained\" color=\"secondary\" onClick={(e) => triggerLogin(e)}>Login</Button>\n                    </div>\n                </div>\n            }\n        </div>\n    )\n}\n","/Users/danny/Documents/Projects/boogalu/src/Components/Admin/Competition.js",["283"],"import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ImageUploader from 'react-images-upload';\nimport Button from '@material-ui/core/Button';\nimport { saveCompetition } from \"../../Services/Competition.service\";\nimport { uploadImage } from \"../../Services/Upload.service\";\nimport { toBase64 } from \"../../Services/Utils\";\n\nexport default function Competition() {\n    const initialCompetitionData = {\n        name: \"\",\n        type: \"\",\n        desc: \"\",\n        active: true,\n        fee: \"\",\n        img: \"\",\n        startAt: \"\",\n        endAt: \"\",\n        prices: [],\n    }\n\n    const [isAdminLoggedIn, toggleAdminLogin] = useState(false);\n    const [CompetitionData, setCompetitionData] = useState(initialCompetitionData);\n    const [adminEmail, setAdminEmail] = useState('');\n    const [adminPwd, setAdminPwd] = useState('');\n    const [loggedInMessages, setLoginMessage] = useState('');\n\n    function handleAdminLogin(value, type) {\n        if (type === 'email') {\n            setAdminEmail(value?.target?.value);\n        } else {\n            setAdminPwd(value?.target?.value);\n        }\n    }\n\n    function triggerLogin(event) {\n        if (adminEmail && adminEmail === 'b2b@boxpuppet.com' && adminPwd && adminPwd === 'Box-puppet@1001') {\n            toggleAdminLogin(true);\n        } else {\n            toggleAdminLogin(false);\n            setLoginMessage('Invalid credentials, please enter valid email-Id and Password!');\n        }\n    }\n\n    const handleChange = (prop, index) => (event) => {\n        let value = event.target.value;\n        if (prop === 'active') value = event.target.checked;\n        if (prop === 'prices') {\n            CompetitionData.prices[index] = event.target.value;\n            value = CompetitionData.prices;\n        }\n        setCompetitionData({ ...CompetitionData, [prop]: value });\n    };\n\n    const onimageUpload = (picture) => {\n        setCompetitionData({ ...CompetitionData, img: picture });\n    }\n\n    async function saveDetails(e) {\n        console.log(CompetitionData)\n        // upload competition image to bucket\n        if (CompetitionData.img[0]) {\n            const reader = new FileReader();\n            reader.readAsDataURL(CompetitionData.img[0]);\n            reader.onload = () => {\n                uploadImage(reader.result, 'competition', 'small').subscribe((downloadableUrl) => {\n                    CompetitionData.img = downloadableUrl;\n                    // save competition data to db with imag url\n                    saveCompetition(CompetitionData).subscribe((response) => {\n                        console.log('competition success', response);\n                        setCompetitionData(initialCompetitionData);\n                    })\n                })\n            }\n        }\n    }\n    return (\n        <div className=\"competition-bo-wrap clearfix\">\n            {\n                isAdminLoggedIn ?\n                    <h1>Launch a new competition</h1>\n                : \n                    <h1>Login to create new Competition</h1>\n            }\n            {\n                isAdminLoggedIn ? \n                <div className=\"inner-form-wrap\">\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-name\"\n                            label=\"Name\"\n                            onChange={handleChange('name')}\n                            value={CompetitionData.name}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            id=\"outlined-required-desc\"\n                            label=\"Description\"\n                            onChange={handleChange('desc')}\n                            value={CompetitionData.desc}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            id=\"outlined-required-fee\"\n                            label=\"Fee\"\n                            type=\"number\"\n                            onChange={handleChange('fee')}\n                            value={CompetitionData.fee}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl variant=\"outlined\" className=\"input-field\">\n                            <InputLabel id=\"select-outlined-label\">Type</InputLabel>\n                            <Select\n                                labelId=\"select-outlined-label\"\n                                id=\"select-outlined\"\n                                value={CompetitionData.type}\n                                onChange={handleChange('type')}\n                                label=\"Type\"\n                            >\n                                <MenuItem value=\"running\">Currently Running</MenuItem>\n                                <MenuItem value=\"upcomming\">Up-Comming</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div className=\"input-wrap data-time-wrap\">\n                        <TextField\n                            id=\"datetime-local-start\"\n                            label=\"Start Date & Time\"\n                            type=\"datetime-local\"\n                            value={CompetitionData.startAt}\n                            onChange={handleChange('startAt')}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n                        <TextField\n                            id=\"datetime-local-end\"\n                            label=\"End Date & Time\"\n                            type=\"datetime-local\"\n                            value={CompetitionData.endAt}\n                            onChange={handleChange('endAt')}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-name\"\n                            label=\"First Price\"\n                            onChange={handleChange('prices', 0)}\n                            value={CompetitionData.prices[0]}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-name\"\n                            label=\"Second Price\"\n                            onChange={handleChange('prices', 1)}\n                            value={CompetitionData.prices[1]}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-name\"\n                            label=\"Third Price\"\n                            onChange={handleChange('prices', 2)}\n                            value={CompetitionData.prices[2]}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <ImageUploader\n                            withIcon={true}\n                            buttonText='Upload image'\n                            onChange={onimageUpload}\n                            imgExtension={['.jpg', '.gif', '.png', '.gif', '.svg']}\n                            maxFileSize={5242880}\n                            accept=\"image/*\"\n                            withPreview={true}\n                            singleImage={true}\n                            label=\"Select competition image\"\n                        />\n                    </div>\n                    <div className=\"input-wrap action-wrap\">\n                        <Button variant=\"contained\" color=\"primary\">Cancel</Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={(e) => saveDetails(e)}>Save</Button>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    required\n                                    color=\"primary\"\n                                    className=\"selected-item-checkbox\"\n                                    checked={CompetitionData.active}\n                                    onChange={handleChange('active')}\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                />\n                            }\n                            label=\"Active Competition\"\n                        />\n                    </div>\n                </div> \n                :\n                <div className=\"login-admin-form\">\n                    <p className=\"errorMessage\">{loggedInMessages}</p>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"admin-id\"\n                            label=\"Email Id\"\n                            onChange={value => handleAdminLogin(value, 'email')}\n                            variant=\"outlined\"\n                        />\n                    </div>    \n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"admin-pwd\"\n                            type=\"password\"\n                            label=\"Password\"\n                            onChange={value => handleAdminLogin(value, 'pwd')}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap action-wrap\">\n                        <Button variant=\"contained\" color=\"secondary\" onClick={(e) => triggerLogin(e)}>Login</Button>\n                    </div>\n                </div>\n            }\n        </div>\n    )\n}\n","/Users/danny/Documents/Projects/boogalu/src/Components/EditProfile/EditProfile.js",["284","285","286","287","288","289","290","291"],"import React, { useState, useEffect, useRef } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useStoreConsumer } from '../../Providers/StateProvider';\nimport { signupUser } from '../../Actions/User';\nimport bgImg from '../../Images/bg1.svg';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport ArrowRightSharpIcon from '@material-ui/icons/ArrowRightSharp';\nimport { updateUser } from \"../../Services/User.service\";\nimport { uploadImage } from \"../../Services/Upload.service\";\nimport { FaPlus, FaEdit } from 'react-icons/fa';\nimport { NOTIFICATION_SUCCCESS, NOTIFICATION_ERROR, MALE_PROFILE_DEFAULT_IMAGE, FEMALE_PROFILE_DEFAULT_IMAGE } from \"../../Constants\";\nimport { enableLoading, disableLoading } from \"../../Actions/Loader\";\nimport * as $ from 'jquery';\n\nexport default function EditProfile() {\n    const { state, dispatch } = useStoreConsumer();\n    const history = useHistory();\n    let loggedInUser = state.loggedInUser;\n    // get data from history props if redirected through google or facebook login\n    if (history.location.state && (history.location.state.source == 'Facebook' || history.location.state.source == 'Google')) {\n        loggedInUser.email = history.location.state.email;\n        loggedInUser.name = history.location.state.name;\n        // setNeedToRegisterError('You are not registered yet, Please register with Choreoculture.')\n    }\n    const uploaderRef = useRef(null);\n    const [userDetails, setUserDetails] = useState(loggedInUser);\n    const [SignUpError, setSignUpError] = useState(null);\n    const [showHidePassword, setShowHidePassword] = useState({ showPassword: false, showConfirmPassword: false });\n    const [IsProfileImageChanged, setIsProfileImageChanged] = useState(false);\n    const [isUserPhotoUploaded, userPhotoUploadToggle] = useState(false);\n    const handleChange = (prop) => (event) => {\n        setUserDetails({ ...userDetails, [prop]: event.target.value });\n        console.log(userDetails)\n    };\n\n    const handleClickShowPassword = (prop) => {\n        setShowHidePassword({ ...showHidePassword, [prop]: !showHidePassword[prop] });\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    useEffect(() => {\n        $('html,body').animate({\n            scrollTop: 0\n        }, 500);\n        if (userDetails && !userDetails.profileImage) {\n            setUserDetails({ ...userDetails, profileImage: MALE_PROFILE_DEFAULT_IMAGE })\n        }\n    }, [])\n\n    const setSignupUserCred = (e) => {\n        if (userDetails.password != userDetails.confirmPassword) {\n            setSignUpError('Password dose not match.');\n            return;\n        }\n        dispatch(enableLoading());\n        if (IsProfileImageChanged) {\n            uploadImage(userDetails.profileImage, 'user', 'small').subscribe((downloadableUrl) => {\n                userDetails.profileImage = downloadableUrl;\n                updateUser(userDetails.key, userDetails).subscribe(() => {\n                    dispatch(disableLoading());\n                    dispatch(signupUser(userDetails));\n                    history.push(({\n                        pathname: '/profile',\n                        state: null\n                    }));\n                })\n            })\n        } else {\n            updateUser(userDetails.key, userDetails).subscribe(() => {\n                dispatch(disableLoading());\n                dispatch(signupUser(userDetails));\n                history.push(({\n                    pathname: '/profile',\n                    state: null\n                }));\n            })\n        }\n        e.preventDefault();\n    }\n\n    async function onChangeFile(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        var file = event.target.files[0];\n        console.log(file);\n        if (file) {\n            setUserDetails({ ...userDetails, profileImage: null });\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                userPhotoUploadToggle(true);\n                setIsProfileImageChanged(true);\n                setUserDetails({ ...userDetails, profileImage: reader.result });\n            }\n            reader.onerror = error => console.error(error);\n        } else setIsProfileImageChanged(false);\n    }\n\n    return (\n        <div className=\"logout-wrap edit-page-wrap clearfix\">\n            <form className=\"form-wrap clearfix\" onSubmit={setSignupUserCred}>\n                <div className=\"heading-outer\">\n                    <div className=\"heading1\">Update Profile</div>\n                </div>\n                <div className=\"profile-img-wrap\">\n                    <div className=\"uploaded-img\" >\n                        <img src={userDetails.profileImage} onClick={() => { uploaderRef.current.click() }} />\n                    </div>\n                    {\n                        isUserPhotoUploaded ?\n                            <i className=\"plus-icon\"><FaEdit /></i>\n                            :\n                            <i className=\"plus-icon\"><FaPlus /></i>\n                    }\n                    <input id=\"myInput\"\n                        type=\"file\"\n                        accept=\"image/*\"\n                        ref={uploaderRef}\n                        onChange={(e) => onChangeFile(e)}\n                    />\n                </div>\n                <div className=\"form-outer final-registration-block clearfix\">\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-Name\"\n                            label=\"Name\"\n                            onChange={handleChange('name')}\n                            value={userDetails.name}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-Username\"\n                            label=\"Username\"\n                            onChange={handleChange('username')}\n                            value={userDetails.username}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            type=\"tel\"\n                            id=\"outlined-required-phone\"\n                            label=\"Phone\"\n                            onChange={handleChange('phone')}\n                            value={userDetails.phone}\n                            variant=\"outlined\"\n                            InputProps={{ readOnly: true }}\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-email\"\n                            label=\"Email\"\n                            type=\"email\"\n                            onChange={handleChange('email')}\n                            value={userDetails.email}\n                            variant=\"outlined\"\n                            InputProps={{ readOnly: true }}\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-country\"\n                            label=\"Country\"\n                            onChange={handleChange('country')}\n                            value={userDetails.country}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-state\"\n                            label=\"State\"\n                            onChange={handleChange('state')}\n                            value={userDetails.state}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl className=\"\" variant=\"outlined\" style={{ width: '100%' }}>\n                            <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n                            <OutlinedInput\n                                required\n                                id=\"outlined-adornment-password\"\n                                type={showHidePassword.showPassword ? 'text' : 'password'}\n                                value={userDetails.password}\n                                onChange={handleChange('password')}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={() => handleClickShowPassword('showPassword')}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showHidePassword.showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                labelWidth={70}\n                            />\n                        </FormControl>\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl className=\"\" variant=\"outlined\" style={{ width: '100%' }}>\n                            <InputLabel htmlFor=\"outlined-adornment-confirm-password\">Confirm Password</InputLabel>\n                            <OutlinedInput\n                                required\n                                id=\"outlined-adornment-confirm-password\"\n                                type={showHidePassword.showConfirmPassword ? 'text' : 'password'}\n                                value={userDetails.confirmPassword}\n                                onChange={handleChange('confirmPassword')}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle confirm password visibility\"\n                                            onClick={() => handleClickShowPassword('showConfirmPassword')}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showHidePassword.showConfirmPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                labelWidth={70}\n                            />\n                        </FormControl>\n                    </div>\n                    <div className=\"input-wrap\">\n                        <div className=\"dob-wrap\">\n                            <TextField className=\"input-field\"\n                                id=\"date\"\n                                label=\"Birthday\"\n                                type=\"date\"\n                                style={{ width: '100%' }}\n                                onChange={handleChange('dob')}\n                                value={userDetails.dob}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl variant=\"outlined\" className=\"input-field\">\n                            <InputLabel id=\"select-outlined-label\">Gender</InputLabel>\n                            <Select\n                                labelId=\"select-outlined-label\"\n                                id=\"select-outlined\"\n                                value={userDetails.gender}\n                                onChange={handleChange('gender')}\n                                label=\"Gender\"\n                            >\n                                <MenuItem value=\"Male\">Male</MenuItem>\n                                <MenuItem value=\"Female\">Female</MenuItem>\n                                <MenuItem value=\"Other\">Other</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div className=\"input-wrap bio-wrap\">\n                        <TextField className=\"input-field bio-input\"\n                            id=\"outlined-required-bio\"\n                            label=\"Bio\"\n                            value={userDetails.bio}\n                            onChange={handleChange('bio')}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap bio-wrap edit-profile-page-input\">\n                        <div className=\"tnc-wrap\">\n                            <div className=\"tnc-content clearfix\">\n                                <div className=\"checkbox-wrap\">\n                                    <Checkbox\n                                        required\n                                        color=\"primary\"\n                                        checked={userDetails.tnc}\n                                        onChange={(e) => setUserDetails({ ...userDetails, tnc: e.target.checked })}\n                                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                    />\n                                </div>\n                                <div className=\"note-wrap\">Yes, I agree to the terms and conditions </div>\n                            </div>\n                        </div>\n                        {SignUpError && <div className=\"login-error\">\n                            {SignUpError}\n                        </div>}\n                        <div className=\"submit-btn clearfix\">\n                            <Button variant=\"contained\" type=\"submit\" color=\"primary\" >Update\n                            <ArrowRightSharpIcon />\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n            <div className=\"img-wrap\">\n                <img src={bgImg} alt=\"bg1\" />\n            </div>\n        </div>\n    );\n}","/Users/danny/Documents/Projects/boogalu/src/Services/LocalstorageCache.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/Navigation/index.js",["292","293","294","295","296","297"],"/Users/danny/Documents/Projects/boogalu/src/Components/Splash/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/Signup/index.js",["298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331"],"/Users/danny/Documents/Projects/boogalu/src/Components/Upcoming/index.js",["332","333","334"],"import React, { useState, useRef, useEffect } from 'react'\nimport LessonsCategories from '../../Data/LessonsCategory';\nimport Video from \"../Vedio/Video\";\n\nfunction Upcoming () {\n    const [activeCategory, setActiveCategory] = useState(LessonsCategories[0]);\n    return (\n        <div className=\"lessons lessons-wrap\" id=\"upcomingLessons\">\n            <div className=\"inner-page\">\n                <h1>Learn from the Experts</h1>\n                <p>\n                    Lessons for all users from our expert faculty members.\n                    From Hip-Hop to Bharatnatyam. You'll get all learning videos\n                    at one place.\n                </p>\n                <p className=\"launching-soon\">Videos launching soon! Stay connected!</p>\n                <p className=\"from-our-expert-title\">Few sample lessons</p>\n                <div className=\"lessons-vdo-wrap\">\n                    {activeCategory.upcoming.map((item, index) => {\n                        return <Video key={'upcoming-'+index} vdoObj={item}></Video>\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Upcoming;\n","/Users/danny/Documents/Projects/boogalu/src/Components/Subscriptions/index.js",["335","336","337","338","339"],"/Users/danny/Documents/Projects/boogalu/src/Components/Page404/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/Feeds/index.js",["340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360"],"/Users/danny/Documents/Projects/boogalu/src/Components/Homepage/index.js",["361","362","363","364","365"],"/Users/danny/Documents/Projects/boogalu/src/Components/VideoUploader/index.js",["366","367","368"],"/Users/danny/Documents/Projects/boogalu/src/Components/Competitions/index.js",["369","370","371","372"],"/Users/danny/Documents/Projects/boogalu/src/Components/Contactus/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/Loader/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/Notification/index.js",["373"],"import React, { useState, useEffect } from 'react'\nimport { useStoreConsumer } from '../../Providers/StateProvider';\nimport { removeNotification } from \"../../Actions/Notification\";\nexport default function Notification() {\n\n    const { state, dispatch } = useStoreConsumer();\n    const [ShowNotification, setShowNotification] = useState(true);\n    const [ActiveNotification, setActiveNotification] = useState(null);\n\n    useEffect(() => {\n        if (state.notification && state.notification.msg) {\n            setShowNotification(true);\n            setActiveNotification(state.notification);\n            setTimeout(() => {\n                setShowNotification(false);\n                setActiveNotification(null);\n                dispatch(removeNotification({ msg: '', type: '', time: 3000 }))\n            }, state.notification.time);\n        }\n    }, [state])\n    return (\n        <>\n            {ShowNotification ? <div className={`${ActiveNotification?.type} notification-wrap`}>\n                <div className=\"notification-type\">\n                    <div className=\"notification-msg\">{ActiveNotification?.msg}</div>\n                </div>\n            </div> : null}\n        </>\n    )\n}","/Users/danny/Documents/Projects/boogalu/src/Reducers/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Services/User.service.js",[],"/Users/danny/Documents/Projects/boogalu/src/Services/UploadedVideo.service.js",[],"/Users/danny/Documents/Projects/boogalu/src/Services/EnrollCompetition.service.js",[],"/Users/danny/Documents/Projects/boogalu/src/Services/Competition.service.js",[],"/Users/danny/Documents/Projects/boogalu/src/Services/Subscription.service.js",[],"/Users/danny/Documents/Projects/boogalu/src/Services/Upload.service.js",["374","375"],"import { Observable } from 'rxjs';\nimport firebase from './firebase';\nconst storageRef = firebase.storage().ref();\n\nconst BASE_PATH = '/uploads';\nvar FILE_NAME = '';\nvar FILE_PATH = '';\n// from ==> competition or user upload\n// type => small or large\nexport function uploadImage(image, from, type) {\n\n    let date = new Date();\n    let id = date.getTime().toString();\n    FILE_NAME = (type ? type : '') + 'pic' + id + '.jpg';\n    FILE_PATH = BASE_PATH + '/' + from + '/' + FILE_NAME;\n\n    let uploadTask = storageRef.child(FILE_PATH).putString(image, 'data_url');\n\n    return new Observable((observer) => {\n        uploadTask.on('state_changed',\n            (snapshot) => {\n                let progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                console.log('Upload is ' + progress + '% done');\n                switch (snapshot.state) {\n                    case firebase.storage.TaskState.PAUSED: // or 'paused'\n                        console.log('Upload is paused');\n                        break;\n                    case firebase.storage.TaskState.RUNNING: // or 'running'\n                        console.log('Upload is running');\n                        break;\n                }\n            }, (error) => {\n                console.log(error);\n            }, () => {\n                uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n                    observer.next(downloadURL);\n                });\n            });\n    });\n}\n\nexport function deleteImage(imageUrl) {\n    storageRef.refFromURL(imageUrl).delete();\n}\n\nexport function uploadVideo(video) {\n\n    let date = new Date();\n    let id = date.getTime().toString();\n    FILE_NAME = 'user' + id + '.mp4';\n    FILE_PATH = BASE_PATH + '/video/' + FILE_NAME;\n\n    let uploadTask = storageRef.child(FILE_PATH).putString(video, 'data_url');\n\n    return new Observable((observer) => {\n        uploadTask.on('state_changed',\n            (snapshot) => {\n                let progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                // console.log('Upload is ' + progress + '% done');\n                observer.next({ donePercentage: progress });\n                switch (snapshot.state) {\n                    case firebase.storage.TaskState.PAUSED: // or 'paused'\n                        console.log('Upload is paused');\n                        break;\n                    case firebase.storage.TaskState.RUNNING: // or 'running'\n                        console.log('Upload is running');\n                        break;\n                }\n            }, (error) => {\n                console.log(error);\n            }, () => {\n                uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n                    observer.next({ downloadURL });\n                });\n            });\n    });\n}\n\nexport function deleteVideo(videoUrl) {\n    storageRef.refFromURL(videoUrl).delete();\n}\n","/Users/danny/Documents/Projects/boogalu/src/Components/Vedio/Video.js",[],"/Users/danny/Documents/Projects/boogalu/src/Actions/User/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Services/Utils.js",["376","377","378"],"export function formatTime(time) {\n    time = new Date(time);\n    const hour24 = time.getHours();\n    let minutes = (time.getMinutes() === 0) ? '00' : time.getMinutes();\n    minutes = (minutes > 0 && minutes < 10) ? `0${minutes}` : minutes;\n    const ampm = (hour24 >= 12) ? 'PM' : 'AM';\n    let hour = hour24 % 12 || 12;\n    //append zero is hour is single digit\n    if (hour < 10) {\n        hour = `0${hour}`;\n    }\n    return `${hour}:${minutes} ${ampm}`;\n};\n\nexport function formatDate(date, status) {\n    date = new Date(date);\n    var monthNames = [\n        \"January\", \"February\", \"March\",\n        \"April\", \"May\", \"June\", \"July\",\n        \"August\", \"September\", \"October\",\n        \"November\", \"December\"\n    ];\n    let day = date.getDate();\n    let monthIndex = date.getMonth();\n    let year = date.getFullYear();\n    if (status == 3) return day + 'th ' + monthNames[monthIndex] + \" \" + year;\n    if (status == 2) return day + 'th ' + monthNames[monthIndex];\n    if (status == 1) return day;\n};\n\nexport function timeStampToNewDate(timeStamp) {\n    return new Date(timeStamp.seconds * 1000 + Math.round(timeStamp.nanoseconds / 1000000));\n}\n\nexport function toBase64(file) {\n    new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = error => reject(error);\n    });\n}","/Users/danny/Documents/Projects/boogalu/src/Constants/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/CompetitionsDetails/index.js",["379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395"],"import React, { useState, useEffect, useRef } from 'react'\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport { FaCloudUploadAlt } from 'react-icons/fa';\nimport { useHistory } from \"react-router-dom\";\nimport { useStoreConsumer } from '../../Providers/StateProvider';\nimport { THUMBNAIL_URL } from '../../Constants';\nimport \"./CompetitionsDetails.scss\";\nimport EnrollCompetition from \"../EnrollCompetition\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { setActiveCompetition } from \"../../Actions/Competition\";\nimport { enableLoginFlow } from \"../../Actions/LoginFlow\";\nimport { getUploadedVideosByUserId } from \"../../Services/UploadedVideo.service\";\nimport { formatDate, formatTime } from \"../../Services/Utils\";\nimport VideoUploader from \"../VideoUploader\";\nimport { enableLoading, disableLoading } from \"../../Actions/Loader\";\nimport { NOTIFICATION_ERROR } from \"../../Constants\";\nimport { displayNotification } from \"../../Actions/Notification\";\n//activestep 1 === Competition details\n//activestep 2 === User submitted competition details if already enrolled\n//activestep 3 === Video selection\n//activestep 4 === final age group and video submission for competition\n\nexport default function CompetitionsDetails({ open, handleClose, initialStep }) {\n\n    const { state, dispatch } = useStoreConsumer();\n    const uploaderRef = useRef(null);\n    const history = useHistory();\n    const competitionDetails = state.activeCompetition;\n    console.log(competitionDetails);\n    const loggedInUser = state.loggedInUser;\n    const [userUploadedVdos, setUserUploadedVideoList] = useState([]);\n    const tncRef = useRef();\n    const [TnC, setTnC] = useState(false);\n    const [ActiveStep, setActiveStep] = useState(initialStep || 1);\n    const [disableSubmitVdoButton, setDisableSubmitVdoButton] = useState(false);\n    const [VdoUploadDateLimit, setVdoUploadDateLimit] = useState(null)\n    const [SelectedVideo, setSelectedVideo] = useState({ title: \"\", desc: \"\", file: null });\n\n    useEffect(() => {\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => {\n            document.removeEventListener('mousedown', handleClickOutside);\n        }\n    }, []);\n\n    useEffect(() => {\n        if (competitionDetails) {\n            let vdoUploadUpto = new Date(competitionDetails.startAt);\n            new Date(vdoUploadUpto.setDate(vdoUploadUpto.getDate() + 30));\n            let displayDate = formatDate(vdoUploadUpto, 3) + \" \" + formatTime(vdoUploadUpto)\n            setVdoUploadDateLimit(displayDate);\n        }\n    }, [competitionDetails]);\n\n    useEffect(() => {\n        (loggedInUser.email && loggedInUser.phone && ActiveStep === 3 && userUploadedVdos.length == 0) && getUploadedVideosByUserId(loggedInUser.key).subscribe((vdoList) => {\n            if (vdoList && vdoList.length) {\n                vdoList.map((uploadedVdo) => {\n                    if (competitionDetails.isUserEnrolled) {\n                        if (uploadedVdo.key == competitionDetails.userSubmitedDetails.vdo.key) {\n                            uploadedVdo.isSelected = true;\n                            let updatedCompetition = competitionDetails;\n                            updatedCompetition.selectedVideo = uploadedVdo;\n                            dispatch(setActiveCompetition(updatedCompetition));\n                            setDisableSubmitVdoButton(true);\n                        }\n                    }\n                })\n                setUserUploadedVideoList(vdoList)\n            } else {\n                // if user not uploaded any video then set upload new tab active\n                setActiveTabInVdoSelection(2);\n            }\n        });\n    }, [ActiveStep]);\n\n    const setActiveTabInVdoSelection = (tab) => {\n        const getCurrentData = 'tab-2';\n        const tabsLinks = Array.from(document.querySelectorAll('.tab-links'));\n        const tabsBoxes = Array.from(document.querySelectorAll('.js-inner-tab-box'));\n        let currentTab = tab == 1 ? 'tab-1' : 'tab-2'\n        tabsBoxes.forEach(item => {\n            if (item.getAttribute('id') === currentTab) {\n                item.classList.add('active');\n            } else {\n                item.classList.remove('active');\n            }\n        });\n        tabsLinks.forEach(item => {\n            if (item?.dataset?.id === currentTab) {\n                item.classList.add('active');\n            } else {\n                item.classList.remove('active');\n            }\n        });\n    }\n\n    function handleClickOutside(event) {\n        if (tncRef && tncRef.current && !tncRef.current.contains(event.target)) {\n            setTnC(false);\n        }\n    }\n\n    const selectVdo = (e, vdo) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (competitionDetails.isUserEnrolled && competitionDetails.userSubmitedDetails.vdo.key == vdo.key) {\n            setDisableSubmitVdoButton(true);\n            let updatedCompetition = competitionDetails;\n            delete updatedCompetition.selectedVideo;\n            dispatch(setActiveCompetition(updatedCompetition));\n        }\n        else setDisableSubmitVdoButton(false);\n        let updatedVdos = userUploadedVdos;\n        updatedVdos.map((item) => {\n            if (item.key == vdo.key) {\n                item.isSelected = true;\n                let updatedCompetition = competitionDetails;\n                updatedCompetition.selectedVideo = item;\n                dispatch(setActiveCompetition(updatedCompetition));\n            }\n            else item.isSelected = false;\n        })\n        setUserUploadedVideoList([...updatedVdos]);\n    }\n\n    function toggleTabination(event) {\n        event.stopPropagation();\n\n        const getCurrentData = event.target.getAttribute('data-id');\n\n        const tabsLinks = Array.from(document.querySelectorAll('.tab-links'));\n        const tabsBoxes = Array.from(document.querySelectorAll('.js-inner-tab-box'));\n\n        tabsLinks.forEach(item => {\n            item.classList.remove('active');\n        });\n        event.target.classList.add('active');\n        tabsBoxes.forEach(item => {\n            if (item.getAttribute('id') === getCurrentData) {\n                item.classList.add('active');\n            } else {\n                item.classList.remove('active');\n            }\n        });\n    }\n\n    const proceedForLogin = () => {\n        handleClose();\n        dispatch(enableLoginFlow('competition'));\n        history.push({\n            pathname: '/login',\n            state: null\n        })\n    }\n\n    async function onChangeFile(event) {\n        event.preventDefault();\n        var file = event.target.files[0];\n        console.log(file);\n        if (file) {\n            if (file.size > 52428800) {\n                alert(\"File is too big!\");\n                dispatch(displayNotification({\n                    msg: \"File is too big!\",\n                    type: NOTIFICATION_ERROR,\n                    time: 3000\n                }))\n                setSelectedVideo({ ...SelectedVideo, file: null });\n                uploaderRef.current.click();\n            } else {\n                setSelectedVideo({ ...SelectedVideo, file: null });\n                const reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = () => {\n                    setSelectedVideo({ ...SelectedVideo, file: reader.result });\n                    dispatch(enableLoginFlow('competition-uploadvdo'));\n                    // handleClose();\n                    // open = false;\n                }\n                reader.onerror = error => console.error(error);\n            }\n        }\n    }\n\n    const handleVdoUploadResponse = (value) => {\n        if (value) {\n            dispatch(enableLoading());\n            getUploadedVideosByUserId(loggedInUser.key).subscribe((vdoList) => {\n                if (vdoList) {\n                    setActiveTabInVdoSelection(1);\n                    vdoList.map((uploadedVdo) => {\n                        if (competitionDetails.isUserEnrolled) {\n                            if (uploadedVdo.key == competitionDetails.userSubmitedDetails.vdo.key) {\n                                uploadedVdo.isSelected = true;\n                                let updatedCompetition = competitionDetails;\n                                updatedCompetition.selectedVideo = uploadedVdo;\n                                dispatch(setActiveCompetition(updatedCompetition));\n                                setDisableSubmitVdoButton(true);\n                            }\n                        }\n                    })\n                    dispatch(disableLoading());\n                    setUserUploadedVideoList(vdoList)\n                }\n            });\n        }\n    }\n\n    return (\n        <div>\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className='competition-modal-box'\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <div className=\"outer-modal-wrap\">\n                        {<div className=\"inner-modal-wrap\">\n                            {(ActiveStep == 1 || ActiveStep === 2) && <IconButton className=\"close-modal-btn\" onClick={() => { handleClose(); (state.activeCompetition && !state.currentLoginFlow) && dispatch(setActiveCompetition(null)) }}>\n                                <CloseIcon />\n                            </IconButton>}\n                            {(ActiveStep == 3 || ActiveStep == 4) && <IconButton className=\"close-modal-btn back-step-btn\" onClick={() => setActiveStep(ActiveStep - 1)}>\n                                <ArrowBackIcon />\n                            </IconButton>}\n                            <h2 id=\"title\">{competitionDetails.name}</h2>\n                            {(ActiveStep == 1 || ActiveStep == 2) && <div>\n                                <div className=\"image-contentWrap\">\n                                    <div className=\"image-wrap\">\n                                        <img src={competitionDetails.img} alt={competitionDetails.name} />\n                                    </div>\n                                    <div className=\"about-competition-wrap\">\n                                        <div className=\"sub-titles\">About Competition</div>\n                                        <p id=\"description\">{competitionDetails.desc}</p>\n\n                                        <div className=\"sub-titles\">Age Category</div>\n                                        <ul>\n                                            <li>Age 4 to 13 years</li>\n                                            <li>Age 14 to 17 years</li>\n                                            <li>Age 18 and above</li>\n                                        </ul>\n\n                                        <div className=\"sub-titles\" id=\"fees\">\n                                            Fees: <span>{competitionDetails.fee}</span>\n                                        </div>\n\n                                        <div className=\"start-at sub-titles\">\n                                            Start At: <span>{competitionDetails.startingDate}</span>\n                                        </div>\n                                        <div className=\"end-at sub-titles\">\n                                            End At: <span>{competitionDetails.endingDate}</span>\n                                        </div>\n\n                                        {competitionDetails && competitionDetails.isUserEnrolled ?\n                                            <div className=\"sub-titles\">\n                                                You can change/modify video till\n                                            <span>{VdoUploadDateLimit}</span></div> :\n                                            <div className=\"sub-titles\">\n                                                Upload video till <span>{VdoUploadDateLimit}</span></div>}\n\n                                        <div className=\"sub-titles\">Winners and Prizes Rule</div>\n                                        <ul>\n                                            <li>Top 3 Winner From Each Category Get Award.</li>\n                                            <li>There will be a three category as mention above.</li>\n                                            <li>Winner will be based on best performance.</li>\n                                        </ul>\n\n                                        <ul className=\"prices\">\n                                            <li className=\"sub-titles price-details\">\n                                                First Price : <span>{competitionDetails.prices[0]}</span>\n                                            </li>\n                                            <li className=\"sub-titles price-details\">\n                                                Second Price : <span>{competitionDetails.prices[1]}</span>\n                                            </li>\n                                            <li className=\"sub-titles price-details\">\n                                                Third Price : <span>{competitionDetails.prices[2]}</span>\n                                            </li>\n                                        </ul>\n\n                                        <div className=\"sub-titles\">Submission And Result</div>\n                                        <ul>\n                                            <li>You Have to submit Your video till 15th June</li>\n                                            <li>Result will be declared on 16th June At 4 Pm On</li>\n                                            <li>Winner will be based on best performance.</li>\n                                        </ul>\n                                        <h4 className=\"before-submit-message\">Time To Express Your Talent on Our Platform during this Lockdown</h4>\n                                    </div>\n                                </div>\n\n                                <div className=\"action-wrap\">\n                                    <div className=\"terms-button\" ref={tncRef} onClick={() => setTnC((TnC ? false : true))}>\n                                        Terms &amp; Conditions\n                                    {TnC && <div className=\"tool-tip-wrap\">\n                                            <div>You may not be able to attend the live session if you are late.</div>\n                                            <div>You may face interruptions during the course of the live stream due to internet connectivity issues.</div>\n                                            <div>Show details and the artist lineup are subject to change as per the artist’s discretion.</div>\n                                            <div> No refunds on purchased tickets are possible, even in case of any rescheduling.</div>\n                                        </div>}\n                                    </div>\n                                    {/* check for user logged in or not */}\n                                    {loggedInUser.email && loggedInUser.username ?\n                                        <div>\n                                            {!competitionDetails?.isUserEnrolled && <Button variant=\"contained\" color=\"primary\" onClick={() => setActiveStep(3)}>Submit Video</Button>}\n                                        </div> :\n                                        <div>\n                                            {/* <div>To upload video you need to login first</div> */}\n                                            <Button variant=\"contained\" color=\"primary\" onClick={() => proceedForLogin()}>Login</Button>\n                                        </div>\n                                    }\n                                    {loggedInUser && true && competitionDetails?.isUserEnrolled && <div className=\"change-video-wrap\">\n                                        <div >\n                                            Submitted details:\n                                        {/* <video width=\"400\" controls>\n                                            <source src={competitionDetails.userSubmitedDetails.vdo.url} />\n                                        </video> */}\n                                            <Button variant=\"contained\" color=\"primary\" onClick={() => setActiveStep(3)}>Change Video</Button>\n                                        </div>\n                                    </div>}\n                                </div>\n                            </div>}\n                            {ActiveStep === 3 && <div className=\"video-submit-section\">\n                                <div className=\"lessons-vdo-wrap\">\n                                    <div className=\"tabination-wrap\">\n                                        <div className=\"tab-btn-section\">\n                                            <button className=\"tab-links active\" data-id=\"tab-1\" onClick={e => toggleTabination(e)}>My video list</button>\n                                            <button className=\"tab-links\" data-id=\"tab-2\" onClick={e => toggleTabination(e)}>Upload new</button>\n                                        </div>\n                                        <div className=\"tab-content-wrap\">\n                                            <div id=\"tab-1\" className=\"inner-box js-inner-tab-box list-box active\">\n                                                {userUploadedVdos.length != 0 && userUploadedVdos.map((item, index) => {\n                                                    return <div className={item.isSelected ? 'vdo-outer selected-vdo' : 'vdo-outer'} key={index} onClick={(e) => selectVdo(e, item)}>\n                                                        <div className=\"vdo-wrap\" >\n                                                            <img src={item.thumbnail ? item.thumbnail : THUMBNAIL_URL} alt=\"video-url\" />\n                                                        </div>\n                                                        <div className=\"video-title\">{item.title}</div>\n                                                    </div>\n                                                })}\n                                            </div>\n                                            <div id=\"tab-2\" className=\"inner-box js-inner-tab-box new-upload-box\">\n                                                <div className=\"input-upload-wrap\">\n                                                    <input\n                                                        accept=\"video/mp4,video/x-m4v,video/*\"\n                                                        ref={uploaderRef}\n                                                        onChange={(e) => onChangeFile(e)}\n                                                        type=\"file\" id=\"video-upload\" title=\"upload video for competition\" />\n                                                    <i className=\"upload-icon\"><FaCloudUploadAlt /></i>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                {!disableSubmitVdoButton && <Button variant=\"contained\" color=\"primary\" onClick={() => setActiveStep(4)}>Upload</Button>}\n                            </div>}\n\n                            {ActiveStep === 4 && <div>\n                                <EnrollCompetition handleClose={(e) => handleClose(e)} changeSelectedVdo={() => setActiveStep(3)} />\n                            </div>}\n                            {SelectedVideo?.file && <VideoUploader selectedVdo={SelectedVideo} handleVdoUploadResponse={(e) => handleVdoUploadResponse(e)} />}\n                        </div>}\n                    </div>\n                </Fade>\n            </Modal>\n        </div>\n    )\n}","/Users/danny/Documents/Projects/boogalu/src/Actions/Notification/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Actions/Loader/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Actions/Competition/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Actions/Utility/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Services/firebase.js",[],"/Users/danny/Documents/Projects/boogalu/src/Actions/LoginFlow/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Data/LessonsCategory.js",[],"/Users/danny/Documents/Projects/boogalu/src/Data/RegistrationStepData.js",[],"/Users/danny/Documents/Projects/boogalu/src/Database/index.js",["396"],"import { data } from 'jquery';\nimport firebase from '../Services/firebase';\nconst database = firebase.firestore();\nexport default database;","/Users/danny/Documents/Projects/boogalu/src/Components/BuySubscription/index.js",["397","398","399","400","401","402"],"/Users/danny/Documents/Projects/boogalu/src/Actions/Subscription/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/EnrollCompetition/index.js",["403","404"],"/Users/danny/Documents/Projects/boogalu/src/Components/VideoDetails/index.js",["405","406","407","408"],"import React, { useState, useEffect } from 'react'\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport SendOutlined from '@material-ui/icons/SendOutlined';\nimport Favorite from '@material-ui/icons/Favorite';\nimport TextField from '@material-ui/core/TextField';\nimport Vedio from \"../Vedio/Video\";\nimport ProfileImage from \"../ProfileImage\";\nimport * as $ from 'jquery';\n\n\nfunction Comments({ handleClose, videoObj, handleLikes, handleComments }) {\n\n    const [openDetailsModal, setOpenDetailsModal] = useState(true);\n    const [commentText, setCommentText] = useState('');\n\n\n    const handleCommentClick = () => {\n        if (commentText != '') {\n            handleComments(commentText)\n            setCommentText('')\n        }\n    }\n\n    return (\n        <div className=\"subscription-modal-wrap\">\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className='subscription-modal-box feeds-comment-modal'\n                open={openDetailsModal}\n                onClose={() => handleClose(false)}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={openDetailsModal}>\n                    <div className=\"subscription-inner-modal comment-modal\">\n                        <IconButton className=\"close-modal-btn\" onClick={() => handleClose(false)}>\n                            <CloseIcon />\n                        </IconButton>\n\n                        <div key={videoObj.key} className=\"feed-card\">\n                            <div className=\"username\">\n                                <ProfileImage src={videoObj.profileImage} />\n                                <span>{videoObj.username}</span>\n                            </div>\n                            <div>\n                                <Vedio vdoObj={videoObj} />\n                            </div>\n                            <div className=\"video-title-like-wrap\">\n                                <div className=\"title\">{videoObj.title}</div>\n                                <div className=\"like-comment\">\n                                    {videoObj.likes && videoObj.likes.length > 0 && <div className=\"likes-count\">{videoObj.likes.length} Likes</div>}\n                                    {!videoObj.isLiked && <FavoriteBorder onClick={() => handleLikes(videoObj, 'liked')} />}\n                                    {videoObj.isLiked && <Favorite onClick={() => handleLikes(videoObj, 'unliked')} />}\n                                </div>\n\n                            </div>\n                        </div>\n\n                        {videoObj.comments && videoObj.comments.length > 0 && <div className=\"comments-count\">{videoObj.comments.length} Comments</div>}\n\n                        <div className=\"comment-outer-wrap\">\n                            {videoObj.comments && videoObj.comments.map((comment, index) => {\n                                return <div className=\"comment-wrap\" key={index}>\n                                    <ProfileImage src={comment.profileImage} />\n                                    <span className=\"username\">{comment.username}</span>\n                                    <span>{comment.value}</span>\n                                </div>\n                            })}\n                        </div>\n\n                        <div className=\"commnet-input-wrap\">\n                            <TextField id=\"standard-basic\" label=\"Add Comments\" value={commentText} onChange={(e) => setCommentText(e.target.value)} />\n                            <SendOutlined onClick={() => handleCommentClick(videoObj, 'liked')} />\n                        </div>\n                    </div>\n                </Fade>\n            </Modal>\n        </div>\n    )\n}\n\nexport default Comments\n","/Users/danny/Documents/Projects/boogalu/src/Components/ProfileImage/index.js",["409"],"import React from 'react'\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\n\nexport default function ProfileImage({ src, type }) {\n    return (\n        <div className={type == 'large' ? 'profile-image-wrap large-image' : 'profile-image-wrap small-image'}>\n            {src ? <img src={src} alt=\"user profile\" /> : <AccountCircleOutlinedIcon />}\n        </div>\n    )\n}","/Users/danny/Documents/Projects/boogalu/src/Services/Email.service.js",[],{"ruleId":"410","replacedBy":"411"},{"ruleId":"412","replacedBy":"413"},{"ruleId":"414","severity":1,"message":"415","line":2,"column":50,"nodeType":"416","messageId":"417","endLine":2,"endColumn":54},{"ruleId":"414","severity":1,"message":"418","line":5,"column":7,"nodeType":"416","messageId":"417","endLine":5,"endColumn":24},{"ruleId":"414","severity":1,"message":"419","line":1,"column":17,"nodeType":"416","messageId":"417","endLine":1,"endColumn":25},{"ruleId":"420","severity":1,"message":"421","line":26,"column":8,"nodeType":"422","endLine":26,"endColumn":10,"suggestions":"423"},{"ruleId":"424","severity":1,"message":"425","line":61,"column":66,"nodeType":"426","endLine":61,"endColumn":81},{"ruleId":"427","severity":1,"message":"428","line":78,"column":29,"nodeType":"429","endLine":78,"endColumn":83},{"ruleId":"424","severity":1,"message":"425","line":84,"column":114,"nodeType":"426","endLine":84,"endColumn":129},{"ruleId":"424","severity":1,"message":"425","line":90,"column":110,"nodeType":"426","endLine":90,"endColumn":125},{"ruleId":"424","severity":1,"message":"425","line":96,"column":109,"nodeType":"426","endLine":96,"endColumn":124},{"ruleId":"414","severity":1,"message":"430","line":18,"column":21,"nodeType":"416","messageId":"417","endLine":18,"endColumn":31},{"ruleId":"414","severity":1,"message":"431","line":23,"column":33,"nodeType":"416","messageId":"417","endLine":23,"endColumn":51},{"ruleId":"420","severity":1,"message":"432","line":37,"column":8,"nodeType":"422","endLine":37,"endColumn":28,"suggestions":"433"},{"ruleId":"434","severity":1,"message":"435","line":65,"column":28,"nodeType":"436","messageId":"437","endLine":65,"endColumn":30},{"ruleId":"438","severity":1,"message":"439","line":159,"column":9,"nodeType":"440","messageId":"441","endLine":232,"endColumn":10},{"ruleId":"434","severity":1,"message":"442","line":182,"column":52,"nodeType":"436","messageId":"437","endLine":182,"endColumn":54},{"ruleId":"434","severity":1,"message":"442","line":183,"column":57,"nodeType":"436","messageId":"437","endLine":183,"endColumn":59},{"ruleId":"434","severity":1,"message":"442","line":184,"column":57,"nodeType":"436","messageId":"437","endLine":184,"endColumn":59},{"ruleId":"434","severity":1,"message":"442","line":215,"column":52,"nodeType":"436","messageId":"437","endLine":215,"endColumn":54},{"ruleId":"434","severity":1,"message":"442","line":216,"column":57,"nodeType":"436","messageId":"437","endLine":216,"endColumn":59},{"ruleId":"434","severity":1,"message":"442","line":217,"column":57,"nodeType":"436","messageId":"437","endLine":217,"endColumn":59},{"ruleId":"443","severity":1,"message":"444","line":328,"column":17,"nodeType":"429","endLine":328,"endColumn":36},{"ruleId":"434","severity":1,"message":"442","line":93,"column":36,"nodeType":"436","messageId":"437","endLine":93,"endColumn":38},{"ruleId":"420","severity":1,"message":"445","line":102,"column":8,"nodeType":"422","endLine":102,"endColumn":10,"suggestions":"446"},{"ruleId":"434","severity":1,"message":"435","line":122,"column":29,"nodeType":"436","messageId":"437","endLine":122,"endColumn":31},{"ruleId":"447","severity":1,"message":"448","line":127,"column":46,"nodeType":"449","messageId":"450","endLine":127,"endColumn":48},{"ruleId":"447","severity":1,"message":"448","line":129,"column":56,"nodeType":"449","messageId":"450","endLine":129,"endColumn":58},{"ruleId":"434","severity":1,"message":"442","line":130,"column":87,"nodeType":"436","messageId":"437","endLine":130,"endColumn":89},{"ruleId":"434","severity":1,"message":"435","line":131,"column":53,"nodeType":"436","messageId":"437","endLine":131,"endColumn":55},{"ruleId":"447","severity":1,"message":"448","line":138,"column":62,"nodeType":"449","messageId":"450","endLine":138,"endColumn":64},{"ruleId":"434","severity":1,"message":"442","line":139,"column":87,"nodeType":"436","messageId":"437","endLine":139,"endColumn":89},{"ruleId":"434","severity":1,"message":"435","line":140,"column":53,"nodeType":"436","messageId":"437","endLine":140,"endColumn":55},{"ruleId":"420","severity":1,"message":"451","line":153,"column":8,"nodeType":"422","endLine":153,"endColumn":10,"suggestions":"452"},{"ruleId":"434","severity":1,"message":"442","line":156,"column":37,"nodeType":"436","messageId":"437","endLine":156,"endColumn":39},{"ruleId":"420","severity":1,"message":"451","line":159,"column":8,"nodeType":"422","endLine":159,"endColumn":15,"suggestions":"453"},{"ruleId":"434","severity":1,"message":"442","line":197,"column":22,"nodeType":"436","messageId":"437","endLine":197,"endColumn":24},{"ruleId":"434","severity":1,"message":"442","line":197,"column":56,"nodeType":"436","messageId":"437","endLine":197,"endColumn":58},{"ruleId":"447","severity":1,"message":"448","line":202,"column":38,"nodeType":"449","messageId":"450","endLine":202,"endColumn":40},{"ruleId":"434","severity":1,"message":"442","line":204,"column":81,"nodeType":"436","messageId":"437","endLine":204,"endColumn":83},{"ruleId":"434","severity":1,"message":"435","line":205,"column":48,"nodeType":"436","messageId":"437","endLine":205,"endColumn":50},{"ruleId":"434","severity":1,"message":"442","line":221,"column":72,"nodeType":"436","messageId":"437","endLine":221,"endColumn":74},{"ruleId":"447","severity":1,"message":"448","line":235,"column":38,"nodeType":"449","messageId":"450","endLine":235,"endColumn":40},{"ruleId":"434","severity":1,"message":"442","line":236,"column":70,"nodeType":"436","messageId":"437","endLine":236,"endColumn":72},{"ruleId":"434","severity":1,"message":"435","line":237,"column":37,"nodeType":"436","messageId":"437","endLine":237,"endColumn":39},{"ruleId":"447","severity":1,"message":"448","line":244,"column":44,"nodeType":"449","messageId":"450","endLine":244,"endColumn":46},{"ruleId":"434","severity":1,"message":"442","line":245,"column":70,"nodeType":"436","messageId":"437","endLine":245,"endColumn":72},{"ruleId":"434","severity":1,"message":"435","line":246,"column":37,"nodeType":"436","messageId":"437","endLine":246,"endColumn":39},{"ruleId":"434","severity":1,"message":"442","line":256,"column":20,"nodeType":"436","messageId":"437","endLine":256,"endColumn":22},{"ruleId":"434","severity":1,"message":"435","line":263,"column":67,"nodeType":"436","messageId":"437","endLine":263,"endColumn":69},{"ruleId":"447","severity":1,"message":"448","line":266,"column":38,"nodeType":"449","messageId":"450","endLine":266,"endColumn":40},{"ruleId":"447","severity":1,"message":"448","line":269,"column":37,"nodeType":"449","messageId":"450","endLine":269,"endColumn":39},{"ruleId":"434","severity":1,"message":"442","line":270,"column":30,"nodeType":"436","messageId":"437","endLine":270,"endColumn":32},{"ruleId":"434","severity":1,"message":"442","line":275,"column":73,"nodeType":"436","messageId":"437","endLine":275,"endColumn":75},{"ruleId":"447","severity":1,"message":"448","line":294,"column":44,"nodeType":"449","messageId":"450","endLine":294,"endColumn":46},{"ruleId":"447","severity":1,"message":"448","line":297,"column":37,"nodeType":"449","messageId":"450","endLine":297,"endColumn":39},{"ruleId":"434","severity":1,"message":"442","line":298,"column":30,"nodeType":"436","messageId":"437","endLine":298,"endColumn":32},{"ruleId":"443","severity":1,"message":"444","line":347,"column":29,"nodeType":"429","endLine":347,"endColumn":68},{"ruleId":"434","severity":1,"message":"442","line":413,"column":91,"nodeType":"436","messageId":"437","endLine":413,"endColumn":93},{"ruleId":"443","severity":1,"message":"444","line":461,"column":41,"nodeType":"429","endLine":461,"endColumn":74},{"ruleId":"414","severity":1,"message":"454","line":9,"column":8,"nodeType":"416","messageId":"417","endLine":9,"endColumn":21},{"ruleId":"414","severity":1,"message":"455","line":59,"column":11,"nodeType":"416","messageId":"417","endLine":59,"endColumn":24},{"ruleId":"414","severity":1,"message":"456","line":13,"column":10,"nodeType":"416","messageId":"417","endLine":13,"endColumn":18},{"ruleId":"414","severity":1,"message":"457","line":22,"column":10,"nodeType":"416","messageId":"417","endLine":22,"endColumn":31},{"ruleId":"414","severity":1,"message":"431","line":22,"column":33,"nodeType":"416","messageId":"417","endLine":22,"endColumn":51},{"ruleId":"414","severity":1,"message":"458","line":22,"column":81,"nodeType":"416","messageId":"417","endLine":22,"endColumn":109},{"ruleId":"434","severity":1,"message":"442","line":31,"column":66,"nodeType":"436","messageId":"437","endLine":31,"endColumn":68},{"ruleId":"434","severity":1,"message":"442","line":31,"column":113,"nodeType":"436","messageId":"437","endLine":31,"endColumn":115},{"ruleId":"420","severity":1,"message":"459","line":62,"column":8,"nodeType":"422","endLine":62,"endColumn":10,"suggestions":"460"},{"ruleId":"434","severity":1,"message":"435","line":65,"column":34,"nodeType":"436","messageId":"437","endLine":65,"endColumn":36},{"ruleId":"443","severity":1,"message":"444","line":121,"column":25,"nodeType":"429","endLine":121,"endColumn":111},{"ruleId":"414","severity":1,"message":"461","line":2,"column":60,"nodeType":"416","messageId":"417","endLine":2,"endColumn":72},{"ruleId":"414","severity":1,"message":"431","line":11,"column":33,"nodeType":"416","messageId":"417","endLine":11,"endColumn":51},{"ruleId":"420","severity":1,"message":"421","line":83,"column":8,"nodeType":"422","endLine":83,"endColumn":18,"suggestions":"462"},{"ruleId":"414","severity":1,"message":"463","line":86,"column":15,"nodeType":"416","messageId":"417","endLine":86,"endColumn":32},{"ruleId":"443","severity":1,"message":"444","line":222,"column":33,"nodeType":"429","endLine":222,"endColumn":141},{"ruleId":"427","severity":1,"message":"464","line":235,"column":25,"nodeType":"429","endLine":235,"endColumn":89},{"ruleId":"414","severity":1,"message":"431","line":24,"column":33,"nodeType":"416","messageId":"417","endLine":24,"endColumn":51},{"ruleId":"414","severity":1,"message":"458","line":24,"column":81,"nodeType":"416","messageId":"417","endLine":24,"endColumn":109},{"ruleId":"414","severity":1,"message":"465","line":48,"column":12,"nodeType":"416","messageId":"417","endLine":48,"endColumn":26},{"ruleId":"420","severity":1,"message":"459","line":73,"column":8,"nodeType":"422","endLine":73,"endColumn":10,"suggestions":"466"},{"ruleId":"434","severity":1,"message":"435","line":78,"column":38,"nodeType":"436","messageId":"437","endLine":78,"endColumn":40},{"ruleId":"447","severity":1,"message":"448","line":82,"column":69,"nodeType":"449","messageId":"450","endLine":82,"endColumn":71},{"ruleId":"447","severity":1,"message":"448","line":83,"column":51,"nodeType":"449","messageId":"450","endLine":83,"endColumn":53},{"ruleId":"434","severity":1,"message":"435","line":86,"column":52,"nodeType":"436","messageId":"437","endLine":86,"endColumn":54},{"ruleId":"434","severity":1,"message":"435","line":88,"column":46,"nodeType":"436","messageId":"437","endLine":88,"endColumn":48},{"ruleId":"447","severity":1,"message":"448","line":89,"column":60,"nodeType":"449","messageId":"450","endLine":89,"endColumn":62},{"ruleId":"420","severity":1,"message":"467","line":99,"column":8,"nodeType":"422","endLine":99,"endColumn":20,"suggestions":"468"},{"ruleId":"434","severity":1,"message":"435","line":104,"column":42,"nodeType":"436","messageId":"437","endLine":104,"endColumn":44},{"ruleId":"434","severity":1,"message":"442","line":156,"column":36,"nodeType":"436","messageId":"437","endLine":156,"endColumn":38},{"ruleId":"434","severity":1,"message":"442","line":157,"column":41,"nodeType":"436","messageId":"437","endLine":157,"endColumn":43},{"ruleId":"434","severity":1,"message":"442","line":158,"column":36,"nodeType":"436","messageId":"437","endLine":158,"endColumn":38},{"ruleId":"434","severity":1,"message":"435","line":167,"column":34,"nodeType":"436","messageId":"437","endLine":167,"endColumn":36},{"ruleId":"438","severity":1,"message":"439","line":198,"column":9,"nodeType":"440","messageId":"441","endLine":204,"endColumn":10},{"ruleId":"438","severity":1,"message":"439","line":208,"column":9,"nodeType":"440","messageId":"441","endLine":214,"endColumn":10},{"ruleId":"447","severity":1,"message":"448","line":221,"column":45,"nodeType":"449","messageId":"450","endLine":221,"endColumn":47},{"ruleId":"434","severity":1,"message":"435","line":225,"column":28,"nodeType":"436","messageId":"437","endLine":225,"endColumn":30},{"ruleId":"447","severity":1,"message":"448","line":232,"column":69,"nodeType":"449","messageId":"450","endLine":232,"endColumn":71},{"ruleId":"447","severity":1,"message":"448","line":233,"column":47,"nodeType":"449","messageId":"450","endLine":233,"endColumn":49},{"ruleId":"434","severity":1,"message":"435","line":236,"column":48,"nodeType":"436","messageId":"437","endLine":236,"endColumn":50},{"ruleId":"434","severity":1,"message":"435","line":238,"column":42,"nodeType":"436","messageId":"437","endLine":238,"endColumn":44},{"ruleId":"447","severity":1,"message":"448","line":239,"column":56,"nodeType":"449","messageId":"450","endLine":239,"endColumn":58},{"ruleId":"434","severity":1,"message":"435","line":249,"column":34,"nodeType":"436","messageId":"437","endLine":249,"endColumn":36},{"ruleId":"434","severity":1,"message":"435","line":273,"column":25,"nodeType":"436","messageId":"437","endLine":273,"endColumn":27},{"ruleId":"434","severity":1,"message":"435","line":395,"column":64,"nodeType":"436","messageId":"437","endLine":395,"endColumn":66},{"ruleId":"434","severity":1,"message":"435","line":416,"column":29,"nodeType":"436","messageId":"437","endLine":416,"endColumn":31},{"ruleId":"434","severity":1,"message":"435","line":429,"column":69,"nodeType":"436","messageId":"437","endLine":429,"endColumn":71},{"ruleId":"434","severity":1,"message":"435","line":430,"column":37,"nodeType":"436","messageId":"437","endLine":430,"endColumn":39},{"ruleId":"434","severity":1,"message":"435","line":433,"column":37,"nodeType":"436","messageId":"437","endLine":433,"endColumn":39},{"ruleId":"434","severity":1,"message":"442","line":437,"column":25,"nodeType":"436","messageId":"437","endLine":437,"endColumn":27},{"ruleId":"443","severity":1,"message":"444","line":447,"column":25,"nodeType":"429","endLine":447,"endColumn":111},{"ruleId":"414","severity":1,"message":"469","line":1,"column":27,"nodeType":"416","messageId":"417","endLine":1,"endColumn":33},{"ruleId":"414","severity":1,"message":"470","line":1,"column":35,"nodeType":"416","messageId":"417","endLine":1,"endColumn":44},{"ruleId":"414","severity":1,"message":"471","line":6,"column":28,"nodeType":"416","messageId":"417","endLine":6,"endColumn":45},{"ruleId":"434","severity":1,"message":"442","line":69,"column":31,"nodeType":"436","messageId":"437","endLine":69,"endColumn":33},{"ruleId":"434","severity":1,"message":"442","line":101,"column":44,"nodeType":"436","messageId":"437","endLine":101,"endColumn":46},{"ruleId":"434","severity":1,"message":"442","line":109,"column":40,"nodeType":"436","messageId":"437","endLine":109,"endColumn":42},{"ruleId":"420","severity":1,"message":"472","line":114,"column":8,"nodeType":"422","endLine":114,"endColumn":10,"suggestions":"473"},{"ruleId":"420","severity":1,"message":"474","line":119,"column":8,"nodeType":"422","endLine":119,"endColumn":28,"suggestions":"475"},{"ruleId":"434","severity":1,"message":"442","line":42,"column":20,"nodeType":"436","messageId":"437","endLine":42,"endColumn":22},{"ruleId":"434","severity":1,"message":"435","line":49,"column":67,"nodeType":"436","messageId":"437","endLine":49,"endColumn":69},{"ruleId":"447","severity":1,"message":"448","line":52,"column":38,"nodeType":"449","messageId":"450","endLine":52,"endColumn":40},{"ruleId":"447","severity":1,"message":"448","line":55,"column":37,"nodeType":"449","messageId":"450","endLine":55,"endColumn":39},{"ruleId":"434","severity":1,"message":"442","line":56,"column":30,"nodeType":"436","messageId":"437","endLine":56,"endColumn":32},{"ruleId":"434","severity":1,"message":"442","line":61,"column":73,"nodeType":"436","messageId":"437","endLine":61,"endColumn":75},{"ruleId":"447","severity":1,"message":"448","line":80,"column":44,"nodeType":"449","messageId":"450","endLine":80,"endColumn":46},{"ruleId":"447","severity":1,"message":"448","line":83,"column":37,"nodeType":"449","messageId":"450","endLine":83,"endColumn":39},{"ruleId":"434","severity":1,"message":"442","line":84,"column":30,"nodeType":"436","messageId":"437","endLine":84,"endColumn":32},{"ruleId":"447","severity":1,"message":"448","line":100,"column":38,"nodeType":"449","messageId":"450","endLine":100,"endColumn":40},{"ruleId":"434","severity":1,"message":"442","line":101,"column":70,"nodeType":"436","messageId":"437","endLine":101,"endColumn":72},{"ruleId":"434","severity":1,"message":"435","line":102,"column":37,"nodeType":"436","messageId":"437","endLine":102,"endColumn":39},{"ruleId":"447","severity":1,"message":"448","line":109,"column":44,"nodeType":"449","messageId":"450","endLine":109,"endColumn":46},{"ruleId":"434","severity":1,"message":"442","line":110,"column":70,"nodeType":"436","messageId":"437","endLine":110,"endColumn":72},{"ruleId":"434","severity":1,"message":"435","line":111,"column":37,"nodeType":"436","messageId":"437","endLine":111,"endColumn":39},{"ruleId":"447","severity":1,"message":"448","line":126,"column":37,"nodeType":"449","messageId":"450","endLine":126,"endColumn":39},{"ruleId":"447","severity":1,"message":"448","line":127,"column":41,"nodeType":"449","messageId":"450","endLine":127,"endColumn":43},{"ruleId":"434","severity":1,"message":"442","line":128,"column":34,"nodeType":"436","messageId":"437","endLine":128,"endColumn":36},{"ruleId":"434","severity":1,"message":"442","line":133,"column":77,"nodeType":"436","messageId":"437","endLine":133,"endColumn":79},{"ruleId":"420","severity":1,"message":"451","line":143,"column":8,"nodeType":"422","endLine":143,"endColumn":10,"suggestions":"476"},{"ruleId":"434","severity":1,"message":"442","line":146,"column":59,"nodeType":"436","messageId":"437","endLine":146,"endColumn":61},{"ruleId":"414","severity":1,"message":"477","line":8,"column":13,"nodeType":"416","messageId":"417","endLine":8,"endColumn":14},{"ruleId":"414","severity":1,"message":"478","line":12,"column":20,"nodeType":"416","messageId":"417","endLine":12,"endColumn":28},{"ruleId":"479","severity":1,"message":"480","line":38,"column":25,"nodeType":"429","endLine":38,"endColumn":223},{"ruleId":"479","severity":1,"message":"480","line":41,"column":25,"nodeType":"429","endLine":41,"endColumn":223},{"ruleId":"479","severity":1,"message":"480","line":44,"column":25,"nodeType":"429","endLine":44,"endColumn":223},{"ruleId":"420","severity":1,"message":"481","line":52,"column":8,"nodeType":"422","endLine":52,"endColumn":10,"suggestions":"482"},{"ruleId":"414","severity":1,"message":"483","line":67,"column":11,"nodeType":"416","messageId":"417","endLine":67,"endColumn":18},{"ruleId":"434","severity":1,"message":"442","line":186,"column":48,"nodeType":"436","messageId":"437","endLine":186,"endColumn":50},{"ruleId":"447","severity":1,"message":"448","line":22,"column":51,"nodeType":"449","messageId":"450","endLine":22,"endColumn":53},{"ruleId":"434","severity":1,"message":"442","line":23,"column":104,"nodeType":"436","messageId":"437","endLine":23,"endColumn":106},{"ruleId":"434","severity":1,"message":"442","line":61,"column":36,"nodeType":"436","messageId":"437","endLine":61,"endColumn":38},{"ruleId":"420","severity":1,"message":"484","line":80,"column":8,"nodeType":"422","endLine":80,"endColumn":10,"suggestions":"485"},{"ruleId":"420","severity":1,"message":"481","line":20,"column":8,"nodeType":"422","endLine":20,"endColumn":15,"suggestions":"486"},{"ruleId":"438","severity":1,"message":"439","line":24,"column":17,"nodeType":"440","messageId":"441","endLine":31,"endColumn":18},{"ruleId":"438","severity":1,"message":"439","line":61,"column":17,"nodeType":"440","messageId":"441","endLine":68,"endColumn":18},{"ruleId":"434","severity":1,"message":"442","line":26,"column":16,"nodeType":"436","messageId":"437","endLine":26,"endColumn":18},{"ruleId":"434","severity":1,"message":"442","line":27,"column":16,"nodeType":"436","messageId":"437","endLine":27,"endColumn":18},{"ruleId":"434","severity":1,"message":"442","line":28,"column":16,"nodeType":"436","messageId":"437","endLine":28,"endColumn":18},{"ruleId":"434","severity":1,"message":"442","line":61,"column":98,"nodeType":"436","messageId":"437","endLine":61,"endColumn":100},{"ruleId":"447","severity":1,"message":"448","line":63,"column":43,"nodeType":"449","messageId":"450","endLine":63,"endColumn":45},{"ruleId":"434","severity":1,"message":"442","line":65,"column":45,"nodeType":"436","messageId":"437","endLine":65,"endColumn":47},{"ruleId":"420","severity":1,"message":"487","line":80,"column":8,"nodeType":"422","endLine":80,"endColumn":20,"suggestions":"488"},{"ruleId":"414","severity":1,"message":"489","line":83,"column":15,"nodeType":"416","messageId":"417","endLine":83,"endColumn":29},{"ruleId":"434","severity":1,"message":"442","line":86,"column":30,"nodeType":"436","messageId":"437","endLine":86,"endColumn":32},{"ruleId":"434","severity":1,"message":"442","line":112,"column":97,"nodeType":"436","messageId":"437","endLine":112,"endColumn":99},{"ruleId":"447","severity":1,"message":"448","line":120,"column":32,"nodeType":"449","messageId":"450","endLine":120,"endColumn":34},{"ruleId":"434","severity":1,"message":"442","line":121,"column":26,"nodeType":"436","messageId":"437","endLine":121,"endColumn":28},{"ruleId":"447","severity":1,"message":"448","line":197,"column":47,"nodeType":"449","messageId":"450","endLine":197,"endColumn":49},{"ruleId":"434","severity":1,"message":"442","line":199,"column":49,"nodeType":"436","messageId":"437","endLine":199,"endColumn":51},{"ruleId":"434","severity":1,"message":"442","line":232,"column":42,"nodeType":"436","messageId":"437","endLine":232,"endColumn":44},{"ruleId":"434","severity":1,"message":"442","line":235,"column":42,"nodeType":"436","messageId":"437","endLine":235,"endColumn":44},{"ruleId":"434","severity":1,"message":"442","line":235,"column":61,"nodeType":"436","messageId":"437","endLine":235,"endColumn":63},{"ruleId":"434","severity":1,"message":"442","line":239,"column":42,"nodeType":"436","messageId":"437","endLine":239,"endColumn":44},{"ruleId":"434","severity":1,"message":"442","line":239,"column":61,"nodeType":"436","messageId":"437","endLine":239,"endColumn":63},{"ruleId":"434","severity":1,"message":"435","line":342,"column":74,"nodeType":"436","messageId":"437","endLine":342,"endColumn":76},{"ruleId":"414","severity":1,"message":"490","line":1,"column":10,"nodeType":"416","messageId":"417","endLine":1,"endColumn":14},{"ruleId":"414","severity":1,"message":"469","line":1,"column":17,"nodeType":"416","messageId":"417","endLine":1,"endColumn":23},{"ruleId":"414","severity":1,"message":"491","line":22,"column":12,"nodeType":"416","messageId":"417","endLine":22,"endColumn":31},{"ruleId":"434","severity":1,"message":"442","line":65,"column":36,"nodeType":"436","messageId":"437","endLine":65,"endColumn":38},{"ruleId":"434","severity":1,"message":"442","line":95,"column":37,"nodeType":"436","messageId":"437","endLine":95,"endColumn":39},{"ruleId":"434","severity":1,"message":"442","line":109,"column":37,"nodeType":"436","messageId":"437","endLine":109,"endColumn":39},{"ruleId":"434","severity":1,"message":"442","line":113,"column":37,"nodeType":"436","messageId":"437","endLine":113,"endColumn":39},{"ruleId":"420","severity":1,"message":"492","line":35,"column":8,"nodeType":"422","endLine":35,"endColumn":10,"suggestions":"493"},{"ruleId":"443","severity":1,"message":"444","line":174,"column":21,"nodeType":"429","endLine":174,"endColumn":121},{"ruleId":"414","severity":1,"message":"470","line":1,"column":27,"nodeType":"416","messageId":"417","endLine":1,"endColumn":36},{"ruleId":"414","severity":1,"message":"477","line":13,"column":13,"nodeType":"416","messageId":"417","endLine":13,"endColumn":14},{"ruleId":"414","severity":1,"message":"494","line":18,"column":30,"nodeType":"416","messageId":"417","endLine":18,"endColumn":49},{"ruleId":"434","severity":1,"message":"435","line":23,"column":25,"nodeType":"436","messageId":"437","endLine":23,"endColumn":27},{"ruleId":"434","severity":1,"message":"442","line":6,"column":30,"nodeType":"436","messageId":"437","endLine":6,"endColumn":32},"no-native-reassign",["495"],"no-negated-in-lhs",["496"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'loggedInUserState' is assigned a value but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history?.location?.pathname'. Either include it or remove the dependency array.","ArrayExpression",["497"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'signupUser' is defined but never used.","'NOTIFICATION_ERROR' is defined but never used.","React Hook useEffect has a missing dependency: 'signinUser'. Either include it or remove the dependency array.",["498"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Expected '===' and instead saw '=='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'dispatch', 'history', 'loggedInUser', 'onWindowScroll', and 'state.currentLoginFlow'. Either include them or remove the dependency array.",["499"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'dispatch' and 'loggedInUser.key'. Either include them or remove the dependency array.",["500"],["501"],"'ImageUploader' is defined but never used.","'onimageUpload' is assigned a value but never used.","'toBase64' is defined but never used.","'NOTIFICATION_SUCCCESS' is defined but never used.","'FEMALE_PROFILE_DEFAULT_IMAGE' is defined but never used.","React Hook useEffect has a missing dependency: 'userDetails'. Either include it or remove the dependency array. You can also do a functional update 'setUserDetails(u => ...)' if you only need 'userDetails' in the 'setUserDetails' call.",["502"],"'FaStaylinked' is defined but never used.",["503"],"'listenRouteChange' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'showNextButton' is assigned a value but never used.",["504"],"React Hook useEffect has a missing dependency: 'stepData'. Either include it or remove the dependency array.",["505"],"'useRef' is defined but never used.","'useEffect' is defined but never used.","'setActiveCategory' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'history', 'loggedInUser', 'sendEmailToAdmin', 'sendEmailToUser', 'state.activeSubscription.key', 'state.activeSubscription.type', and 'state.currentLoginFlow'. Either include them or remove the dependency array.",["506"],"React Hook useEffect has a missing dependency: 'loggedInUser?.subscriptions'. Either include it or remove the dependency array.",["507"],["508"],"'$' is defined but never used.","'dispatch' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["509"],"'classes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'loggedInUser.email', 'loggedInUser.phone', 'loggedInUser.subscriptions', 'prepareUserCompData', and 'state.currentLoginFlow'. Either include them or remove the dependency array.",["510"],["511"],"React Hook useEffect has missing dependencies: 'competitionDetails', 'dispatch', 'loggedInUser.email', 'loggedInUser.key', 'loggedInUser.phone', and 'userUploadedVdos.length'. Either include them or remove the dependency array.",["512"],"'getCurrentData' is assigned a value but never used.","'data' is defined but never used.","'subsciptionValidity' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loggedInUser.subscriptions'. Either include it or remove the dependency array.",["513"],"'setOpenDetailsModal' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"514","fix":"515"},{"desc":"516","fix":"517"},{"desc":"518","fix":"519"},{"desc":"520","fix":"521"},{"desc":"522","fix":"523"},{"desc":"524","fix":"525"},{"desc":"526","fix":"527"},{"desc":"524","fix":"528"},{"desc":"529","fix":"530"},{"desc":"531","fix":"532"},{"desc":"533","fix":"534"},{"desc":"520","fix":"535"},{"desc":"536","fix":"537"},{"desc":"538","fix":"539"},{"desc":"540","fix":"541"},{"desc":"542","fix":"543"},{"desc":"544","fix":"545"},"Update the dependencies array to be: [history?.location?.pathname]",{"range":"546","text":"547"},"Update the dependencies array to be: [signinUser, thirdPartyResponse]",{"range":"548","text":"549"},"Update the dependencies array to be: [dispatch, history, loggedInUser, onWindowScroll, state.currentLoginFlow]",{"range":"550","text":"551"},"Update the dependencies array to be: [dispatch, loggedInUser.key]",{"range":"552","text":"553"},"Update the dependencies array to be: [dispatch, loggedInUser.key, state]",{"range":"554","text":"555"},"Update the dependencies array to be: [userDetails]",{"range":"556","text":"557"},"Update the dependencies array to be: [history?.location?.pathname, isMobile]",{"range":"558","text":"559"},{"range":"560","text":"557"},"Update the dependencies array to be: [activeStep, stepData]",{"range":"561","text":"562"},"Update the dependencies array to be: [dispatch, history, loggedInUser, sendEmailToAdmin, sendEmailToUser, state.activeSubscription.key, state.activeSubscription.type, state.currentLoginFlow]",{"range":"563","text":"564"},"Update the dependencies array to be: [loggedInUser?.subscriptions, state.loggedInUser]",{"range":"565","text":"566"},{"range":"567","text":"553"},"Update the dependencies array to be: [dispatch]",{"range":"568","text":"569"},"Update the dependencies array to be: [dispatch, loggedInUser.email, loggedInUser.phone, loggedInUser.subscriptions, prepareUserCompData, state.currentLoginFlow]",{"range":"570","text":"571"},"Update the dependencies array to be: [dispatch, state]",{"range":"572","text":"573"},"Update the dependencies array to be: [ActiveStep, competitionDetails, dispatch, loggedInUser.email, loggedInUser.key, loggedInUser.phone, userUploadedVdos.length]",{"range":"574","text":"575"},"Update the dependencies array to be: [loggedInUser.subscriptions]",{"range":"576","text":"577"},[925,927],"[history?.location?.pathname]",[2030,2050],"[signinUser, thirdPartyResponse]",[4477,4479],"[dispatch, history, loggedInUser, onWindowScroll, state.currentLoginFlow]",[6669,6671],"[dispatch, loggedInUser.key]",[6931,6938],"[dispatch, loggedInUser.key, state]",[3079,3081],"[userDetails]",[3484,3494],"[history?.location?.pathname, isMobile]",[3591,3593],[4915,4927],"[activeStep, stepData]",[5480,5482],"[dispatch, history, loggedInUser, sendEmailToAdmin, sendEmailToUser, state.activeSubscription.key, state.activeSubscription.type, state.currentLoginFlow]",[5705,5725],"[loggedInUser?.subscriptions, state.loggedInUser]",[5628,5630],[2512,2514],"[dispatch]",[3888,3890],"[dispatch, loggedInUser.email, loggedInUser.phone, loggedInUser.subscriptions, prepareUserCompData, state.currentLoginFlow]",[851,858],"[dispatch, state]",[3930,3942],"[ActiveStep, competitionDetails, dispatch, loggedInUser.email, loggedInUser.key, loggedInUser.phone, userUploadedVdos.length]",[1812,1814],"[loggedInUser.subscriptions]"]