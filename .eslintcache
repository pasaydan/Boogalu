[{"/Users/danny/Documents/Projects/boogalu/src/index.js":"1","/Users/danny/Documents/Projects/boogalu/src/App.js":"2","/Users/danny/Documents/Projects/boogalu/src/reportWebVitals.js":"3","/Users/danny/Documents/Projects/boogalu/src/Providers/StateProvider.js":"4","/Users/danny/Documents/Projects/boogalu/src/Components/Admin/Competition.js":"5","/Users/danny/Documents/Projects/boogalu/src/Components/Footer/index.js":"6","/Users/danny/Documents/Projects/boogalu/src/Components/Navigation/index.js":"7","/Users/danny/Documents/Projects/boogalu/src/Components/Login/Login.js":"8","/Users/danny/Documents/Projects/boogalu/src/Components/Admin/Subscription.js":"9","/Users/danny/Documents/Projects/boogalu/src/Components/Profile/Profile.js":"10","/Users/danny/Documents/Projects/boogalu/src/Services/LocalstorageCache.js":"11","/Users/danny/Documents/Projects/boogalu/src/Components/EditProfile/EditProfile.js":"12","/Users/danny/Documents/Projects/boogalu/src/Components/Homepage/index.js":"13","/Users/danny/Documents/Projects/boogalu/src/Components/Splash/index.js":"14","/Users/danny/Documents/Projects/boogalu/src/Components/Competitions/index.js":"15","/Users/danny/Documents/Projects/boogalu/src/Components/Upcoming/index.js":"16","/Users/danny/Documents/Projects/boogalu/src/Components/Loader/index.js":"17","/Users/danny/Documents/Projects/boogalu/src/Components/Contactus/index.js":"18","/Users/danny/Documents/Projects/boogalu/src/Components/Subscriptions/index.js":"19","/Users/danny/Documents/Projects/boogalu/src/Components/Page404/index.js":"20","/Users/danny/Documents/Projects/boogalu/src/Components/Notification/index.js":"21","/Users/danny/Documents/Projects/boogalu/src/Components/VideoUploader/index.js":"22","/Users/danny/Documents/Projects/boogalu/src/Reducers/index.js":"23","/Users/danny/Documents/Projects/boogalu/src/Services/Upload.service.js":"24","/Users/danny/Documents/Projects/boogalu/src/Services/Competition.service.js":"25","/Users/danny/Documents/Projects/boogalu/src/Services/Utils.js":"26","/Users/danny/Documents/Projects/boogalu/src/Services/User.service.js":"27","/Users/danny/Documents/Projects/boogalu/src/Services/UploadedVideo.service.js":"28","/Users/danny/Documents/Projects/boogalu/src/Services/EnrollCompetition.service.js":"29","/Users/danny/Documents/Projects/boogalu/src/Components/Feeds/index.js":"30","/Users/danny/Documents/Projects/boogalu/src/Components/Signup/index.js":"31","/Users/danny/Documents/Projects/boogalu/src/Components/Vedio/Video.js":"32","/Users/danny/Documents/Projects/boogalu/src/Actions/User/index.js":"33","/Users/danny/Documents/Projects/boogalu/src/Constants/index.js":"34","/Users/danny/Documents/Projects/boogalu/src/Components/CompetitionsDetails/index.js":"35","/Users/danny/Documents/Projects/boogalu/src/Actions/Loader/index.js":"36","/Users/danny/Documents/Projects/boogalu/src/Services/firebase.js":"37","/Users/danny/Documents/Projects/boogalu/src/Actions/Notification/index.js":"38","/Users/danny/Documents/Projects/boogalu/src/Actions/LoginFlow/index.js":"39","/Users/danny/Documents/Projects/boogalu/src/Actions/Utility/index.js":"40","/Users/danny/Documents/Projects/boogalu/src/Actions/Competition/index.js":"41","/Users/danny/Documents/Projects/boogalu/src/Data/RegistrationStepData.js":"42","/Users/danny/Documents/Projects/boogalu/src/Services/Subscription.service.js":"43","/Users/danny/Documents/Projects/boogalu/src/Data/LessonsCategory.js":"44","/Users/danny/Documents/Projects/boogalu/src/Database/index.js":"45","/Users/danny/Documents/Projects/boogalu/src/Actions/Subscription/index.js":"46","/Users/danny/Documents/Projects/boogalu/src/Components/Comments/index.js":"47","/Users/danny/Documents/Projects/boogalu/src/Components/BuySubscription/index.js":"48","/Users/danny/Documents/Projects/boogalu/src/Components/EnrollCompetition/index.js":"49"},{"size":714,"mtime":1607871183480,"results":"50","hashOfConfig":"51"},{"size":3846,"mtime":1612214576085,"results":"52","hashOfConfig":"51"},{"size":362,"mtime":1607448783643,"results":"53","hashOfConfig":"51"},{"size":1062,"mtime":1612119916190,"results":"54","hashOfConfig":"51"},{"size":11016,"mtime":1612121473778,"results":"55","hashOfConfig":"51"},{"size":4454,"mtime":1611990120104,"results":"56","hashOfConfig":"51"},{"size":12152,"mtime":1612283162495,"results":"57","hashOfConfig":"51"},{"size":15026,"mtime":1612121315897,"results":"58","hashOfConfig":"51"},{"size":9655,"mtime":1612121473779,"results":"59","hashOfConfig":"51"},{"size":11156,"mtime":1612283162498,"results":"60","hashOfConfig":"51"},{"size":244,"mtime":1608092665797,"results":"61","hashOfConfig":"51"},{"size":14308,"mtime":1612283162510,"results":"62","hashOfConfig":"51"},{"size":4885,"mtime":1612089803599,"results":"63","hashOfConfig":"51"},{"size":337,"mtime":1610252476571,"results":"64","hashOfConfig":"51"},{"size":4548,"mtime":1612102405077,"results":"65","hashOfConfig":"51"},{"size":1144,"mtime":1611500144741,"results":"66","hashOfConfig":"51"},{"size":358,"mtime":1612213814372,"results":"67","hashOfConfig":"51"},{"size":2054,"mtime":1611682060478,"results":"68","hashOfConfig":"51"},{"size":6051,"mtime":1612281713207,"results":"69","hashOfConfig":"51"},{"size":454,"mtime":1612089803600,"results":"70","hashOfConfig":"51"},{"size":1189,"mtime":1612283162498,"results":"71","hashOfConfig":"51"},{"size":13412,"mtime":1612283124065,"results":"72","hashOfConfig":"51"},{"size":1792,"mtime":1612120553627,"results":"73","hashOfConfig":"51"},{"size":2925,"mtime":1611659867189,"results":"74","hashOfConfig":"51"},{"size":3029,"mtime":1611657725425,"results":"75","hashOfConfig":"51"},{"size":1406,"mtime":1611638880845,"results":"76","hashOfConfig":"51"},{"size":2483,"mtime":1612121473782,"results":"77","hashOfConfig":"51"},{"size":1796,"mtime":1612208859195,"results":"78","hashOfConfig":"51"},{"size":3292,"mtime":1611776438217,"results":"79","hashOfConfig":"51"},{"size":6667,"mtime":1612283162494,"results":"80","hashOfConfig":"51"},{"size":32423,"mtime":1612283162500,"results":"81","hashOfConfig":"51"},{"size":616,"mtime":1611500501935,"results":"82","hashOfConfig":"51"},{"size":382,"mtime":1607543824191,"results":"83","hashOfConfig":"51"},{"size":1913,"mtime":1612283162501,"results":"84","hashOfConfig":"51"},{"size":20393,"mtime":1612283112961,"results":"85","hashOfConfig":"51"},{"size":285,"mtime":1612213987846,"results":"86","hashOfConfig":"51"},{"size":984,"mtime":1611418181345,"results":"87","hashOfConfig":"51"},{"size":322,"mtime":1612120835900,"results":"88","hashOfConfig":"51"},{"size":306,"mtime":1611686954131,"results":"89","hashOfConfig":"51"},{"size":355,"mtime":1612115913064,"results":"90","hashOfConfig":"51"},{"size":186,"mtime":1611686954131,"results":"91","hashOfConfig":"51"},{"size":7490,"mtime":1608453248853,"results":"92","hashOfConfig":"51"},{"size":2579,"mtime":1611998841256,"results":"93","hashOfConfig":"51"},{"size":11937,"mtime":1610252476574,"results":"94","hashOfConfig":"51"},{"size":139,"mtime":1611420039353,"results":"95","hashOfConfig":"51"},{"size":189,"mtime":1612003974266,"results":"96","hashOfConfig":"51"},{"size":4141,"mtime":1612214789298,"results":"97","hashOfConfig":"51"},{"size":5986,"mtime":1612281784158,"results":"98","hashOfConfig":"51"},{"size":6532,"mtime":1612102693277,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gp1tlp",{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"121"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"121"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"121"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/danny/Documents/Projects/boogalu/src/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/App.js",["204"],"/Users/danny/Documents/Projects/boogalu/src/reportWebVitals.js",[],"/Users/danny/Documents/Projects/boogalu/src/Providers/StateProvider.js",["205"],"/Users/danny/Documents/Projects/boogalu/src/Components/Admin/Competition.js",["206"],"/Users/danny/Documents/Projects/boogalu/src/Components/Footer/index.js",["207","208","209","210","211","212","213"],"/Users/danny/Documents/Projects/boogalu/src/Components/Navigation/index.js",["214","215","216","217","218"],"/Users/danny/Documents/Projects/boogalu/src/Components/Login/Login.js",["219","220","221","222","223","224","225","226","227","228","229","230"],"/Users/danny/Documents/Projects/boogalu/src/Components/Admin/Subscription.js",["231","232"],"/Users/danny/Documents/Projects/boogalu/src/Components/Profile/Profile.js",["233","234","235","236","237","238","239"],"import React, { useState, useEffect, useRef } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport { useStoreConsumer } from '../../Providers/StateProvider';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport LoyaltyOutlinedIcon from '@material-ui/icons/LoyaltyOutlined';\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport CollectionsOutlinedIcon from '@material-ui/icons/CollectionsOutlined';\nimport PropTypes from 'prop-types';\nimport { useTheme } from '@material-ui/core/styles';\nimport SwipeableViews from 'react-swipeable-views';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport * as $ from 'jquery';\nimport { getUploadedVideosByUserId } from \"../../Services/UploadedVideo.service\";\nimport { getCompetitionByUserId } from \"../../Services/EnrollCompetition.service\";\nimport CompetitionsDetails from \"../CompetitionsDetails\";\nimport { getCompetitionsList } from \"../../Services/Competition.service\";\nimport { setActiveCompetition } from \"../../Actions/Competition\";\nimport Vedio from \"../Vedio/Video\";\nimport { enableLoading, disableLoading } from \"../../Actions/Loader\";\nimport { removeDataRefetchModuleName } from \"../../Actions/Utility\";\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\nfunction Profile() {\n    const history = useHistory();\n    const theme = useTheme();\n    const { state, dispatch } = useStoreConsumer();\n    const [value, setValue] = useState(0);\n    const loggedInUser = state.loggedInUser;\n    const [UserUploadedVideoList, setUserUploadedVideoList] = useState([]);\n    const [UserCompetitionsList, setUserCompetitionsList] = useState([]);\n    const [UserLikedVideoList, setUserLikedVideoList] = useState([]);\n    const [openUserEnrolledCompDetailsModal, setOpenUserEnrolledCompDetailsModal] = useState(false);\n    const [initialStep, setInitialStep] = useState(1);\n    const profileOuterRef = useRef();\n    const userTabsRef = useRef();\n\n    useEffect(() => {\n        if (!loggedInUser || !loggedInUser.email) history.push('/login')\n        $('html,body').animate({\n            scrollTop: 0\n        }, 500);\n\n        document.addEventListener('scroll', onWindowScroll);\n        dispatch(enableLoading());\n        getUploadedVideosByUserId(loggedInUser.key).subscribe((list) => { dispatch(disableLoading()); setUserUploadedVideoList(list) });\n        getCompetitionByUserId(loggedInUser.key).subscribe((list) => { dispatch(disableLoading()); setUserCompetitionsList(list) });\n        // getCompetitionByUserId(loggedInUser.key).subscribe((list) => UserLikedVideoList(list));\n    }, []);\n\n    useEffect(() => {\n        if (state.refetchDataModule == 'user-uploaded-video') {\n            getUploadedVideosByUserId(loggedInUser.key).subscribe((list) => { dispatch(removeDataRefetchModuleName()); setUserUploadedVideoList(list) });\n        }\n    }, [state])\n\n    function onWindowScroll(event) {\n        if (window.outerWidth > 1023) {\n            if (window.scrollY >= 302) {\n                toggleStickyHeader('add');\n            } else {\n                toggleStickyHeader('remove');\n            }\n        } else {\n            if (window.scrollY >= 294) {\n                toggleStickyHeader('add');\n            } else {\n                toggleStickyHeader('remove');\n            }\n        }\n    }\n\n    function toggleStickyHeader(toggleValue) {\n        if (toggleValue === 'add') {\n            if (userTabsRef.current) {\n                userTabsRef.current.classList.add('sticky');\n            }\n            if (profileOuterRef.current) {\n                profileOuterRef.current.classList.add('sticky');\n            }\n        } else {\n            if (userTabsRef.current) {\n                userTabsRef.current.classList.remove('sticky');\n            }\n            if (profileOuterRef.current) {\n                profileOuterRef.current.classList.remove('sticky');\n            }\n        }\n    }\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = (index) => {\n        setValue(index);\n    };\n\n    const openCompetitionDetailsModal = (competition) => {\n        getCompetitionsList().subscribe(allCompList => {\n            let isUserEnrolled = allCompList.filter((data) => data.key == competition.compId);\n            if (isUserEnrolled.length) {\n                isUserEnrolled[0].isUserEnrolled = true;\n                isUserEnrolled[0].userSubmitedDetails = competition;\n                setInitialStep(2);\n                dispatch(setActiveCompetition(isUserEnrolled[0]));\n                setOpenUserEnrolledCompDetailsModal(true);\n            }\n        });\n    }\n\n    return (\n        <div className=\"profile-outer\" ref={profileOuterRef}>\n            <div className=\"profile-details-wrap clearfix\">\n                <div className=\"profile-img\">\n                    {\n                        loggedInUser.profileImage ?\n                        <img src={loggedInUser.profileImage}/>\n                        :\n                        <AccountCircleOutlinedIcon />\n                    }\n                </div>\n                <div className=\"profile-details clearfix\">\n                    <div className=\"username-wrap clearfix\">\n                        <div className=\"username\">\n                            {loggedInUser.username}\n                        </div>\n                        <div className=\"edit-profile\" onClick={() => history.push('/profile/edit')}>\n                            Edit Profile\n                        </div>\n                    </div>\n                    <div className=\"followers-wrap clearfix\">\n                        <div className=\"posts\">\n                            <span>999</span> Posts\n                        </div>\n                        <div className=\"followers\">\n                            <span>999</span> Followers\n                        </div>\n                        <div className=\"following\">\n                            <span>999</span> Followings\n                        </div>\n                    </div>\n                    <div className=\"bio-wrap\">\n                        <div className=\"fullname\">\n                            {loggedInUser.name}\n                        </div>\n                        {loggedInUser.bio ? <div className=\"bio\">\n                            {loggedInUser.bio}\n                        </div> : <div className=\"bio\">\n                                Older dancers (especially from the SoCal dance community) – even if you can appreciate and welcome the ways dance has evolved, you’ll still feel pangs of nostalgia when going through this list.\n                        </div>}\n                    </div>\n                </div>\n            </div>\n            <div className=\"profile-content-wrap\">\n                <div className=\"headers-wrap\">\n                    <div className=\"user-tabs-wrap\" ref={userTabsRef}>\n                        <Tabs\n                            value={value}\n                            onChange={handleChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"fullWidth\"\n                            aria-label=\"full width tabs example\"\n                        >\n                            <Tab label=\"Posts\" icon={<CollectionsOutlinedIcon />} {...a11yProps(0)} />\n                            <Tab label=\"Liked\" icon={<FavoriteBorderOutlinedIcon />}{...a11yProps(1)} />\n                            <Tab label=\"Competitions\" icon={<LoyaltyOutlinedIcon />} {...a11yProps(2)} />\n                        </Tabs>\n                    </div>\n                    <SwipeableViews\n                        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                        index={value}\n                        onChangeIndex={handleChangeIndex}>\n                        <TabPanel value={value} index={0} dir={theme.direction}>\n                            <div className=\"flex-container\" >\n                                {UserUploadedVideoList.length !== 0 ? UserUploadedVideoList.map((vdoObj) => {\n                                    return <div className=\"flex-basis-3\" style={{ marginRight: '30px' }} key={vdoObj.key}>\n                                        <Vedio vdoObj={vdoObj} />\n                                    </div>\n                                }) :\n                                    <div>No video posted yet !</div>}\n                            </div>\n                        </TabPanel>\n                        <TabPanel value={value} index={1} dir={theme.direction}>\n                            <div className=\"flex-container\" >\n                                {UserLikedVideoList.length !== 0 ? UserLikedVideoList.map((vdoObj) => {\n                                    return <div className=\"flex-basis-3\" style={{ marginRight: '30px' }} key={vdoObj.key}>\n                                        <Vedio vdoObj={vdoObj} />\n                                    </div>\n                                }) :\n                                    <div>No video liked yet !</div>}\n                            </div>\n                        </TabPanel>\n                        <TabPanel value={value} index={2} dir={theme.direction}>\n                            <div className=\"flex-container\" >\n                                {UserCompetitionsList.length !== 0 ? UserCompetitionsList.map((competition) => {\n                                    return <div className=\"flex-basis-3\" style={{ marginRight: '30px' }} key={competition.key} onClick={() => openCompetitionDetailsModal(competition)}>\n                                        <div>{competition.compName}</div>\n                                        <img src={competition.compImg} />\n                                    </div>\n                                }) :\n                                    <div>No competition enrolled yet !</div>}\n                            </div>\n                        </TabPanel>\n                    </SwipeableViews>\n                </div>\n            </div>\n            {openUserEnrolledCompDetailsModal && <CompetitionsDetails open={openUserEnrolledCompDetailsModal} handleClose={() => setOpenUserEnrolledCompDetailsModal(false)} initialStep={initialStep} />}\n        </div>\n    )\n}\n\nexport default Profile\n",["240","241"],"/Users/danny/Documents/Projects/boogalu/src/Services/LocalstorageCache.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/EditProfile/EditProfile.js",["242","243","244","245"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useStoreConsumer } from '../../Providers/StateProvider';\nimport { signupUser } from '../../Actions/User';\nimport bgImg from '../../Images/bg1.svg';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport ArrowRightSharpIcon from '@material-ui/icons/ArrowRightSharp';\nimport { updateUser } from \"../../Services/User.service\";\nimport { uploadImage } from \"../../Services/Upload.service\";\nimport * as $ from 'jquery';\n\nexport default function EditProfile() {\n    const { state, dispatch } = useStoreConsumer();\n    const history = useHistory();\n    let loggedInUser = state.loggedInUser;\n    // get data from history props if redirected through google or facebook login\n    if (history.location.state && (history.location.state.source == 'Facebook' || history.location.state.source == 'Google')) {\n        loggedInUser.email = history.location.state.email;\n        loggedInUser.name = history.location.state.name;\n        // setNeedToRegisterError('You are not registered yet, Please register with Choreoculture.')\n    }\n    const [userDetails, setUserDetails] = useState(loggedInUser);\n    const [SignUpError, setSignUpError] = useState(null);\n    const [showHidePassword, setShowHidePassword] = useState({ showPassword: false, showConfirmPassword: false });\n    const [IsProfileImageChanged, setIsProfileImageChanged] = useState(false);\n    const handleChange = (prop) => (event) => {\n        setUserDetails({ ...userDetails, [prop]: event.target.value });\n        console.log(userDetails)\n    };\n\n    const handleClickShowPassword = (prop) => {\n        setShowHidePassword({ ...showHidePassword, [prop]: !showHidePassword[prop] });\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    useEffect(() => {\n        $('html,body').animate({\n            scrollTop: 0\n        }, 500);\n    }, [])\n\n    const setSignupUserCred = (e) => {\n        if (userDetails.password != userDetails.confirmPassword) {\n            setSignUpError('Password dose not match.');\n            return;\n        }\n        if (IsProfileImageChanged) {\n            uploadImage(userDetails.profileImage, 'user', 'small').subscribe((downloadableUrl) => {\n                userDetails.profileImage = downloadableUrl;\n                updateUser(userDetails.key, userDetails).subscribe(() => {\n                    dispatch(signupUser(userDetails));\n                    history.push(({\n                        pathname: '/profile',\n                        state: null\n                    }));\n                })\n            })\n        } else {\n            updateUser(userDetails.key, userDetails).subscribe(() => {\n                dispatch(signupUser(userDetails));\n                history.push(({\n                    pathname: '/profile',\n                    state: null\n                }));\n            })\n        }\n        e.preventDefault();\n    }\n\n    async function onChangeFile(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        var file = event.target.files[0];\n        console.log(file);\n        if (file) {\n            setUserDetails({ ...userDetails, profileImage: null });\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                setIsProfileImageChanged(true);\n                setUserDetails({ ...userDetails, profileImage: reader.result });\n            }\n            reader.onerror = error => console.error(error);\n        } else setIsProfileImageChanged(false);\n    }\n\n    return (\n        <div className=\"logout-wrap edit-page-wrap clearfix\">\n            <form className=\"form-wrap clearfix\" onSubmit={setSignupUserCred}>\n                <div className=\"heading-outer\">\n                    <div className=\"heading1\">Update Profile</div>\n                </div>\n                <div className=\"form-outer final-registration-block clearfix\">\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-Name\"\n                            label=\"Name\"\n                            onChange={handleChange('name')}\n                            value={userDetails.name}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-Username\"\n                            label=\"Username\"\n                            onChange={handleChange('username')}\n                            value={userDetails.username}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            type=\"tel\"\n                            id=\"outlined-required-phone\"\n                            label=\"Phone\"\n                            onChange={handleChange('phone')}\n                            value={userDetails.phone}\n                            variant=\"outlined\"\n                            InputProps={{ readOnly: true }}\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-email\"\n                            label=\"Email\"\n                            type=\"email\"\n                            onChange={handleChange('email')}\n                            value={userDetails.email}\n                            variant=\"outlined\"\n                            InputProps={{ readOnly: true }}\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-country\"\n                            label=\"Country\"\n                            onChange={handleChange('country')}\n                            value={userDetails.country}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-state\"\n                            label=\"State\"\n                            onChange={handleChange('state')}\n                            value={userDetails.state}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl className=\"\" variant=\"outlined\" style={{ width: '100%' }}>\n                            <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n                            <OutlinedInput\n                                required\n                                id=\"outlined-adornment-password\"\n                                type={showHidePassword.showPassword ? 'text' : 'password'}\n                                value={userDetails.password}\n                                onChange={handleChange('password')}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={() => handleClickShowPassword('showPassword')}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showHidePassword.showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                labelWidth={70}\n                            />\n                        </FormControl>\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl className=\"\" variant=\"outlined\" style={{ width: '100%' }}>\n                            <InputLabel htmlFor=\"outlined-adornment-confirm-password\">Confirm Password</InputLabel>\n                            <OutlinedInput\n                                required\n                                id=\"outlined-adornment-confirm-password\"\n                                type={showHidePassword.showConfirmPassword ? 'text' : 'password'}\n                                value={userDetails.confirmPassword}\n                                onChange={handleChange('confirmPassword')}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle confirm password visibility\"\n                                            onClick={() => handleClickShowPassword('showConfirmPassword')}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showHidePassword.showConfirmPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                labelWidth={70}\n                            />\n                        </FormControl>\n                    </div>\n                    <div className=\"input-wrap\">\n                        <div className=\"dob-wrap\">\n                            <TextField className=\"input-field\"\n                                id=\"date\"\n                                label=\"Birthday\"\n                                type=\"date\"\n                                style={{ width: '100%' }}\n                                onChange={handleChange('dob')}\n                                value={userDetails.dob}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl variant=\"outlined\" className=\"input-field\">\n                            <InputLabel id=\"select-outlined-label\">Gender</InputLabel>\n                            <Select\n                                labelId=\"select-outlined-label\"\n                                id=\"select-outlined\"\n                                value={userDetails.gender}\n                                onChange={handleChange('gender')}\n                                label=\"Gender\"\n                            >\n                                <MenuItem value=\"Male\">Male</MenuItem>\n                                <MenuItem value=\"Female\">Female</MenuItem>\n                                <MenuItem value=\"Other\">Other</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div className=\"input-wrap bio-wrap\">\n                        <TextField className=\"input-field bio-input\"\n                            id=\"outlined-required-bio\"\n                            label=\"Bio\"\n                            value={userDetails.bio}\n                            onChange={handleChange('bio')}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap bio-wrap edit-profile-page-input\">\n                        <div className=\"tnc-wrap\">\n                            <div className=\"tnc-content clearfix\">\n                                <div className=\"checkbox-wrap\">\n                                    <Checkbox\n                                        required\n                                        color=\"primary\"\n                                        checked={userDetails.tnc}\n                                        onChange={(e) => setUserDetails({ ...userDetails, tnc: e.target.checked })}\n                                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                    />\n                                </div>\n                                <div className=\"note-wrap\">Yes, I agree to the terms and conditions </div>\n                            </div>\n                        </div>\n                        {SignUpError && <div className=\"login-error\">\n                            {SignUpError}\n                        </div>}\n                        <div className=\"submit-btn clearfix\">\n                            <Button variant=\"contained\" type=\"submit\" color=\"primary\" >Update\n                            <ArrowRightSharpIcon />\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n            <div className=\"img-wrap\">\n                <img src={bgImg} alt=\"bg1\" />\n            </div>\n        </div>\n    );\n}","/Users/danny/Documents/Projects/boogalu/src/Components/Homepage/index.js",["246","247","248","249","250"],"/Users/danny/Documents/Projects/boogalu/src/Components/Splash/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/Competitions/index.js",["251","252","253","254"],"/Users/danny/Documents/Projects/boogalu/src/Components/Upcoming/index.js",["255","256","257"],"/Users/danny/Documents/Projects/boogalu/src/Components/Loader/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/Contactus/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/Subscriptions/index.js",["258","259","260","261","262"],"/Users/danny/Documents/Projects/boogalu/src/Components/Page404/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/Notification/index.js",["263"],"import React, { useState, useEffect } from 'react'\nimport { useStoreConsumer } from '../../Providers/StateProvider';\nimport { removeNotification } from \"../../Actions/Notification\";\nexport default function Notification() {\n\n    const { state, dispatch } = useStoreConsumer();\n    const [ShowNotification, setShowNotification] = useState(true);\n    const [ActiveNotification, setActiveNotification] = useState(null);\n\n    useEffect(() => {\n        if (state.notification && state.notification.msg) {\n            setShowNotification(true);\n            setActiveNotification(state.notification);\n            setTimeout(() => {\n                setShowNotification(false);\n                setActiveNotification(null);\n                dispatch(removeNotification({ msg: '', type: '', time: 3000 }))\n            }, state.notification.time);\n        }\n    }, [state])\n    return (\n        <>\n            {ShowNotification ? <div className={`${ActiveNotification?.type} notification-wrap`}>\n                <div className=\"notification-type\">\n                    <div className=\"notification-msg\">{ActiveNotification?.msg}</div>\n                </div>\n            </div> : null}\n        </>\n    )\n}","/Users/danny/Documents/Projects/boogalu/src/Components/VideoUploader/index.js",["264","265","266"],"/Users/danny/Documents/Projects/boogalu/src/Reducers/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Services/Upload.service.js",["267","268"],"/Users/danny/Documents/Projects/boogalu/src/Services/Competition.service.js",[],"/Users/danny/Documents/Projects/boogalu/src/Services/Utils.js",["269","270","271"],"/Users/danny/Documents/Projects/boogalu/src/Services/User.service.js",[],"/Users/danny/Documents/Projects/boogalu/src/Services/UploadedVideo.service.js",[],"/Users/danny/Documents/Projects/boogalu/src/Services/EnrollCompetition.service.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/Feeds/index.js",["272","273","274","275","276","277","278","279","280","281","282","283","284"],"import React, { useEffect, useState } from 'react'\nimport { getUploadedVideosList } from \"../../Services/UploadedVideo.service\";\nimport { updateVideo } from \"../../Services/UploadedVideo.service\";\nimport { getAllUser } from \"../../Services/User.service\";\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport Favorite from '@material-ui/icons/Favorite';\nimport CommentOutlined from '@material-ui/icons/CommentOutlined';\nimport { useStoreConsumer } from '../../Providers/StateProvider';\nimport Comments from '../Comments'\n\nimport Vedio from \"../Vedio/Video\";\n\nfunction Feeds() {\n\n    const [feedList, setFeedList] = useState([])\n    const [userList, setUserList] = useState([])\n    const [activeVideoObj, setActiveVideoObj] = useState({})\n    const [commentModal, setCommentModal] = useState(false)\n    const { state, dispatch } = useStoreConsumer();\n    const loggedInUser = state.loggedInUser;\n\n    const getAllUserList = () => {\n        return new Promise((res, rej) => {\n            getAllUser().subscribe((users) => {\n                setUserList(users);\n                res(users);\n            });\n        })\n    }\n\n    const getAllUploadedVideos = () => {\n        return new Promise((res, rej) => {\n            getUploadedVideosList().subscribe((videos) => {\n                res(videos);\n            });\n        })\n    }\n\n    const handleLikes = (video, status) => {\n        let videoObj = { ...video }\n        if(status == 'liked'){\n            if(videoObj.likes){\n                videoObj.likes.push({ value: 1, userId: loggedInUser.key })\n            }else{\n                videoObj.likes = [{ value: 1, userId: loggedInUser.key }]\n            }\n        }else{\n            let likes = videoObj.likes.filter(data => data.userId != loggedInUser.key)\n            videoObj.likes = likes\n        }\n        updateVideo(videoObj.key, videoObj).subscribe(() => {\n            let feedListCopy = [...feedList]\n            feedListCopy.map((feed)=>{\n                if(feed.key == videoObj.key){\n                    feed.likes = videoObj.likes\n                }\n\n                if (feed.likes && feed.likes.length) {\n                    let isAvail = feed.likes.filter(data => data.userId == loggedInUser.key)\n                    isAvail.length > 0 ? feed.isLiked = true : feed.isLiked = false\n                } else {\n                    feed.isLiked = false\n                }\n            })\n            setFeedList(feedListCopy)\n        })\n    }\n\n    const handleComments = (commentString) => {\n        let videoObj = { ...activeVideoObj }\n        if(videoObj.comments){\n            videoObj.comments.push({ value: commentString, userId: loggedInUser.key, userName: loggedInUser.username})\n        }else{\n            videoObj.comments = [{ value: commentString, userId: loggedInUser.key, userName: loggedInUser.username }]\n        }\n        \n        updateVideo(videoObj.key, videoObj).subscribe(() => {\n            let feedListCopy = [...feedList]\n            feedListCopy.map((feed)=>{\n                if(feed.key == videoObj.key){\n                    feed.comments = videoObj.comments\n                }\n            })\n            setFeedList(feedListCopy)\n        })\n    }\n\n    const handleCommentClick = (video)=>{\n        setCommentModal(true);\n        setActiveVideoObj(video)\n    }\n\n    useEffect(() => {\n        Promise.all([getAllUserList(), getAllUploadedVideos()]).then((data) => {\n            let tempUserList = data[0]\n            let tempFeedList = data[1]\n\n            tempUserList.map((user) => {\n                tempFeedList.map((feed) => {\n                    if (user.key == feed.userId) {\n                        feed.username = user.name\n                    }\n                    if (feed.likes && feed.likes.length) {\n                        let isAvail = feed.likes.filter(data => data.userId == loggedInUser.key)\n                        isAvail.length > 0 ? feed.isLiked = true : feed.isLiked = false\n                    } else {\n                        feed.isLiked = false\n                    }\n\n                })\n            })\n\n            setFeedList(tempFeedList)\n        })\n    }, [])\n\n    return (\n        <div className=\"user-dashboard-wrap\">\n            <div className=\"user-list-wrap\">\n                {userList && userList.map((user) => {\n                    return <div key={user.key} className=\"user-icon-wrap\">\n                        <AccountCircleOutlinedIcon />\n                        <div>{user.username}</div>\n                    </div>\n                })}\n            </div>\n            <div className=\"feed-dashboard-wrap\">\n                <div className=\"loggedin-user\">\n                    <div>\n                        <AccountCircleOutlinedIcon />\n                        <div>\n                            <div>{loggedInUser.username}</div>\n                            <div className=\"username\">{loggedInUser.name}</div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"feed-wrap\">\n                    {feedList && feedList.map((feed) => {\n                        return <div key={feed.key} className=\"feed-card\">\n                            <div className=\"username\">\n                                <AccountCircleOutlinedIcon />\n                                <span>{feed.username}</span>\n                            </div>\n                            <div>\n                                <Vedio vdoObj={feed} />\n                            </div>\n                            <div className=\"video-title-like-wrap\">\n                                <div className=\"title\">{feed.title}</div>\n                                <div className=\"like-comment\">\n                                    {feed.likes && feed.likes.length > 0 && <div className=\"likes-count\">{feed.likes.length} Likes</div>}\n                                    {!feed.isLiked && <FavoriteBorder title=\"Unlike\" onClick={() => handleLikes(feed,'liked')} />}\n                                    {feed.isLiked && <Favorite title=\"Like\" onClick={() => handleLikes(feed,'unliked')} />}\n                                    <CommentOutlined title=\"comment\" onClick={() => handleCommentClick(feed)} />\n                                </div>\n\n                            </div>\n                        </div>\n                    })}\n                </div>\n            </div>\n\n            {commentModal && <Comments handleClose={() => setCommentModal(false)} handleLikes={handleLikes} handleComments={handleComments} videoObj={activeVideoObj} />}\n\n        </div>\n    )\n}\n\nexport default Feeds\n","/Users/danny/Documents/Projects/boogalu/src/Components/Signup/index.js",["285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317"],"import React, { useRef, useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useStoreConsumer } from '../../Providers/StateProvider';\nimport { signupUser } from '../../Actions/User';\nimport bgImg from '../../Images/bg1.svg';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { FaPlus, FaEdit } from 'react-icons/fa';\nimport stepListData from '../../Data/RegistrationStepData'\nimport ArrowRightSharpIcon from '@material-ui/icons/ArrowRightSharp';\nimport { registerUser, getUserByEmail, getUserByPhone } from \"../../Services/User.service\";\nimport { enableLoading, disableLoading } from \"../../Actions/Loader\";\nimport { displayNotification } from \"../../Actions/Notification\";\nimport { NOTIFICATION_SUCCCESS, NOTIFICATION_ERROR, MALE_PROFILE_DEFAULT_IMAGE, FEMALE_PROFILE_DEFAULT_IMAGE } from \"../../Constants\";\nimport { uploadImage } from \"../../Services/Upload.service\";\nimport * as $ from 'jquery';\n\nexport default function Signup() {\n    const { state, dispatch } = useStoreConsumer();\n    const history = useHistory();\n    let loggedInUser = state.loggedInUser;\n    // if user already login then redirect to home\n    if (loggedInUser.name && loggedInUser.phone && loggedInUser.email && loggedInUser.username) history.push({\n        pathname: '/',\n        state: null\n    })\n    // get data from history props if redirected through google or facebook login\n    if (history.location.state && (history.location.state.source === 'Facebook' || history.location.state.source === 'Google')) {\n        loggedInUser.email = history.location.state.email;\n        loggedInUser.name = history.location.state.name;\n        // setNeedToRegisterError('You are not registered yet, Please register with Choreoculture.')\n    }\n    const [userDetails, setUserDetails] = useState(loggedInUser);\n    const [SignUpError, setSignUpError] = useState(null);\n    const [showHidePassword, setShowHidePassword] = useState({ showPassword: false, showConfirmPassword: false });\n\n    const [activeStep, setActiveStep] = useState('stepOne');\n    const [showNextButton, setShowNextButton] = useState(false);\n    const [stepData, setStepListData] = useState(stepListData);\n    const [selectedOptionsList, setSelectedOptionsList] = useState([]);\n    const [isUserPhotoUploaded, userPhotoUploadToggle] = useState(false);\n    const uploaderRef = useRef(null);\n\n    const handleChange = (prop) => (event) => {\n        setUserDetails({ ...userDetails, [prop]: event.target.value });\n    };\n\n    const handleClickShowPassword = (prop) => {\n        setShowHidePassword({ ...showHidePassword, [prop]: !showHidePassword[prop] });\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    useEffect(() => {\n        $('html,body').animate({\n            scrollTop: 0\n        }, 500);\n        if (userDetails && !userDetails.profileImage) {\n            setUserDetails({ ...userDetails, profileImage: MALE_PROFILE_DEFAULT_IMAGE })\n        }\n    }, [])\n\n    useEffect(() => {\n        if (stepData[activeStep]) {\n            let isAnySelected = stepData[activeStep].filter((data) => data.isSelected);\n            if (isAnySelected.length != 0) setShowNextButton(true);\n            else setShowNextButton(false);\n            // set selected options\n            let selectedOptions = [];\n            Object.entries(stepData).map(([parentKey, parentValue]) => {\n                parentValue.map((parentValueItem) => {\n                    if (parentValueItem.isSelected) {\n                        let selectionObj = { value: [parentValueItem.title], key: parentKey, heading: parentValueItem.heading };\n                        if (selectedOptions.length != 0) {\n                            let isAvl = selectedOptions.filter((data) => data.key === parentKey);\n                            if (isAvl.length != 0) {\n                                selectedOptions.map((item) => {\n                                    if (item.key === parentKey) item.value.push(parentValueItem.title);\n                                })\n                            } else selectedOptions.push(selectionObj);\n                        } else selectedOptions.push(selectionObj);\n                    }\n                })\n            })\n            setSelectedOptionsList(selectedOptions);\n        }\n    }, [activeStep])\n\n    const saveUserRegistrationDetails = () => {\n        return new Promise((res, rej) => {\n            dispatch(enableLoading());\n            if (userDetails.profileImage != MALE_PROFILE_DEFAULT_IMAGE) {\n                uploadImage(userDetails.profileImage, 'user', 'small').subscribe((downloadableUrl) => {\n                    userDetails.profileImage = downloadableUrl;\n                    registerUser(userDetails).subscribe((data) => {\n                        console.log('user registered success', data);\n                        res(data.key);\n                    })\n                })\n            } else {\n                registerUser(userDetails).subscribe((data) => {\n                    console.log('user registered success', data);\n                    res(data.key);\n                })\n            }\n        })\n    }\n\n    const checkForUsedPhone = () => {\n        return new Promise((res, rej) => {\n            getUserByPhone(userDetails.phone).subscribe((data) => {\n                dispatch(disableLoading());\n                if (data && data.length) {\n                    setSignUpError('Phone already registered.');\n                    rej(false);\n                } else {\n                    res(true);\n                }\n            })\n        })\n    }\n\n    const checkForUsedEmail = () => {\n        return new Promise((res, rej) => {\n            getUserByEmail(userDetails.email).subscribe((data) => {\n                dispatch(disableLoading());\n                if (data && data.length) {\n                    setSignUpError('Email already registered.');\n                    rej(false);\n                } else {\n                    res(true);\n                }\n            })\n        })\n    }\n\n    const setSignupUserCred = (e) => {\n        dispatch(enableLoading());\n        if (userDetails.password != userDetails.confirmPassword) {\n            setSignUpError('Password dose not match.');\n            return;\n        }\n\n        Promise.all([checkForUsedEmail(), checkForUsedPhone()]).then(() => {\n            saveUserRegistrationDetails()\n                .then((userKey) => {\n                    userDetails.key = userKey;\n                    dispatch(disableLoading());\n                    dispatch(signupUser(userDetails));\n                    dispatch(displayNotification({\n                        msg: \"Registration successfully\",\n                        type: NOTIFICATION_SUCCCESS,\n                        time: 3000\n                    }));\n                    if (state.currentLoginFlow == 'competition') history.push('/competitions');\n                    else if (state.currentLoginFlow == 'subscription') history.push('/subscription');\n                    if (state.currentLoginFlow == 'upload-video') history.push('/upload-video');\n                    else history.push(({\n                        pathname: '/',\n                        state: null\n                    }));\n                })\n                .catch((error) => {\n                    // error in user registration\n                    if (error) {\n\n                    }\n                })\n        }).catch(error => {\n            console.error(error)\n        });\n        e.preventDefault();\n    }\n\n    const setNextStep = () => {\n        switch (activeStep) {\n            case 'stepOne': setActiveStep('stepTwo'); break;\n            case 'stepTwo': setActiveStep('stepThree'); break;\n            case 'stepThree': setActiveStep('stepFour'); break;\n            case 'stepFour': setActiveStep('stepFive'); break;\n            case 'stepFive': setActiveStep(6); break;\n        }\n    }\n\n    const setPrevStep = () => {\n        switch (activeStep) {\n            case 'stepTwo': setActiveStep('stepOne'); break;\n            case 'stepThree': setActiveStep('stepTwo'); break;\n            case 'stepFour': setActiveStep('stepThree'); break;\n            case 'stepFive': setActiveStep('stepFour'); break;\n            case 6: setActiveStep('stepFive'); break;\n        }\n    }\n\n    const setStepListItemData = (e, activeItem, status) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const stepDataList = Object.assign({}, stepData);\n        stepDataList[activeStep].map((item) => {\n            if (item.title === activeItem.title) {\n                item.isSelected = item.isSelected ? false : true;\n            } else {\n                if (status != 'multi-select') {\n                    item.isSelected = false;\n                }\n            }\n        })\n        // set selected options\n        let selectedOptions = [];\n        Object.entries(stepDataList).map(([parentKey, parentValue]) => {\n            parentValue.map((parentValueItem) => {\n                if (parentValueItem.isSelected) {\n                    let selectionObj = { value: [parentValueItem.title], key: parentKey, heading: parentValueItem.heading };\n                    if (selectedOptions.length != 0) {\n                        let isAvl = selectedOptions.filter((data) => data.key === parentKey);\n                        if (isAvl.length != 0) {\n                            selectedOptions.map((item) => {\n                                if (item.key === parentKey) item.value.push(parentValueItem.title);\n                            })\n                        } else selectedOptions.push(selectionObj);\n                    } else selectedOptions.push(selectionObj);\n                }\n            })\n        })\n        setSelectedOptionsList(selectedOptions);\n        let isAnySelected = stepDataList[activeStep].filter((data) => data.isSelected);\n        if (isAnySelected.length != 0) setShowNextButton(true);\n        else setShowNextButton(false);\n        setStepListData(stepDataList);\n    }\n\n    async function onChangeFile(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        var file = event.target.files[0];\n        console.log(file);\n        if (file) {\n            setUserDetails({ ...userDetails, profileImage: null });\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                userPhotoUploadToggle(true);\n                setUserDetails({ ...userDetails, profileImage: reader.result });\n            }\n            reader.onerror = error => console.error(error);\n        }\n    }\n\n    return (\n        <div className=\"logout-wrap clearfix\">\n            {activeStep != 6 && <div className=\"step-wrap\">\n                <div className=\"heading1\">Let's Get Started!</div>\n                {activeStep === 'stepOne' && <>\n                    <div className=\"list-content\">\n                        <div className=\"list-heading-wrap\">\n                            <div className=\"heading2\">What’s your experience with dancing?</div>\n                            <div className=\"heading3\">Select One Option</div>\n                        </div>\n                        <div className=\"list\">\n                            {stepData.stepOne.map((item, i) => {\n                                return (\n                                    <div key={i} className={item.isSelected ? 'list-item selected-item' : 'list-item'} onClick={(e) => setStepListItemData(e, item)}>\n                                        <div className=\"title\">{item.title}</div>\n                                        <div className=\"desc\">{item.desc}</div>\n                                        <Checkbox\n                                            required\n                                            color=\"primary\"\n                                            className=\"selected-item-checkbox\"\n                                            checked={item.isSelected}\n                                            onChange={(e) => setStepListItemData(e, item)}\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                        />\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </>}\n                {activeStep === 'stepTwo' && <>\n                    <div className=\"list-content\">\n                        <div className=\"list-heading-wrap\">\n                            <div className=\"heading2\">What is your first goal that you want to work on?</div>\n                            <div className=\"heading3\">Select One Option</div>\n                        </div>\n                        <div className=\"list\">\n                            {stepData.stepTwo.map((item, i) => {\n                                return (\n                                    <div key={i} className={item.isSelected ? 'list-item selected-item' : 'list-item'} onClick={(e) => setStepListItemData(e, item)}>\n                                        <div className=\"title\">{item.title}</div>\n                                        <div className=\"desc\">{item.desc}</div>\n                                        <Checkbox\n                                            required\n                                            color=\"primary\"\n                                            className=\"selected-item-checkbox\"\n                                            checked={item.isSelected}\n                                            onChange={(e) => setStepListItemData(e, item)}\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                        />\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </>}\n                {activeStep === 'stepThree' && <>\n                    <div className=\"list-content\">\n                        <div className=\"list-heading-wrap\">\n                            <div className=\"heading2\">What are you interested in?</div>\n                            <div className=\"heading3\">Select all that apply</div>\n                        </div>\n                        <div className=\"list\">\n                            {stepData.stepThree.map((item, i) => {\n                                return (\n                                    <div key={i} className={item.isSelected ? 'list-item selected-item' : 'list-item'} onClick={(e) => setStepListItemData(e, item, 'multi-select')}>\n                                        <div className=\"title\">{item.title}</div>\n                                        <div className=\"desc\" style={{ paddingRight: '25px' }}>{item.desc}</div>\n                                        <Checkbox\n                                            required\n                                            color=\"primary\"\n                                            className=\"selected-item-checkbox\"\n                                            checked={item.isSelected}\n                                            onChange={(e) => setStepListItemData(e, item, 'multi-select')}\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                        />\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </>}\n                {activeStep === 'stepFour' && <>\n                    <div className=\"list-content\">\n                        <div className=\"list-heading-wrap\">\n                            <div className=\"heading2\">How long would you like your dance sessions to be?</div>\n                            <div className=\"heading3\">Select One Option</div>\n                        </div>\n                        <div className=\"list\">\n                            {stepData.stepFour.map((item, i) => {\n                                return (\n                                    <div key={i} className={item.isSelected ? 'list-item selected-item' : 'list-item'} onClick={(e) => setStepListItemData(e, item)}>\n                                        <div className=\"title\">{item.title}</div>\n                                        <div className=\"desc\">{item.desc}</div>\n                                        <Checkbox\n                                            required\n                                            color=\"primary\"\n                                            className=\"selected-item-checkbox\"\n                                            checked={item.isSelected}\n                                            onChange={(e) => setStepListItemData(e, item)}\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                        />\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </>}\n                {activeStep === 'stepFive' && <>\n                    <div className=\"list-content\">\n                        <div className=\"list-heading-wrap\">\n                            <div style={{ paddingBottom: 0 }} className=\"heading2\">Your Personal Schedule & Recommendations</div>\n                        </div>\n                        <div className=\"list\">\n                            {selectedOptionsList.map((item, i) => {\n                                return (\n                                    <div key={i} className=\"list-item selected-item\" onClick={() => setActiveStep(item.key)}>\n                                        <div className=\"title\">{item.heading}</div>\n                                        <div className=\"desc\">\n                                            {item.value.length === 1 &&\n                                                item.value.map((listValue, j) => {\n                                                    return <span key={j}>{listValue} </span>\n                                                })\n                                            }\n                                            {item.value.length != 1 &&\n                                                item.value.map((listValue, j) => {\n                                                    return <span key={j}>{listValue}, </span>\n                                                })\n                                            }\n\n                                        </div>\n                                        {/* <Checkbox\n                                            required\n                                            color=\"primary\"\n                                            className=\"selected-item-checkbox\"\n                                            checked={true}\n                                            disabled={true}\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                        /> */}\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </>}\n                {activeStep != 6 && <div className=\"step-already-login-wrap clearfix\">\n                    <div className=\"text-wrap\">Already have an account?</div>\n                    <Button color=\"primary\" onClick={() => history.push({\n                        pathname: '/login',\n                        state: null\n                    })}>SIGN IN</Button>\n                    {\n                        showNextButton ?\n                            <div className={`next-prev-actions ${activeStep != 'stepOne' ? 'next-step-active' : ''} `}>\n                                {activeStep != 'stepOne' && <Button color=\"primary\" variant=\"contained\" className=\"next-btn previous\" onClick={() => setPrevStep()}>Prev</Button>}\n                                {showNextButton && <Button color=\"primary\" variant=\"contained\" className=\"next-btn\" onClick={() => setNextStep()}>Next</Button>}\n                            </div> : ''\n                    }\n                </div>}\n            </div>}\n            {activeStep == 6 && <form className=\"form-wrap final-registration-block clearfix\" onSubmit={setSignupUserCred}>\n                <div className=\"heading-outer\">\n                    <div className=\"heading1\">Let's Get Started!</div>\n                    <div className=\"heading2\">Create an account to Choreoculture to get all features.</div>\n                </div>\n                {/* {NeedToRegisterError && <div className=\"login-error\">\n                    {NeedToRegisterError}\n                </div>} */}\n                <div className=\"profile-img-wrap\">\n                    <div className=\"uploaded-img\" >\n                        <img src={userDetails.profileImage} onClick={() => { uploaderRef.current.click() }} />\n                    </div>\n                    {\n                        isUserPhotoUploaded ?\n                            <i className=\"plus-icon\"><FaEdit /></i>\n                        : \n                            <i className=\"plus-icon\"><FaPlus /></i>\n                    }\n                    <input id=\"myInput\"\n                        type=\"file\"\n                        accept=\"image/*\"\n                        ref={uploaderRef}\n                        onChange={(e) => onChangeFile(e)}\n                    />\n                    {/* <div className=\"upload-btn-file\">\n                        <Button\n                            variant=\"contained\" color=\"primary\"\n                            onClick={() => { uploaderRef.current.click() }}>Upload Video</Button>\n                    </div>  */}\n                </div>\n                <div className=\"form-outer clearfix\">\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-Name\"\n                            label=\"Name\"\n                            onChange={handleChange('name')}\n                            value={userDetails.name}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-Username\"\n                            label=\"Username\"\n                            onChange={handleChange('username')}\n                            value={userDetails.username}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            type=\"tel\"\n                            id=\"outlined-required-phone\"\n                            label=\"Phone\"\n                            onChange={handleChange('phone')}\n                            value={userDetails.phone}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-email\"\n                            label=\"Email\"\n                            type=\"email\"\n                            onChange={handleChange('email')}\n                            value={userDetails.email}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-country\"\n                            label=\"Country\"\n                            onChange={handleChange('country')}\n                            value={userDetails.country}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-state\"\n                            label=\"State\"\n                            onChange={handleChange('state')}\n                            value={userDetails.state}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl className=\"\" variant=\"outlined\">\n                            <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n                            <OutlinedInput\n                                required\n                                id=\"outlined-adornment-password\"\n                                type={showHidePassword.showPassword ? 'text' : 'password'}\n                                value={userDetails.password}\n                                onChange={handleChange('password')}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={() => handleClickShowPassword('showPassword')}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showHidePassword.showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                labelWidth={70}\n                            />\n                        </FormControl>\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl className=\"\" variant=\"outlined\">\n                            <InputLabel htmlFor=\"outlined-adornment-confirm-password\">Confirm Password</InputLabel>\n                            <OutlinedInput\n                                required\n                                id=\"outlined-adornment-confirm-password\"\n                                type={showHidePassword.showConfirmPassword ? 'text' : 'password'}\n                                value={userDetails.confirmPassword}\n                                onChange={handleChange('confirmPassword')}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle confirm password visibility\"\n                                            onClick={() => handleClickShowPassword('showConfirmPassword')}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showHidePassword.showConfirmPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                labelWidth={70}\n                            />\n                        </FormControl>\n                    </div>\n                    <div className=\"input-wrap\">\n                        <div className=\"dob-wrap\">\n                            <TextField className=\"input-field\"\n                                id=\"date\"\n                                label=\"Birthday\"\n                                type=\"date\"\n                                onChange={handleChange('dob')}\n                                value={userDetails.dob}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl variant=\"outlined\" className=\"input-field\">\n                            <InputLabel id=\"select-outlined-label\">Gender</InputLabel>\n                            <Select\n                                labelId=\"select-outlined-label\"\n                                id=\"select-outlined\"\n                                value={userDetails.gender}\n                                onChange={handleChange('gender')}\n                                label=\"Gender\"\n                            >\n                                <MenuItem value=\"Male\">Male</MenuItem>\n                                <MenuItem value=\"Female\">Female</MenuItem>\n                                <MenuItem value=\"Other\">Other</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div className=\"input-wrap bio-wrap\">\n                        <TextField className=\"input-field bio-input\"\n                            id=\"outlined-required-bio\"\n                            label=\"Bio\"\n                            value={userDetails.bio}\n                            onChange={handleChange('bio')}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"tnc-wrap\">\n                        <div className=\"tnc-content clearfix\">\n                            <div className=\"checkbox-wrap\">\n                                <Checkbox\n                                    required\n                                    color=\"primary\"\n                                    checked={userDetails.tnc}\n                                    onChange={(e) => setUserDetails({ ...userDetails, tnc: e.target.checked })}\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                />\n                            </div>\n                            <div className=\"note-wrap\">Yes, I agree to the terms and conditions </div>\n                        </div>\n                    </div>\n                    {SignUpError && <div className=\"login-error\">\n                        {SignUpError}\n                    </div>}\n                    <div className=\"submit-btn clearfix\">\n                        <Button variant=\"contained\" type=\"submit\" color=\"primary\" >Sign Up\n                         <ArrowRightSharpIcon />\n                        </Button>\n                        {activeStep != 'stepOne' && <Button color=\"primary\" variant=\"contained\" className=\"next-btn previous\" onClick={() => setPrevStep()}>Prev</Button>}\n                    </div>\n                    <div className=\"already-login-wrap\">\n                        <div className=\"text-wrap\">Already have an account?</div>\n                        <Button color=\"primary\" onClick={() => history.push({\n                            pathname: '/login',\n                            state: null\n                        })}>SIGN IN</Button>\n                    </div>\n                </div>\n            </form>}\n\n            <div className=\"img-wrap\">\n                <img src={bgImg} alt=\"bg1\" />\n            </div>\n        </div>\n    );\n}","/Users/danny/Documents/Projects/boogalu/src/Components/Vedio/Video.js",[],"/Users/danny/Documents/Projects/boogalu/src/Actions/User/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Constants/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/CompetitionsDetails/index.js",["318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334"],"/Users/danny/Documents/Projects/boogalu/src/Actions/Loader/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Services/firebase.js",[],"/Users/danny/Documents/Projects/boogalu/src/Actions/Notification/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Actions/LoginFlow/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Actions/Utility/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Actions/Competition/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Data/RegistrationStepData.js",[],"/Users/danny/Documents/Projects/boogalu/src/Services/Subscription.service.js",[],"/Users/danny/Documents/Projects/boogalu/src/Data/LessonsCategory.js",[],"/Users/danny/Documents/Projects/boogalu/src/Database/index.js",["335"],"/Users/danny/Documents/Projects/boogalu/src/Actions/Subscription/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/Comments/index.js",["336","337","338","339"],"/Users/danny/Documents/Projects/boogalu/src/Components/BuySubscription/index.js",["340","341","342","343","344","345"],"/Users/danny/Documents/Projects/boogalu/src/Components/EnrollCompetition/index.js",["346","347"],{"ruleId":"348","severity":1,"message":"349","line":2,"column":50,"nodeType":"350","messageId":"351","endLine":2,"endColumn":54},{"ruleId":"348","severity":1,"message":"352","line":5,"column":7,"nodeType":"350","messageId":"351","endLine":5,"endColumn":24},{"ruleId":"348","severity":1,"message":"353","line":13,"column":10,"nodeType":"350","messageId":"351","endLine":13,"endColumn":18},{"ruleId":"348","severity":1,"message":"354","line":1,"column":17,"nodeType":"350","messageId":"351","endLine":1,"endColumn":25},{"ruleId":"355","severity":1,"message":"356","line":26,"column":8,"nodeType":"357","endLine":26,"endColumn":10,"suggestions":"358"},{"ruleId":"359","severity":1,"message":"360","line":61,"column":66,"nodeType":"361","endLine":61,"endColumn":81},{"ruleId":"362","severity":1,"message":"363","line":78,"column":29,"nodeType":"364","endLine":78,"endColumn":83},{"ruleId":"359","severity":1,"message":"360","line":84,"column":114,"nodeType":"361","endLine":84,"endColumn":129},{"ruleId":"359","severity":1,"message":"360","line":90,"column":110,"nodeType":"361","endLine":90,"endColumn":125},{"ruleId":"359","severity":1,"message":"360","line":96,"column":109,"nodeType":"361","endLine":96,"endColumn":124},{"ruleId":"348","severity":1,"message":"365","line":11,"column":33,"nodeType":"350","messageId":"351","endLine":11,"endColumn":51},{"ruleId":"355","severity":1,"message":"356","line":83,"column":8,"nodeType":"357","endLine":83,"endColumn":18,"suggestions":"366"},{"ruleId":"348","severity":1,"message":"367","line":86,"column":15,"nodeType":"350","messageId":"351","endLine":86,"endColumn":32},{"ruleId":"368","severity":1,"message":"369","line":222,"column":33,"nodeType":"364","endLine":222,"endColumn":163},{"ruleId":"362","severity":1,"message":"370","line":236,"column":25,"nodeType":"364","endLine":236,"endColumn":89},{"ruleId":"348","severity":1,"message":"371","line":18,"column":21,"nodeType":"350","messageId":"351","endLine":18,"endColumn":31},{"ruleId":"348","severity":1,"message":"365","line":23,"column":33,"nodeType":"350","messageId":"351","endLine":23,"endColumn":51},{"ruleId":"355","severity":1,"message":"372","line":37,"column":8,"nodeType":"357","endLine":37,"endColumn":28,"suggestions":"373"},{"ruleId":"374","severity":1,"message":"375","line":65,"column":28,"nodeType":"376","messageId":"377","endLine":65,"endColumn":30},{"ruleId":"378","severity":1,"message":"379","line":159,"column":9,"nodeType":"380","messageId":"381","endLine":232,"endColumn":10},{"ruleId":"374","severity":1,"message":"382","line":182,"column":52,"nodeType":"376","messageId":"377","endLine":182,"endColumn":54},{"ruleId":"374","severity":1,"message":"382","line":183,"column":57,"nodeType":"376","messageId":"377","endLine":183,"endColumn":59},{"ruleId":"374","severity":1,"message":"382","line":184,"column":57,"nodeType":"376","messageId":"377","endLine":184,"endColumn":59},{"ruleId":"374","severity":1,"message":"382","line":215,"column":52,"nodeType":"376","messageId":"377","endLine":215,"endColumn":54},{"ruleId":"374","severity":1,"message":"382","line":216,"column":57,"nodeType":"376","messageId":"377","endLine":216,"endColumn":59},{"ruleId":"374","severity":1,"message":"382","line":217,"column":57,"nodeType":"376","messageId":"377","endLine":217,"endColumn":59},{"ruleId":"368","severity":1,"message":"369","line":328,"column":17,"nodeType":"364","endLine":328,"endColumn":36},{"ruleId":"348","severity":1,"message":"383","line":9,"column":8,"nodeType":"350","messageId":"351","endLine":9,"endColumn":21},{"ruleId":"348","severity":1,"message":"384","line":59,"column":11,"nodeType":"350","messageId":"351","endLine":59,"endColumn":24},{"ruleId":"348","severity":1,"message":"385","line":65,"column":32,"nodeType":"350","messageId":"351","endLine":65,"endColumn":53},{"ruleId":"355","severity":1,"message":"386","line":82,"column":8,"nodeType":"357","endLine":82,"endColumn":10,"suggestions":"387"},{"ruleId":"374","severity":1,"message":"382","line":85,"column":37,"nodeType":"376","messageId":"377","endLine":85,"endColumn":39},{"ruleId":"355","severity":1,"message":"388","line":88,"column":8,"nodeType":"357","endLine":88,"endColumn":15,"suggestions":"389"},{"ruleId":"374","severity":1,"message":"382","line":134,"column":72,"nodeType":"376","messageId":"377","endLine":134,"endColumn":74},{"ruleId":"368","severity":1,"message":"369","line":149,"column":21,"nodeType":"364","endLine":149,"endColumn":59},{"ruleId":"368","severity":1,"message":"369","line":229,"column":41,"nodeType":"364","endLine":229,"endColumn":74},{"ruleId":"390","replacedBy":"391"},{"ruleId":"392","replacedBy":"393"},{"ruleId":"374","severity":1,"message":"382","line":28,"column":66,"nodeType":"376","messageId":"377","endLine":28,"endColumn":68},{"ruleId":"374","severity":1,"message":"382","line":28,"column":113,"nodeType":"376","messageId":"377","endLine":28,"endColumn":115},{"ruleId":"374","severity":1,"message":"375","line":57,"column":34,"nodeType":"376","messageId":"377","endLine":57,"endColumn":36},{"ruleId":"348","severity":1,"message":"394","line":84,"column":20,"nodeType":"350","messageId":"351","endLine":84,"endColumn":32},{"ruleId":"348","severity":1,"message":"395","line":5,"column":13,"nodeType":"350","messageId":"351","endLine":5,"endColumn":14},{"ruleId":"348","severity":1,"message":"396","line":9,"column":20,"nodeType":"350","messageId":"351","endLine":9,"endColumn":28},{"ruleId":"397","severity":1,"message":"398","line":24,"column":25,"nodeType":"364","endLine":24,"endColumn":223},{"ruleId":"397","severity":1,"message":"398","line":27,"column":25,"nodeType":"364","endLine":27,"endColumn":223},{"ruleId":"397","severity":1,"message":"398","line":30,"column":25,"nodeType":"364","endLine":30,"endColumn":223},{"ruleId":"399","severity":1,"message":"400","line":22,"column":51,"nodeType":"401","messageId":"402","endLine":22,"endColumn":53},{"ruleId":"374","severity":1,"message":"382","line":23,"column":104,"nodeType":"376","messageId":"377","endLine":23,"endColumn":106},{"ruleId":"374","severity":1,"message":"382","line":50,"column":36,"nodeType":"376","messageId":"377","endLine":50,"endColumn":38},{"ruleId":"355","severity":1,"message":"403","line":69,"column":8,"nodeType":"357","endLine":69,"endColumn":10,"suggestions":"404"},{"ruleId":"348","severity":1,"message":"405","line":1,"column":27,"nodeType":"350","messageId":"351","endLine":1,"endColumn":33},{"ruleId":"348","severity":1,"message":"406","line":1,"column":35,"nodeType":"350","messageId":"351","endLine":1,"endColumn":44},{"ruleId":"348","severity":1,"message":"407","line":6,"column":28,"nodeType":"350","messageId":"351","endLine":6,"endColumn":45},{"ruleId":"374","severity":1,"message":"382","line":32,"column":31,"nodeType":"376","messageId":"377","endLine":32,"endColumn":33},{"ruleId":"374","severity":1,"message":"382","line":62,"column":44,"nodeType":"376","messageId":"377","endLine":62,"endColumn":46},{"ruleId":"374","severity":1,"message":"382","line":70,"column":40,"nodeType":"376","messageId":"377","endLine":70,"endColumn":42},{"ruleId":"355","severity":1,"message":"408","line":75,"column":8,"nodeType":"357","endLine":75,"endColumn":10,"suggestions":"409"},{"ruleId":"355","severity":1,"message":"410","line":80,"column":8,"nodeType":"357","endLine":80,"endColumn":28,"suggestions":"411"},{"ruleId":"355","severity":1,"message":"412","line":20,"column":8,"nodeType":"357","endLine":20,"endColumn":15,"suggestions":"413"},{"ruleId":"355","severity":1,"message":"412","line":51,"column":8,"nodeType":"357","endLine":51,"endColumn":10,"suggestions":"414"},{"ruleId":"348","severity":1,"message":"415","line":66,"column":11,"nodeType":"350","messageId":"351","endLine":66,"endColumn":18},{"ruleId":"374","severity":1,"message":"382","line":137,"column":48,"nodeType":"376","messageId":"377","endLine":137,"endColumn":50},{"ruleId":"378","severity":1,"message":"379","line":24,"column":17,"nodeType":"380","messageId":"381","endLine":31,"endColumn":18},{"ruleId":"378","severity":1,"message":"379","line":61,"column":17,"nodeType":"380","messageId":"381","endLine":68,"endColumn":18},{"ruleId":"374","severity":1,"message":"382","line":26,"column":16,"nodeType":"376","messageId":"377","endLine":26,"endColumn":18},{"ruleId":"374","severity":1,"message":"382","line":27,"column":16,"nodeType":"376","messageId":"377","endLine":27,"endColumn":18},{"ruleId":"374","severity":1,"message":"382","line":28,"column":16,"nodeType":"376","messageId":"377","endLine":28,"endColumn":18},{"ruleId":"348","severity":1,"message":"396","line":20,"column":20,"nodeType":"350","messageId":"351","endLine":20,"endColumn":28},{"ruleId":"374","severity":1,"message":"382","line":42,"column":19,"nodeType":"376","messageId":"377","endLine":42,"endColumn":21},{"ruleId":"374","severity":1,"message":"375","line":49,"column":67,"nodeType":"376","messageId":"377","endLine":49,"endColumn":69},{"ruleId":"399","severity":1,"message":"400","line":54,"column":36,"nodeType":"401","messageId":"402","endLine":54,"endColumn":38},{"ruleId":"374","severity":1,"message":"382","line":55,"column":29,"nodeType":"376","messageId":"377","endLine":55,"endColumn":31},{"ruleId":"374","severity":1,"message":"382","line":60,"column":73,"nodeType":"376","messageId":"377","endLine":60,"endColumn":75},{"ruleId":"399","severity":1,"message":"400","line":80,"column":36,"nodeType":"401","messageId":"402","endLine":80,"endColumn":38},{"ruleId":"374","severity":1,"message":"382","line":81,"column":29,"nodeType":"376","messageId":"377","endLine":81,"endColumn":31},{"ruleId":"399","severity":1,"message":"400","line":99,"column":37,"nodeType":"401","messageId":"402","endLine":99,"endColumn":39},{"ruleId":"399","severity":1,"message":"400","line":100,"column":41,"nodeType":"401","messageId":"402","endLine":100,"endColumn":43},{"ruleId":"374","severity":1,"message":"382","line":101,"column":34,"nodeType":"376","messageId":"377","endLine":101,"endColumn":36},{"ruleId":"374","severity":1,"message":"382","line":105,"column":77,"nodeType":"376","messageId":"377","endLine":105,"endColumn":79},{"ruleId":"355","severity":1,"message":"416","line":116,"column":8,"nodeType":"357","endLine":116,"endColumn":10,"suggestions":"417"},{"ruleId":"348","severity":1,"message":"365","line":23,"column":33,"nodeType":"350","messageId":"351","endLine":23,"endColumn":51},{"ruleId":"348","severity":1,"message":"418","line":23,"column":81,"nodeType":"350","messageId":"351","endLine":23,"endColumn":109},{"ruleId":"355","severity":1,"message":"419","line":71,"column":8,"nodeType":"357","endLine":71,"endColumn":10,"suggestions":"420"},{"ruleId":"374","severity":1,"message":"375","line":76,"column":38,"nodeType":"376","messageId":"377","endLine":76,"endColumn":40},{"ruleId":"399","severity":1,"message":"400","line":80,"column":69,"nodeType":"401","messageId":"402","endLine":80,"endColumn":71},{"ruleId":"399","severity":1,"message":"400","line":81,"column":51,"nodeType":"401","messageId":"402","endLine":81,"endColumn":53},{"ruleId":"374","severity":1,"message":"375","line":84,"column":52,"nodeType":"376","messageId":"377","endLine":84,"endColumn":54},{"ruleId":"374","severity":1,"message":"375","line":86,"column":46,"nodeType":"376","messageId":"377","endLine":86,"endColumn":48},{"ruleId":"399","severity":1,"message":"400","line":87,"column":60,"nodeType":"401","messageId":"402","endLine":87,"endColumn":62},{"ruleId":"355","severity":1,"message":"421","line":97,"column":8,"nodeType":"357","endLine":97,"endColumn":20,"suggestions":"422"},{"ruleId":"374","severity":1,"message":"375","line":102,"column":42,"nodeType":"376","messageId":"377","endLine":102,"endColumn":44},{"ruleId":"374","severity":1,"message":"375","line":149,"column":34,"nodeType":"376","messageId":"377","endLine":149,"endColumn":36},{"ruleId":"374","severity":1,"message":"382","line":165,"column":48,"nodeType":"376","messageId":"377","endLine":165,"endColumn":50},{"ruleId":"374","severity":1,"message":"382","line":166,"column":53,"nodeType":"376","messageId":"377","endLine":166,"endColumn":55},{"ruleId":"374","severity":1,"message":"382","line":167,"column":48,"nodeType":"376","messageId":"377","endLine":167,"endColumn":50},{"ruleId":"378","severity":1,"message":"379","line":186,"column":9,"nodeType":"380","messageId":"381","endLine":192,"endColumn":10},{"ruleId":"378","severity":1,"message":"379","line":196,"column":9,"nodeType":"380","messageId":"381","endLine":202,"endColumn":10},{"ruleId":"399","severity":1,"message":"400","line":209,"column":45,"nodeType":"401","messageId":"402","endLine":209,"endColumn":47},{"ruleId":"374","severity":1,"message":"375","line":213,"column":28,"nodeType":"376","messageId":"377","endLine":213,"endColumn":30},{"ruleId":"399","severity":1,"message":"400","line":220,"column":69,"nodeType":"401","messageId":"402","endLine":220,"endColumn":71},{"ruleId":"399","severity":1,"message":"400","line":221,"column":47,"nodeType":"401","messageId":"402","endLine":221,"endColumn":49},{"ruleId":"374","severity":1,"message":"375","line":224,"column":48,"nodeType":"376","messageId":"377","endLine":224,"endColumn":50},{"ruleId":"374","severity":1,"message":"375","line":226,"column":42,"nodeType":"376","messageId":"377","endLine":226,"endColumn":44},{"ruleId":"399","severity":1,"message":"400","line":227,"column":56,"nodeType":"401","messageId":"402","endLine":227,"endColumn":58},{"ruleId":"374","severity":1,"message":"375","line":237,"column":34,"nodeType":"376","messageId":"377","endLine":237,"endColumn":36},{"ruleId":"374","severity":1,"message":"375","line":260,"column":25,"nodeType":"376","messageId":"377","endLine":260,"endColumn":27},{"ruleId":"374","severity":1,"message":"375","line":382,"column":64,"nodeType":"376","messageId":"377","endLine":382,"endColumn":66},{"ruleId":"374","severity":1,"message":"375","line":403,"column":29,"nodeType":"376","messageId":"377","endLine":403,"endColumn":31},{"ruleId":"374","severity":1,"message":"375","line":411,"column":77,"nodeType":"376","messageId":"377","endLine":411,"endColumn":79},{"ruleId":"374","severity":1,"message":"375","line":412,"column":45,"nodeType":"376","messageId":"377","endLine":412,"endColumn":47},{"ruleId":"374","severity":1,"message":"382","line":418,"column":25,"nodeType":"376","messageId":"377","endLine":418,"endColumn":27},{"ruleId":"368","severity":1,"message":"369","line":428,"column":25,"nodeType":"364","endLine":428,"endColumn":111},{"ruleId":"374","severity":1,"message":"375","line":616,"column":37,"nodeType":"376","messageId":"377","endLine":616,"endColumn":39},{"ruleId":"374","severity":1,"message":"382","line":61,"column":98,"nodeType":"376","messageId":"377","endLine":61,"endColumn":100},{"ruleId":"399","severity":1,"message":"400","line":63,"column":43,"nodeType":"401","messageId":"402","endLine":63,"endColumn":45},{"ruleId":"374","severity":1,"message":"382","line":65,"column":45,"nodeType":"376","messageId":"377","endLine":65,"endColumn":47},{"ruleId":"355","severity":1,"message":"423","line":80,"column":8,"nodeType":"357","endLine":80,"endColumn":20,"suggestions":"424"},{"ruleId":"348","severity":1,"message":"425","line":83,"column":15,"nodeType":"350","messageId":"351","endLine":83,"endColumn":29},{"ruleId":"374","severity":1,"message":"382","line":86,"column":30,"nodeType":"376","messageId":"377","endLine":86,"endColumn":32},{"ruleId":"374","severity":1,"message":"382","line":112,"column":97,"nodeType":"376","messageId":"377","endLine":112,"endColumn":99},{"ruleId":"399","severity":1,"message":"400","line":120,"column":32,"nodeType":"401","messageId":"402","endLine":120,"endColumn":34},{"ruleId":"374","severity":1,"message":"382","line":121,"column":26,"nodeType":"376","messageId":"377","endLine":121,"endColumn":28},{"ruleId":"399","severity":1,"message":"400","line":197,"column":47,"nodeType":"401","messageId":"402","endLine":197,"endColumn":49},{"ruleId":"374","severity":1,"message":"382","line":199,"column":49,"nodeType":"376","messageId":"377","endLine":199,"endColumn":51},{"ruleId":"374","severity":1,"message":"382","line":232,"column":42,"nodeType":"376","messageId":"377","endLine":232,"endColumn":44},{"ruleId":"374","severity":1,"message":"382","line":235,"column":42,"nodeType":"376","messageId":"377","endLine":235,"endColumn":44},{"ruleId":"374","severity":1,"message":"382","line":235,"column":61,"nodeType":"376","messageId":"377","endLine":235,"endColumn":63},{"ruleId":"374","severity":1,"message":"382","line":239,"column":42,"nodeType":"376","messageId":"377","endLine":239,"endColumn":44},{"ruleId":"374","severity":1,"message":"382","line":239,"column":61,"nodeType":"376","messageId":"377","endLine":239,"endColumn":63},{"ruleId":"374","severity":1,"message":"375","line":342,"column":74,"nodeType":"376","messageId":"377","endLine":342,"endColumn":76},{"ruleId":"348","severity":1,"message":"426","line":1,"column":10,"nodeType":"350","messageId":"351","endLine":1,"endColumn":14},{"ruleId":"348","severity":1,"message":"406","line":1,"column":27,"nodeType":"350","messageId":"351","endLine":1,"endColumn":36},{"ruleId":"348","severity":1,"message":"395","line":13,"column":13,"nodeType":"350","messageId":"351","endLine":13,"endColumn":14},{"ruleId":"348","severity":1,"message":"427","line":18,"column":30,"nodeType":"350","messageId":"351","endLine":18,"endColumn":49},{"ruleId":"374","severity":1,"message":"375","line":23,"column":24,"nodeType":"376","messageId":"377","endLine":23,"endColumn":26},{"ruleId":"348","severity":1,"message":"405","line":1,"column":17,"nodeType":"350","messageId":"351","endLine":1,"endColumn":23},{"ruleId":"348","severity":1,"message":"428","line":22,"column":12,"nodeType":"350","messageId":"351","endLine":22,"endColumn":31},{"ruleId":"374","severity":1,"message":"382","line":65,"column":36,"nodeType":"376","messageId":"377","endLine":65,"endColumn":38},{"ruleId":"374","severity":1,"message":"382","line":95,"column":37,"nodeType":"376","messageId":"377","endLine":95,"endColumn":39},{"ruleId":"374","severity":1,"message":"382","line":109,"column":37,"nodeType":"376","messageId":"377","endLine":109,"endColumn":39},{"ruleId":"374","severity":1,"message":"382","line":113,"column":37,"nodeType":"376","messageId":"377","endLine":113,"endColumn":39},{"ruleId":"355","severity":1,"message":"429","line":31,"column":8,"nodeType":"357","endLine":31,"endColumn":10,"suggestions":"430"},{"ruleId":"368","severity":1,"message":"369","line":117,"column":21,"nodeType":"364","endLine":117,"endColumn":121},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'loggedInUserState' is assigned a value but never used.","'toBase64' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history?.location?.pathname'. Either include it or remove the dependency array.","ArrayExpression",["431"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'NOTIFICATION_ERROR' is defined but never used.",["432"],"'listenRouteChange' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'signupUser' is defined but never used.","React Hook useEffect has a missing dependency: 'signinUser'. Either include it or remove the dependency array.",["433"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Expected '===' and instead saw '=='.","'ImageUploader' is defined but never used.","'onimageUpload' is assigned a value but never used.","'setUserLikedVideoList' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'history', 'loggedInUser', and 'onWindowScroll'. Either include them or remove the dependency array.",["434"],"React Hook useEffect has missing dependencies: 'dispatch' and 'loggedInUser.key'. Either include them or remove the dependency array.",["435"],"no-native-reassign",["436"],"no-negated-in-lhs",["437"],"'onChangeFile' is defined but never used.","'$' is defined but never used.","'dispatch' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'dispatch', 'loggedInUser.email', 'loggedInUser.phone', 'loggedInUser.subscriptions', 'prepareUserCompData', and 'state.currentLoginFlow'. Either include them or remove the dependency array.",["438"],"'useRef' is defined but never used.","'useEffect' is defined but never used.","'setActiveCategory' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'history', 'loggedInUser', 'state.activeSubscription.key', 'state.activeSubscription.type', and 'state.currentLoginFlow'. Either include them or remove the dependency array.",["439"],"React Hook useEffect has a missing dependency: 'loggedInUser?.subscriptions'. Either include it or remove the dependency array.",["440"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["441"],["442"],"'classes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loggedInUser.key'. Either include it or remove the dependency array.",["443"],"'FEMALE_PROFILE_DEFAULT_IMAGE' is defined but never used.","React Hook useEffect has a missing dependency: 'userDetails'. Either include it or remove the dependency array. You can also do a functional update 'setUserDetails(u => ...)' if you only need 'userDetails' in the 'setUserDetails' call.",["444"],"React Hook useEffect has a missing dependency: 'stepData'. Either include it or remove the dependency array.",["445"],"React Hook useEffect has missing dependencies: 'competitionDetails', 'dispatch', 'loggedInUser.email', 'loggedInUser.key', 'loggedInUser.phone', and 'userUploadedVdos.length'. Either include them or remove the dependency array.",["446"],"'getCurrentData' is assigned a value but never used.","'data' is defined but never used.","'setOpenDetailsModal' is assigned a value but never used.","'subsciptionValidity' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loggedInUser.subscriptions'. Either include it or remove the dependency array.",["447"],{"desc":"448","fix":"449"},{"desc":"450","fix":"451"},{"desc":"452","fix":"453"},{"desc":"454","fix":"455"},{"desc":"456","fix":"457"},"no-global-assign","no-unsafe-negation",{"desc":"458","fix":"459"},{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},{"desc":"464","fix":"465"},{"desc":"466","fix":"467"},{"desc":"468","fix":"469"},{"desc":"470","fix":"471"},{"desc":"472","fix":"473"},{"desc":"474","fix":"475"},{"desc":"476","fix":"477"},"Update the dependencies array to be: [history?.location?.pathname]",{"range":"478","text":"479"},"Update the dependencies array to be: [history?.location?.pathname, isMobile]",{"range":"480","text":"481"},"Update the dependencies array to be: [signinUser, thirdPartyResponse]",{"range":"482","text":"483"},"Update the dependencies array to be: [dispatch, history, loggedInUser, onWindowScroll]",{"range":"484","text":"485"},"Update the dependencies array to be: [dispatch, loggedInUser.key, state]",{"range":"486","text":"487"},"Update the dependencies array to be: [dispatch, loggedInUser.email, loggedInUser.phone, loggedInUser.subscriptions, prepareUserCompData, state.currentLoginFlow]",{"range":"488","text":"489"},"Update the dependencies array to be: [dispatch, history, loggedInUser, state.activeSubscription.key, state.activeSubscription.type, state.currentLoginFlow]",{"range":"490","text":"491"},"Update the dependencies array to be: [loggedInUser?.subscriptions, state.loggedInUser]",{"range":"492","text":"493"},"Update the dependencies array to be: [dispatch, state]",{"range":"494","text":"495"},"Update the dependencies array to be: [dispatch]",{"range":"496","text":"497"},"Update the dependencies array to be: [loggedInUser.key]",{"range":"498","text":"499"},"Update the dependencies array to be: [userDetails]",{"range":"500","text":"501"},"Update the dependencies array to be: [activeStep, stepData]",{"range":"502","text":"503"},"Update the dependencies array to be: [ActiveStep, competitionDetails, dispatch, loggedInUser.email, loggedInUser.key, loggedInUser.phone, userUploadedVdos.length]",{"range":"504","text":"505"},"Update the dependencies array to be: [loggedInUser.subscriptions]",{"range":"506","text":"507"},[925,927],"[history?.location?.pathname]",[3473,3483],"[history?.location?.pathname, isMobile]",[2030,2050],"[signinUser, thirdPartyResponse]",[3462,3464],"[dispatch, history, loggedInUser, onWindowScroll]",[3725,3732],"[dispatch, loggedInUser.key, state]",[3229,3231],"[dispatch, loggedInUser.email, loggedInUser.phone, loggedInUser.subscriptions, prepareUserCompData, state.currentLoginFlow]",[3825,3827],"[dispatch, history, loggedInUser, state.activeSubscription.key, state.activeSubscription.type, state.currentLoginFlow]",[4050,4070],"[loggedInUser?.subscriptions, state.loggedInUser]",[851,858],"[dispatch, state]",[2433,2435],"[dispatch]",[4212,4214],"[loggedInUser.key]",[3476,3478],"[userDetails]",[4800,4812],"[activeStep, stepData]",[3930,3942],"[ActiveStep, competitionDetails, dispatch, loggedInUser.email, loggedInUser.key, loggedInUser.phone, userUploadedVdos.length]",[1550,1552],"[loggedInUser.subscriptions]"]