[{"/Users/danny/Documents/Projects/boogalu/src/index.js":"1","/Users/danny/Documents/Projects/boogalu/src/reportWebVitals.js":"2","/Users/danny/Documents/Projects/boogalu/src/App.js":"3","/Users/danny/Documents/Projects/boogalu/src/Services/firebase.js":"4","/Users/danny/Documents/Projects/boogalu/src/Components/Login/Login.js":"5","/Users/danny/Documents/Projects/boogalu/src/Components/Footer/index.js":"6","/Users/danny/Documents/Projects/boogalu/src/Components/Navigation/index.js":"7","/Users/danny/Documents/Projects/boogalu/src/Components/Signup/index.js":"8","/Users/danny/Documents/Projects/boogalu/src/Components/Homepage/index.js":"9","/Users/danny/Documents/Projects/boogalu/src/Constants/index.js":"10","/Users/danny/Documents/Projects/boogalu/src/Actions/User/index.js":"11","/Users/danny/Documents/Projects/boogalu/src/Providers/StateProvider.js":"12","/Users/danny/Documents/Projects/boogalu/src/Reducers/index.js":"13","/Users/danny/Documents/Projects/boogalu/src/Components/Subscription/index.js":"14","/Users/danny/Documents/Projects/boogalu/src/Services/LocalstorageCache.js":"15","/Users/danny/Documents/Projects/boogalu/src/Hooks/useRedirection.js":"16","/Users/danny/Documents/Projects/boogalu/src/Hooks/UseRedirection.js":"17","/Users/danny/Documents/Projects/boogalu/src/Components/Splash/index.js":"18","/Users/danny/Documents/Projects/boogalu/src/Components/Lessons/index.js":"19","/Users/danny/Documents/Projects/boogalu/src/Components/Competitions/index.js":"20","/Users/danny/Documents/Projects/boogalu/src/Data/RegistrationStepData.js":"21","/Users/danny/Documents/Projects/boogalu/src/Hooks/useOnClickOutside.js":"22","/Users/danny/Documents/Projects/boogalu/src/Components/Profile/Profile.js":"23","/Users/danny/Documents/Projects/boogalu/src/Components/EditProfile/EditProfile.js":"24","/Users/danny/Documents/Projects/boogalu/src/Data/LessonsCategory.js":"25","/Users/danny/Documents/Projects/boogalu/src/Components/Vedio/Video.js":"26"},{"size":714,"mtime":1607871183480,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1607448783643,"results":"29","hashOfConfig":"28"},{"size":2350,"mtime":1608465373717,"results":"30","hashOfConfig":"28"},{"size":935,"mtime":1607461351542,"results":"31","hashOfConfig":"28"},{"size":11701,"mtime":1608471612102,"results":"32","hashOfConfig":"28"},{"size":1559,"mtime":1608223880972,"results":"33","hashOfConfig":"28"},{"size":4841,"mtime":1608493349700,"results":"34","hashOfConfig":"28"},{"size":28450,"mtime":1608472326928,"results":"35","hashOfConfig":"28"},{"size":4998,"mtime":1608466823717,"results":"36","hashOfConfig":"28"},{"size":122,"mtime":1607543025076,"results":"37","hashOfConfig":"28"},{"size":382,"mtime":1607543824191,"results":"38","hashOfConfig":"28"},{"size":946,"mtime":1608092665893,"results":"39","hashOfConfig":"28"},{"size":509,"mtime":1608067712619,"results":"40","hashOfConfig":"28"},{"size":1073,"mtime":1608367942957,"results":"41","hashOfConfig":"28"},{"size":244,"mtime":1608092665797,"results":"42","hashOfConfig":"28"},{"size":259,"mtime":1607962838146,"results":"43","hashOfConfig":"28"},{"size":250,"mtime":1607885484236,"results":"44","hashOfConfig":"28"},{"size":366,"mtime":1608223880973,"results":"45","hashOfConfig":"28"},{"size":7519,"mtime":1608590137699,"results":"46","hashOfConfig":"28"},{"size":3359,"mtime":1608367955420,"results":"47","hashOfConfig":"28"},{"size":7490,"mtime":1608453248853,"results":"48","hashOfConfig":"28"},{"size":1209,"mtime":1608457553046,"results":"49","hashOfConfig":"28"},{"size":9404,"mtime":1608467009397,"results":"50","hashOfConfig":"28"},{"size":14219,"mtime":1608465795934,"results":"51","hashOfConfig":"28"},{"size":11310,"mtime":1608493051510,"results":"52","hashOfConfig":"28"},{"size":634,"mtime":1608479294872,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1gp1tlp",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/Users/danny/Documents/Projects/boogalu/src/index.js",[],["116","117"],"/Users/danny/Documents/Projects/boogalu/src/reportWebVitals.js",[],"/Users/danny/Documents/Projects/boogalu/src/App.js",["118"],"import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"./App.css\"\nimport Login from \"./Components/Login/Login\";\nimport SplashScreen from './Components/Splash';\nimport Navigation from \"./Components/Navigation/index\";\nimport Homepage from \"./Components/Homepage\";\nimport Footer from \"./Components/Footer/index\";\nimport Signup from \"./Components/Signup\";\nimport Profile from \"./Components/Profile/Profile\";\nimport Lessons from \"./Components/Lessons\";\nimport Competitions from \"./Components/Competitions\";\nimport Subscription from \"./Components/Subscription\";\nimport EditProfile from \"./Components/EditProfile/EditProfile\";\n\nfunction App() {\n  const [isSplashVisible, toggleSplash] = useState(true);\n  const [transitionOpacityClass, toggleTransition] = useState('');\n\n  useEffect(() => {\n    setTimeout(() => {\n      toggleSplash(false);\n    }, 2500);\n\n    setTimeout(() => {\n      toggleTransition('visible-transition');\n    }, 2800);\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        {\n          isSplashVisible ?\n            <SplashScreen />\n            :\n            <div className={`main-content-wrapper ${transitionOpacityClass}`}>\n              <Navigation />\n              <Switch>\n                <Route exact path=\"/login\">\n                  <Login />\n                </Route>\n                <Route exact path=\"/profile/edit\">\n                  <EditProfile />\n                </Route>\n                <Route exact path=\"/register\">\n                  <Signup />\n                </Route>\n                <Route exact path=\"/lessons\">\n                  <Lessons />\n                </Route>\n                <Route exact path=\"/competitions\">\n                  <Competitions />\n                </Route>\n                <Route exact path=\"/subscription\">\n                  <Subscription />\n                </Route>\n                <Route exact path=\"/profile\">\n                  <Profile />\n                </Route>\n                <Route exact path=\"/home\">\n                  <Homepage />\n                </Route>\n                <Route exact path=\"/\">\n                  <Homepage />\n                </Route>\n              </Switch>\n              <Footer />\n            </div>\n        }\n      </div>\n    </Router>\n  );\n}\nexport default App;","/Users/danny/Documents/Projects/boogalu/src/Services/firebase.js",[],["119","120"],"/Users/danny/Documents/Projects/boogalu/src/Components/Login/Login.js",["121","122","123","124","125","126","127","128","129","130","131","132","133","134"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useStoreConsumer } from '../../Providers/StateProvider';\nimport { GoogleLogin } from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport ArrowRightSharpIcon from '@material-ui/icons/ArrowRightSharp';\nimport bgImg from '../../Images/bg1.svg';\nimport { loginUser, signupUser } from '../../Actions/User/index'\nimport './Login.css'\nimport * as $ from 'jquery';\n\nexport default function Login() {\n    const { state, dispatch } = useStoreConsumer();\n    const history = useHistory();\n    const [loginCred, setloginCred] = useState({ username: \"\", password: \"\", showPassWord: false })\n    const [LoginError, setLoginError] = useState(null);\n    const [thirdPartyResponse, setThirdPartyResponse] = useState({ isLogginSuccess: false, data: null, source: '' })\n\n    useEffect(() => {\n        if (thirdPartyResponse.source == 'Facebook') signinUser('', 'Facebook');\n        if (thirdPartyResponse.source == 'Google') signinUser('', 'Google');\n    }, [thirdPartyResponse]);\n\n    useEffect(() => {\n        $('html,body').animate({\n            scrollTop: 0\n        }, 500);\n    }, [])\n\n    const setLoginResponseToServer = () => {\n        // notify server that user is loggedin\n        console.log('Saved to db')\n\n    }\n    const successResponseGoogle = function (response) {\n        let loginResponse = {\n            data: {\n                name: response.profileObj.name,\n                email: response.profileObj.email,\n                token: response.googleId,\n                profileImage: response.profileObj.imageUrl,\n            },\n            source: 'Google'\n        }\n        setThirdPartyResponse(loginResponse);\n    }\n\n    const failureResponseGoogle = function (response) {\n        if (response.error != \"idpiframe_initialization_failed\") {\n            setLoginError('Sorry there was a problem with your google login request.')\n        }\n    }\n\n    const responseFacebook = (response) => {\n        console.log(response);\n        if (response && response.userID) {\n            let loginResponse = {\n                isLogginSuccess: true,\n                data: response,\n                source: 'Facebook'\n            }\n            setThirdPartyResponse(loginResponse);\n        } else {\n            setLoginError('Sorry there was a problem with your facebook login request.')\n            console.log(\"facebook login error\", response);\n        }\n    }\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const handleChange = (prop) => (event) => {\n        setLoginError(null);\n        setloginCred({ ...loginCred, [prop]: event.target.value });\n    };\n\n    const showPassword = () => {\n        setloginCred({ ...loginCred, showPassWord: (loginCred.showPassWord ? false : true) })\n    }\n\n    const getUserLoginData = (userData) => {\n        return new Promise((res, rej) => {\n            let registeredUser = localStorage.getItem('users') ? JSON.parse(localStorage.getItem('users')) : [];\n            if (registeredUser && registeredUser.length != 0) {\n                let isRegisteredUser = registeredUser.filter((user) => (user.username == userData.username || user.email == userData.email || user.phone == userData.phone || user.name == userData.name) && (thirdPartyResponse.data ? user.password == userData.password : true));\n                if (isRegisteredUser.length) {\n                    res(isRegisteredUser[0]);\n                } else {\n                    if (!thirdPartyResponse.source) {\n                        setLoginError('Please enter correct credentials.')\n                        rej();\n                    } else {\n                        setLoginError('Please enter correct credentials.')\n                        rej({ ...userData, isRegistered: false });\n                    }\n                }\n            } else {\n                rej({ ...userData, isRegistered: false });\n            }\n        })\n    }\n    const signinUser = (e, status) => {\n        setLoginError(null);\n        let userData = {};\n        switch (status) {\n            case 'cred':\n                setThirdPartyResponse({ isLogginSuccess: false, data: null, source: '' })\n                e.preventDefault();\n                e.stopPropagation();\n                userData = {\n                    ...loginCred,\n                    phone: loginCred.username,\n                    email: loginCred.username,\n                }\n                getUserLoginData(userData)\n                    .then((data) => {\n                        //user is registered\n                        //set to db \n                        setLoginResponseToServer();\n                        data.source = 'Website';\n                        dispatch(loginUser(data));\n                        history.push('/')\n                    })\n                    .catch((data) => {\n                        if (data) {\n                            //user not registered\n                            history.push({\n                                pathname: '/register',\n                                state: data\n                            })\n                        }\n                    })\n                break;\n            case 'Google': case 'Facebook':\n                userData = {\n                    name: thirdPartyResponse.data.name,\n                    email: thirdPartyResponse.data.email,\n                }\n                getUserLoginData(userData)\n                    .then((data) => {\n                        //user is registered\n                        //set to db \n                        setLoginResponseToServer();\n                        data.source = thirdPartyResponse.source;\n                        dispatch(loginUser(data));\n                        history.push('/')\n                    })\n                    .catch((data) => {\n                        if (data) {\n                            data.source = thirdPartyResponse.source;\n                            //user not registered\n                            history.push({\n                                pathname: '/register',\n                                state: data\n                            })\n                        }\n                    })\n                break;\n        }\n    }\n\n    return (\n        <div className=\"login-wrap clearfix\">\n            <form className=\"form-wrap clearfix\" onSubmit={(e) => signinUser(e, 'cred')}>\n                <div className=\"heading-outer\">\n                    <div className=\"heading1\">Welcome Back!</div>\n                    <div className=\"heading2\">Login to your existant account of Choreoculture.</div>\n                </div>\n                <div className=\"form-outer clearfix\">\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-username\"\n                            label=\"Username / Email / Phone\"\n                            onChange={handleChange('username')}\n                            value={loginCred.username}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl className=\"\" variant=\"outlined\" style={{ width: '100%' }}>\n                            <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n                            <OutlinedInput\n                                required\n                                id=\"outlined-adornment-password\"\n                                type={loginCred.showPassWord ? 'text' : 'password'}\n                                value={loginCred.password}\n                                onChange={handleChange('password')}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={showPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {loginCred.showPassWord ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                labelWidth={70}\n                            />\n                        </FormControl>\n                    </div>\n                    <div className=\"forgot-password clearfix\">\n                        <div>Forgot Password ?</div>\n                    </div>\n                    {LoginError && <div className=\"login-error\">\n                        {LoginError}\n                    </div>}\n                    <div className=\"submit-btn clearfix\">\n                        <Button variant=\"contained\" type=\"submit\" color=\"primary\">Sign In\n                         <ArrowRightSharpIcon />\n                        </Button>\n                    </div>\n                    <div className=\"or-seprator clearfix\">\n                        <span></span>\n                        <div>OR</div>\n                        <span></span>\n                    </div>\n                    <div className=\"login-with\">\n                        <div className=\"login-with-google\">\n                            <GoogleLogin\n                                className=\"google-login-btn\"\n                                clientId=\"417866547364-mesv7a9cn6bj4n3ge45s8b6hhl1vdam0.apps.googleusercontent.com\"\n                                buttonText=\"Login with Google\"\n                                onSuccess={successResponseGoogle}\n                                onFailure={failureResponseGoogle} >\n                            </GoogleLogin>\n                        </div>\n                        <div className=\"login-with-fb\">\n                            <div className=\"login-with-fb\">\n                                <FacebookLogin\n                                    appId=\"813330422546108\"\n                                    autoLoad={false}\n                                    fields=\"name,email,picture\"\n                                    callback={responseFacebook}\n                                    cssClass=\"facebook-login-btn\"\n                                    icon={<FacebookIcon />}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"already-login-wrap\">\n                        <div className=\"text-wrap\">New to Choreoculture?</div>\n                        <Button color=\"primary\" onClick={() => history.push('/register')}>SIGN UP</Button>\n                    </div>\n                </div>\n            </form>\n\n            <div className=\"img-wrap\">\n                <img src={bgImg} />\n            </div>\n        </div>\n    );\n}","/Users/danny/Documents/Projects/boogalu/src/Components/Footer/index.js",["135"],"import React from 'react';\nimport boogaluLogo from '../../Images/Boogalu-logo.svg';\nimport './footer.css';\n\nfunction Footer() {\n    return (\n        <div>\n            <footer className=\"flex-container-VC\">\n                <div className=\"flex-1 copyright-wrap\">\n                    <div><img src={boogaluLogo} alt=\"Logo\" className=\"image-7\" /></div>\n                    <div>&#169; 2021 &nbsp;  \n                        <a href=\"https://www.choreoculture.com/\" target=\"_blank\">\n                            CHOREOCULTURE STUDIO.\n                        </a>\n                    </div>\n                    <div>ALL RIGHTS RESERVED.</div>\n                </div>\n                <div className=\"flex-1\">\n                    <div className=\"footer-tagline\" >Get the latest dance content &amp; ChoreoCulture news</div>\n                    <div>\n                        <input type=\"email\" placeholder=\"Email\" />\n                    </div>\n                    <button className=\"subscribe\" >Subscribe</button>\n                </div>\n                <div className=\"flex-1\"></div>\n                <ul className=\"flex-1\">\n                    <li>Blog</li>\n                    <li>Careers</li>\n                    <li>Support</li>\n                    <li>Terms</li>\n                </ul>\n                <ul className=\"flex-1\">\n                    <li>Instagram</li>\n                    <li>Twitter</li>\n                    <li>Youtube</li>\n                    <li>Facebook</li>\n                </ul>\n            </footer>\n        </div>\n    )\n}\n\nexport default Footer\n","/Users/danny/Documents/Projects/boogalu/src/Components/Navigation/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/Signup/index.js",["136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useStoreConsumer } from '../../Providers/StateProvider';\nimport { signupUser } from '../../Actions/User';\nimport bgImg from '../../Images/bg1.svg';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport './signup.css';\nimport stepListData from '../../Data/RegistrationStepData'\nimport ArrowRightSharpIcon from '@material-ui/icons/ArrowRightSharp';\nimport * as $ from 'jquery';\n\nexport default function Signup() {\n    const { state, dispatch } = useStoreConsumer();\n    const history = useHistory();\n    let loggedInUser = state.loggedInUser;\n    // if user already login then redirect to home\n    if (loggedInUser.name && loggedInUser.phone && loggedInUser.email && loggedInUser.username) history.push({\n        pathname: '/',\n        state: null\n    })\n    // get data from history props if redirected through google or facebook login\n    if (history.location.state && (history.location.state.source == 'Facebook' || history.location.state.source == 'Google')) {\n        loggedInUser.email = history.location.state.email;\n        loggedInUser.name = history.location.state.name;\n        // setNeedToRegisterError('You are not registered yet, Please register with Choreoculture.')\n    }\n    const [userDetails, setUserDetails] = useState(loggedInUser);\n    const [SignUpError, setSignUpError] = useState(null);\n    const [showHidePassword, setShowHidePassword] = useState({ showPassword: false, showConfirmPassword: false });\n\n    const [activeStep, setActiveStep] = useState('stepOne');\n    const [showNextButton, setShowNextButton] = useState(false);\n    const [stepData, setStepListData] = useState(stepListData);\n    const [selectedOptionsList, setSelectedOptionsList] = useState([]);\n\n    const handleChange = (prop) => (event) => {\n        setUserDetails({ ...userDetails, [prop]: event.target.value });\n    };\n\n    const handleClickShowPassword = (prop) => {\n        setShowHidePassword({ ...showHidePassword, [prop]: !showHidePassword[prop] });\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    useEffect(() => {\n        $('html,body').animate({\n            scrollTop: 0\n        }, 500);\n    }, [])\n\n    useEffect(() => {\n        if (stepData[activeStep]) {\n            let isAnySelected = stepData[activeStep].filter((data) => data.isSelected);\n            if (isAnySelected.length != 0) setShowNextButton(true);\n            else setShowNextButton(false);\n            // set selected options\n            let selectedOptions = [];\n            Object.entries(stepData).map(([parentKey, parentValue]) => {\n                parentValue.map((parentValueItem) => {\n                    if (parentValueItem.isSelected) {\n                        let selectionObj = { value: [parentValueItem.title], key: parentKey, heading: parentValueItem.heading };\n                        if (selectedOptions.length != 0) {\n                            let isAvl = selectedOptions.filter((data) => data.key == parentKey);\n                            if (isAvl.length != 0) {\n                                selectedOptions.map((item) => {\n                                    if (item.key == parentKey) item.value.push(parentValueItem.title);\n                                })\n                            } else selectedOptions.push(selectionObj);\n                        } else selectedOptions.push(selectionObj);\n                    }\n                })\n            })\n            setSelectedOptionsList(selectedOptions);\n        }\n    }, [activeStep])\n\n    const registerUser = () => {\n        return new Promise((res, rej) => {\n            let registeredUser = localStorage.getItem('users') ? JSON.parse(localStorage.getItem('users')) : [];\n            registeredUser.push(userDetails);\n            localStorage.setItem('users', JSON.stringify(registeredUser))\n            res();\n        })\n    }\n\n    const checkForRepeatedEmailPhone = (param) => {\n        let registeredUser = localStorage.getItem('users') ? JSON.parse(localStorage.getItem('users')) : [];\n        if (registeredUser && registeredUser.length != 0) {\n            let isRegisteredUser = registeredUser.filter((user) => (user[param] == userDetails[param]));\n            if (isRegisteredUser.length) {\n                setSignUpError(param + ' already registered.');\n                return false;\n            } else {\n                return true;\n            }\n        } else {\n            return true;\n        }\n    }\n\n    const setSignupUserCred = (e) => {\n        if (userDetails.password != userDetails.confirmPassword) {\n            setSignUpError('Password dose not match.');\n            return;\n        }\n\n        if (checkForRepeatedEmailPhone('email') && checkForRepeatedEmailPhone('phone')) {\n            registerUser()\n                .then(() => {\n                    dispatch(signupUser(userDetails));\n                    history.push(({\n                        pathname: '/',\n                        state: null\n                    }));\n                })\n                .catch((error) => {\n                    // error in user registration\n                    if (error) {\n\n                    }\n                })\n        }\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    const setNextStep = () => {\n        switch (activeStep) {\n            case 'stepOne': setActiveStep('stepTwo'); break;\n            case 'stepTwo': setActiveStep('stepThree'); break;\n            case 'stepThree': setActiveStep('stepFour'); break;\n            case 'stepFour': setActiveStep('stepFive'); break;\n            case 'stepFive': setActiveStep(6); break;\n        }\n    }\n\n    const setPrevStep = () => {\n        switch (activeStep) {\n            case 'stepTwo': setActiveStep('stepOne'); break;\n            case 'stepThree': setActiveStep('stepTwo'); break;\n            case 'stepFour': setActiveStep('stepThree'); break;\n            case 'stepFive': setActiveStep('stepFour'); break;\n            case 6: setActiveStep('stepFive'); break;\n        }\n    }\n\n    const setStepListItemData = (e, activeItem, status) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const stepDataList = Object.assign({}, stepData);\n        stepDataList[activeStep].map((item) => {\n            if (item.title == activeItem.title) {\n                item.isSelected = item.isSelected ? false : true;\n            } else {\n                if (status != 'multi-select') {\n                    item.isSelected = false;\n                }\n            }\n        })\n        // set selected options\n        let selectedOptions = [];\n        Object.entries(stepDataList).map(([parentKey, parentValue]) => {\n            parentValue.map((parentValueItem) => {\n                if (parentValueItem.isSelected) {\n                    let selectionObj = { value: [parentValueItem.title], key: parentKey, heading: parentValueItem.heading };\n                    if (selectedOptions.length != 0) {\n                        let isAvl = selectedOptions.filter((data) => data.key == parentKey);\n                        if (isAvl.length != 0) {\n                            selectedOptions.map((item) => {\n                                if (item.key == parentKey) item.value.push(parentValueItem.title);\n                            })\n                        } else selectedOptions.push(selectionObj);\n                    } else selectedOptions.push(selectionObj);\n                }\n            })\n        })\n        setSelectedOptionsList(selectedOptions);\n        let isAnySelected = stepDataList[activeStep].filter((data) => data.isSelected);\n        if (isAnySelected.length != 0) setShowNextButton(true);\n        else setShowNextButton(false);\n        setStepListData(stepDataList);\n    }\n\n    return (\n        <div className=\"logout-wrap clearfix\">\n            {activeStep != 6 && <div className=\"step-wrap\">\n                <div className=\"heading1\">Let's Get Started!</div>\n                {activeStep == 'stepOne' && <>\n                    <div className=\"list-content\">\n                        <div className=\"list-heading-wrap\">\n                            <div className=\"heading2\">What’s your experience with dancing?</div>\n                            <div className=\"heading3\">Select One Option</div>\n                        </div>\n                        <div className=\"list\">\n                            {stepData.stepOne.map((item, i) => {\n                                return (\n                                    <div key={i} className={item.isSelected ? 'list-item selected-item' : 'list-item'} onClick={(e) => setStepListItemData(e, item)}>\n                                        <div className=\"title\">{item.title}</div>\n                                        <div className=\"desc\">{item.desc}</div>\n                                        <Checkbox\n                                            required\n                                            color=\"primary\"\n                                            className=\"selected-item-checkbox\"\n                                            checked={item.isSelected}\n                                            onChange={(e) => setStepListItemData(e, item)}\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                        />\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </>}\n                {activeStep == 'stepTwo' && <>\n                    <div className=\"list-content\">\n                        <div className=\"list-heading-wrap\">\n                            <div className=\"heading2\">What is your first goal that you want to work on?</div>\n                            <div className=\"heading3\">Select One Option</div>\n                        </div>\n                        <div className=\"list\">\n                            {stepData.stepTwo.map((item, i) => {\n                                return (\n                                    <div key={i} className={item.isSelected ? 'list-item selected-item' : 'list-item'} onClick={(e) => setStepListItemData(e, item)}>\n                                        <div className=\"title\">{item.title}</div>\n                                        <div className=\"desc\">{item.desc}</div>\n                                        <Checkbox\n                                            required\n                                            color=\"primary\"\n                                            className=\"selected-item-checkbox\"\n                                            checked={item.isSelected}\n                                            onChange={(e) => setStepListItemData(e, item)}\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                        />\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </>}\n                {activeStep == 'stepThree' && <>\n                    <div className=\"list-content\">\n                        <div className=\"list-heading-wrap\">\n                            <div className=\"heading2\">What are you interested in?</div>\n                            <div className=\"heading3\">Select all that apply</div>\n                        </div>\n                        <div className=\"list\">\n                            {stepData.stepThree.map((item, i) => {\n                                return (\n                                    <div key={i} className={item.isSelected ? 'list-item selected-item' : 'list-item'} onClick={(e) => setStepListItemData(e, item, 'multi-select')}>\n                                        <div className=\"title\">{item.title}</div>\n                                        <div className=\"desc\" style={{ paddingRight: '25px' }}>{item.desc}</div>\n                                        <Checkbox\n                                            required\n                                            color=\"primary\"\n                                            className=\"selected-item-checkbox\"\n                                            checked={item.isSelected}\n                                            onChange={(e) => setStepListItemData(e, item, 'multi-select')}\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                        />\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </>}\n                {activeStep == 'stepFour' && <>\n                    <div className=\"list-content\">\n                        <div className=\"list-heading-wrap\">\n                            <div className=\"heading2\">How long would you like your dance sessions to be?</div>\n                            <div className=\"heading3\">Select One Option</div>\n                        </div>\n                        <div className=\"list\">\n                            {stepData.stepFour.map((item, i) => {\n                                return (\n                                    <div key={i} className={item.isSelected ? 'list-item selected-item' : 'list-item'} onClick={(e) => setStepListItemData(e, item)}>\n                                        <div className=\"title\">{item.title}</div>\n                                        <div className=\"desc\">{item.desc}</div>\n                                        <Checkbox\n                                            required\n                                            color=\"primary\"\n                                            className=\"selected-item-checkbox\"\n                                            checked={item.isSelected}\n                                            onChange={(e) => setStepListItemData(e, item)}\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                        />\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </>}\n                {activeStep == 'stepFive' && <>\n                    <div className=\"list-content\">\n                        <div className=\"list-heading-wrap\">\n                            <div style={{ paddingBottom: 0 }} className=\"heading2\">Your Personal Schedule & Recommendations</div>\n                        </div>\n                        <div className=\"list\">\n                            {selectedOptionsList.map((item, i) => {\n                                return (\n                                    <div key={i} className=\"list-item selected-item\" onClick={() => setActiveStep(item.key)}>\n                                        <div className=\"title\">{item.heading}</div>\n                                        <div className=\"desc\">\n                                            {item.value.length == 1 &&\n                                                item.value.map((listValue, j) => {\n                                                    return <span key={j}>{listValue} </span>\n                                                })\n                                            }\n                                            {item.value.length != 1 &&\n                                                item.value.map((listValue, j) => {\n                                                    return <span key={j}>{listValue}, </span>\n                                                })\n                                            }\n\n                                        </div>\n                                        {/* <Checkbox\n                                            required\n                                            color=\"primary\"\n                                            className=\"selected-item-checkbox\"\n                                            checked={true}\n                                            disabled={true}\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                        /> */}\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </>}\n                {activeStep != 6 && <div className=\"step-already-login-wrap clearfix\">\n                    <div className=\"text-wrap\">Already have an account?</div>\n                    <Button color=\"primary\" onClick={() => history.push({\n                        pathname: '/login',\n                        state: null\n                    })}>SIGN IN</Button>\n                    {showNextButton && <Button color=\"primary\" variant=\"contained\" className=\"next-btn\" onClick={() => setNextStep()}>Next</Button>}\n                    {activeStep != 'stepOne' && <Button style={{ marginRight: '25px' }} color=\"primary\" variant=\"contained\" className=\"next-btn\" onClick={() => setPrevStep()}>Prev</Button>}\n                </div>}\n            </div>}\n            {activeStep == 6 && <form className=\"form-wrap clearfix\" onSubmit={setSignupUserCred}>\n                <div className=\"heading-outer\">\n                    <div className=\"heading1\">Let's Get Started!</div>\n                    <div className=\"heading2\">Create an account to Choreoculture to get all features.</div>\n                </div>\n                {/* {NeedToRegisterError && <div className=\"login-error\">\n                    {NeedToRegisterError}\n                </div>} */}\n                <div className=\"form-outer clearfix\">\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-Name\"\n                            label=\"Name\"\n                            onChange={handleChange('name')}\n                            value={userDetails.name}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-Username\"\n                            label=\"Username\"\n                            onChange={handleChange('username')}\n                            value={userDetails.username}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            type=\"tel\"\n                            id=\"outlined-required-phone\"\n                            label=\"Phone\"\n                            onChange={handleChange('phone')}\n                            value={userDetails.phone}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-email\"\n                            label=\"Email\"\n                            type=\"email\"\n                            onChange={handleChange('email')}\n                            value={userDetails.email}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-country\"\n                            label=\"Country\"\n                            onChange={handleChange('country')}\n                            value={userDetails.country}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-state\"\n                            label=\"State\"\n                            onChange={handleChange('state')}\n                            value={userDetails.state}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl className=\"\" variant=\"outlined\" style={{ width: '100%' }}>\n                            <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n                            <OutlinedInput\n                                required\n                                id=\"outlined-adornment-password\"\n                                type={showHidePassword.showPassword ? 'text' : 'password'}\n                                value={userDetails.password}\n                                onChange={handleChange('password')}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={() => handleClickShowPassword('showPassword')}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showHidePassword.showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                labelWidth={70}\n                            />\n                        </FormControl>\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl className=\"\" variant=\"outlined\" style={{ width: '100%' }}>\n                            <InputLabel htmlFor=\"outlined-adornment-confirm-password\">Confirm Password</InputLabel>\n                            <OutlinedInput\n                                required\n                                id=\"outlined-adornment-confirm-password\"\n                                type={showHidePassword.showConfirmPassword ? 'text' : 'password'}\n                                value={userDetails.confirmPassword}\n                                onChange={handleChange('confirmPassword')}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle confirm password visibility\"\n                                            onClick={() => handleClickShowPassword('showConfirmPassword')}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showHidePassword.showConfirmPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                labelWidth={70}\n                            />\n                        </FormControl>\n                    </div>\n                    <div className=\"input-wrap\">\n                        <div className=\"dob-wrap\">\n                            <TextField className=\"input-field\"\n                                id=\"date\"\n                                label=\"Birthday\"\n                                type=\"date\"\n                                style={{ width: '100%' }}\n                                onChange={handleChange('dob')}\n                                value={userDetails.dob}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl variant=\"outlined\" className=\"input-field\">\n                            <InputLabel id=\"select-outlined-label\">Gender</InputLabel>\n                            <Select\n                                labelId=\"select-outlined-label\"\n                                id=\"select-outlined\"\n                                value={userDetails.gender}\n                                onChange={handleChange('gender')}\n                                label=\"Gender\"\n                            >\n                                <MenuItem value=\"Male\">Male</MenuItem>\n                                <MenuItem value=\"Female\">Female</MenuItem>\n                                <MenuItem value=\"Other\">Other</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div className=\"input-wrap\" style={{ width: '93%' }}>\n                        <TextField className=\"input-field bio-input\"\n                            id=\"outlined-required-bio\"\n                            label=\"Bio\"\n                            value={userDetails.bio}\n                            onChange={handleChange('bio')}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"tnc-wrap\">\n                        <div className=\"tnc-content clearfix\">\n                            <div className=\"checkbox-wrap\">\n                                <Checkbox\n                                    required\n                                    color=\"primary\"\n                                    checked={userDetails.tnc}\n                                    onChange={(e) => setUserDetails({ ...userDetails, tnc: e.target.checked })}\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                />\n                            </div>\n                            <div className=\"note-wrap\">Yes, I agree to the terms and conditions </div>\n                        </div>\n                    </div>\n                    {SignUpError && <div className=\"login-error\">\n                        {SignUpError}\n                    </div>}\n                    <div className=\"submit-btn clearfix\">\n                        <Button variant=\"contained\" type=\"submit\" color=\"primary\" >Sign Up\n                         <ArrowRightSharpIcon />\n                        </Button>\n                        {activeStep != 'stepOne' && <Button style={{ marginRight: '25px' }} color=\"primary\" variant=\"contained\" className=\"next-btn\" onClick={() => setPrevStep()}>Prev</Button>}\n                    </div>\n                    <div className=\"already-login-wrap\">\n                        <div className=\"text-wrap\">Already have an account?</div>\n                        <Button color=\"primary\" onClick={() => history.push({\n                            pathname: '/login',\n                            state: null\n                        })}>SIGN IN</Button>\n                    </div>\n                </div>\n            </form>}\n\n            <div className=\"img-wrap\">\n                <img src={bgImg} alt=\"bg1\" />\n            </div>\n        </div>\n    );\n}","/Users/danny/Documents/Projects/boogalu/src/Components/Homepage/index.js",["175"],"import React from \"react\";\nimport \"./Homepage.css\";\nimport { useStoreConsumer } from '../../Providers/StateProvider';\nimport bgImg from '../../Images/home_bg.png';\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Homepage() {\n    const history = useHistory();\n    const { state, dispatch } = useStoreConsumer();\n    let loggedInUser = state.loggedInUser;\n    return (\n        <div className=\"homepage clearfix\">\n            <div className=\"homepage-wrap clearfix\">\n                <div className=\"banner_vdo\">\n                    <div className=\"vdo_wrap\">\n                        <iframe style={{ height: '200px', width: '85%' }} className=\"iframe\" src=\"//www.youtube.com/embed/i3yMXpeLPuU?wmode=transparent&amp;autoplay=0&amp;theme=dark&amp;controls=0&amp;autohide=0&amp;loop=0&amp;showinfo=0&amp;rel=0&amp;playlist=false&amp;enablejsapi=0\" scrolling=\"no\" title=\"Vimeo embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"false\">\n                        </iframe>\n                    </div>\n                    <div className=\"vdo_wrap\">\n                        <iframe style={{ height: '200px', width: '85%' }} className=\"iframe\" src=\"https://www.youtube.com/embed/dM1ghaspLyc?wmode=transparent&autoplay=0&theme=dark&controls=0&autohide=0&loop=0&showinfo=0&rel=0&playlist=false&enablejsapi=0\" scrolling=\"no\" title=\"Vimeo embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"false\">\n                        </iframe>\n                    </div>\n                    <div className=\"vdo_wrap\">\n                        <iframe style={{ height: '200px', width: '85%' }} className=\"iframe\" src=\"https://www.youtube.com/embed/U7NaFiqSeVE?wmode=transparent&autoplay=0&theme=dark&controls=1&autohide=0&loop=0&showinfo=0&rel=0&playlist=false&enablejsapi=0\" scrolling=\"no\" title=\"Vimeo embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"false\">\n                        </iframe>\n                    </div>\n                </div>\n                <div className=\"banner_img\">\n                    <h1>Dance Classes for Everyone</h1>\n                    <div className=\"get-started-wrap\">\n                        <h4>The world’s best dance learning tools – at your fingertips. Start free for 7 days.</h4>\n                        <button className=\"get_started\" onClick={() => {\n                            loggedInUser ? history.push('/lessons') : history.push('/login');\n                        }}>Get Started</button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"home-img-wrap\">\n                <img src={bgImg} alt=\"\" />\n            </div>\n            <div className=\"homepage-display-1\">\n                <div className=\"learn_choreo\" id=\"Lessons\">\n                    <div className=\"heading-wrap\">\n                        <h1>\n                            Learn Choreography To <br /> Your Favorite Songs\n                </h1>\n                        <div className=\"line1\">Dance to the music that makes YOU want to move at any skill level.</div>\n                    </div>\n                    <div className=\"flex-container vdo-wrap\" >\n                        <div className=\"flex-basis-3\">\n                            <iframe className=\"iframe\" src=\"//www.youtube.com/embed/i3yMXpeLPuU?wmode=transparent&amp;autoplay=0&amp;theme=dark&amp;controls=0&amp;autohide=0&amp;loop=0&amp;showinfo=0&amp;rel=0&amp;playlist=false&amp;enablejsapi=0\" scrolling=\"no\" title=\"Vimeo embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"false\">\n                            </iframe>\n                        </div>\n                        <div className=\"flex-basis-3\">\n                            <iframe className=\"iframe\" src=\"//cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fplayer.vimeo.com%2Fvideo%2F453549133%3Fapp_id%3D122963&amp;dntp=1&amp;display_name=Vimeo&amp;url=https%3A%2F%2Fvimeo.com%2F453549133%3Flazy%3D1&amp;image=https%3A%2F%2Fi.vimeocdn.com%2Fvideo%2F951136340_1280.jpg&amp;key=96f1f04c5f4143bcb0f2e68c87d65feb&amp;type=text%2Fhtml&amp;schema=vimeo\" scrolling=\"no\" title=\"Vimeo embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"false\">\n                            </iframe>\n                        </div>\n                        <div className=\"flex-basis-3\">\n                            <iframe className=\"iframe\" src=\"//cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fplayer.vimeo.com%2Fvideo%2F453549133%3Fapp_id%3D122963&amp;dntp=1&amp;display_name=Vimeo&amp;url=https%3A%2F%2Fvimeo.com%2F453549133%3Flazy%3D1&amp;image=https%3A%2F%2Fi.vimeocdn.com%2Fvideo%2F951136340_1280.jpg&amp;key=96f1f04c5f4143bcb0f2e68c87d65feb&amp;type=text%2Fhtml&amp;schema=vimeo\" scrolling=\"no\" title=\"Vimeo embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"false\">\n                            </iframe>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","/Users/danny/Documents/Projects/boogalu/src/Constants/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Actions/User/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Providers/StateProvider.js",[],"/Users/danny/Documents/Projects/boogalu/src/Reducers/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/Subscription/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Services/LocalstorageCache.js",[],"/Users/danny/Documents/Projects/boogalu/src/Hooks/useRedirection.js",[],["176","177"],"/Users/danny/Documents/Projects/boogalu/src/Hooks/UseRedirection.js",["178","179"],"/Users/danny/Documents/Projects/boogalu/src/Components/Splash/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/Lessons/index.js",["180","181","182","183"],"/Users/danny/Documents/Projects/boogalu/src/Components/Competitions/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Data/RegistrationStepData.js",[],"/Users/danny/Documents/Projects/boogalu/src/Hooks/useOnClickOutside.js",["184","185","186"],"/Users/danny/Documents/Projects/boogalu/src/Components/Profile/Profile.js",["187","188","189","190","191","192","193","194","195","196","197"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport { useStoreConsumer } from '../../Providers/StateProvider';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport LoyaltyOutlinedIcon from '@material-ui/icons/LoyaltyOutlined';\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport CollectionsOutlinedIcon from '@material-ui/icons/CollectionsOutlined';\nimport './Profile.css';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport SwipeableViews from 'react-swipeable-views';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport * as $ from 'jquery';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n}));\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\nfunction Profile() {\n    const classes = useStyles();\n    const history = useHistory();\n    const theme = useTheme();\n    const { state, dispatch } = useStoreConsumer();\n    const [value, setValue] = useState(0);\n    const userDetails = state.loggedInUser;\n\n    useEffect(() => {\n        $('html,body').animate({\n            scrollTop: 0\n        }, 500);\n    }, [])\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = (index) => {\n        setValue(index);\n    };\n\n    return (\n        <div className=\"profile-outer\">\n            <div className=\"profile-details-wrap clearfix\">\n                <div className=\"profile-img\">\n                    <AccountCircleOutlinedIcon />\n                </div>\n                <div className=\"profile-details clearfix\">\n                    <div className=\"username-wrap clearfix\">\n                        <div className=\"username\">\n                            {userDetails.username}\n                        </div>\n                        <div className=\"edit-profile\" onClick={() => history.push('/profile/edit')}>\n                            Edit Profile\n                        </div>\n                    </div>\n                    <div className=\"followers-wrap clearfix\">\n                        <div className=\"posts\">\n                            <span>999</span> Posts\n                        </div>\n                        <div className=\"followers\">\n                            <span>999</span> Followers\n                        </div>\n                        <div className=\"following\">\n                            <span>999</span> Followings\n                        </div>\n                    </div>\n                    <div className=\"bio-wrap\">\n                        <div className=\"fullname\">\n                            {userDetails.name}\n                        </div>\n                        {userDetails.bio ? <div className=\"bio\">\n                            {userDetails.bio}\n                        </div> : <div className=\"bio\">\n                                Older dancers (especially from the SoCal dance community) – even if you can appreciate and welcome the ways dance has evolved, you’ll still feel pangs of nostalgia when going through this list.\n                        </div>}\n                    </div>\n                </div>\n            </div>\n            <div className=\"profile-content-wrap\">\n                <div className=\"headers-wrap\">\n                    <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                        aria-label=\"full width tabs example\"\n                    >\n                        <Tab label=\"Posts\" icon={<CollectionsOutlinedIcon />} {...a11yProps(0)} />\n                        <Tab label=\"Liked\" icon={<FavoriteBorderOutlinedIcon />}{...a11yProps(1)} />\n                        <Tab label=\"Tagged\" icon={<LoyaltyOutlinedIcon />} {...a11yProps(2)} />\n                    </Tabs>\n                    <SwipeableViews\n                        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                        index={value}\n                        onChangeIndex={handleChangeIndex}>\n                        <TabPanel value={value} index={0} dir={theme.direction}>\n                            <div className=\"flex-container\" >\n                                <div className=\"flex-basis-3\" style={{ marginRight: '30px' }}>\n                                    <iframe width=\"281\" height=\"247\" src=\"https://www.youtube.com/embed/p0evLf_humQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                                </div>\n                                <div className=\"flex-basis-3\" style={{ marginRight: '30px' }}>\n                                    <iframe width=\"286\" height=\"251\" src=\"https://www.youtube.com/embed/3nFAkBYrrJw\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                                </div>\n                                <div className=\"flex-basis-3\" style={{ marginRight: '30px' }}>\n                                    <iframe width=\"286\" height=\"251\" src=\"https://www.youtube.com/embed/f9dBgfEoqD4\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                                </div>\n                            </div>\n                        </TabPanel>\n                        <TabPanel value={value} index={1} dir={theme.direction}>\n                            <div className=\"flex-container\" >\n                                <div className=\"flex-basis-3\" style={{ marginRight: '30px' }}>\n                                    <iframe width=\"281\" height=\"247\" src=\"https://www.youtube.com/embed/p0evLf_humQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                                </div>\n                                <div className=\"flex-basis-3\" style={{ marginRight: '30px' }}>\n                                    <iframe width=\"286\" height=\"251\" src=\"https://www.youtube.com/embed/3nFAkBYrrJw\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                                </div>\n                                <div className=\"flex-basis-3\" style={{ marginRight: '30px' }}>\n                                    <iframe width=\"286\" height=\"251\" src=\"https://www.youtube.com/embed/f9dBgfEoqD4\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                                </div>\n                            </div>\n                        </TabPanel>\n                        <TabPanel value={value} index={2} dir={theme.direction}>\n                            <div className=\"flex-container\" >\n                                <div className=\"flex-basis-3\" style={{ marginRight: '30px' }}>\n                                    <iframe width=\"281\" height=\"247\" src=\"https://www.youtube.com/embed/p0evLf_humQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                                </div>\n                                <div className=\"flex-basis-3\" style={{ marginRight: '30px' }}>\n                                    <iframe width=\"286\" height=\"251\" src=\"https://www.youtube.com/embed/3nFAkBYrrJw\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                                </div>\n                                <div className=\"flex-basis-3\" style={{ marginRight: '30px' }}>\n                                    <iframe width=\"286\" height=\"251\" src=\"https://www.youtube.com/embed/f9dBgfEoqD4\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                                </div>\n                            </div>\n                        </TabPanel>\n                    </SwipeableViews>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Profile\n","/Users/danny/Documents/Projects/boogalu/src/Components/EditProfile/EditProfile.js",["198","199","200","201","202","203"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useStoreConsumer } from '../../Providers/StateProvider';\nimport { signupUser } from '../../Actions/User';\nimport bgImg from '../../Images/bg1.svg';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport '../Signup/signup.css';\nimport ArrowRightSharpIcon from '@material-ui/icons/ArrowRightSharp';\nimport * as $ from 'jquery';\n\nexport default function EditProfile() {\n    const { state, dispatch } = useStoreConsumer();\n    const history = useHistory();\n    let loggedInUser = state.loggedInUser;\n    // if user already login then redirect to home\n    // if (loggedInUser.name && loggedInUser.phone && loggedInUser.email && loggedInUser.username) history.push({\n    //     pathname: '/',\n    //     state: null\n    // })\n    // get data from history props if redirected through google or facebook login\n    if (history.location.state && (history.location.state.source == 'Facebook' || history.location.state.source == 'Google')) {\n        loggedInUser.email = history.location.state.email;\n        loggedInUser.name = history.location.state.name;\n        // setNeedToRegisterError('You are not registered yet, Please register with Choreoculture.')\n    }\n    const [userDetails, setUserDetails] = useState(loggedInUser);\n    const [SignUpError, setSignUpError] = useState(null);\n    const [showHidePassword, setShowHidePassword] = useState({ showPassword: false, showConfirmPassword: false });\n\n    const handleChange = (prop) => (event) => {\n        setUserDetails({ ...userDetails, [prop]: event.target.value });\n        console.log(userDetails)\n    };\n\n    const handleClickShowPassword = (prop) => {\n        setShowHidePassword({ ...showHidePassword, [prop]: !showHidePassword[prop] });\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    useEffect(() => {\n        $('html,body').animate({\n            scrollTop: 0\n        }, 500);\n    }, [])\n\n    const registerUser = () => {\n        return new Promise((res, rej) => {\n            let registeredUser = localStorage.getItem('users') ? JSON.parse(localStorage.getItem('users')) : [];\n            registeredUser.push(userDetails);\n            localStorage.setItem('users', JSON.stringify(registeredUser))\n            res();\n        })\n    }\n\n    const checkForRepeatedEmailPhone = (param) => {\n        if (loggedInUser[param] != userDetails[param]) {\n            let registeredUser = localStorage.getItem('users') ? JSON.parse(localStorage.getItem('users')) : [];\n            if (registeredUser && registeredUser.length != 0) {\n                let isRegisteredUser = registeredUser.filter((user) => (user[param] == userDetails[param]));\n                if (isRegisteredUser.length) {\n                    setSignUpError(param + ' already registered.');\n                    return false;\n                } else {\n                    return true;\n                }\n            } else {\n                return true;\n            }\n        } else return true;\n    }\n\n    const setSignupUserCred = (e) => {\n        if (userDetails.password != userDetails.confirmPassword) {\n            setSignUpError('Password dose not match.');\n            return;\n        }\n\n        if (checkForRepeatedEmailPhone('email') && checkForRepeatedEmailPhone('phone')) {\n            registerUser()\n                .then(() => {\n                    dispatch(signupUser(userDetails));\n                    history.push(({\n                        pathname: '/profile',\n                        state: null\n                    }));\n                })\n                .catch((error) => {\n                    // error in user registration\n                    if (error) {\n\n                    }\n                })\n        }\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    return (\n        <div className=\"logout-wrap clearfix\">\n            <form className=\"form-wrap clearfix\" onSubmit={setSignupUserCred}>\n                <div className=\"heading-outer\">\n                    <div className=\"heading1\">Update Profile</div>\n                </div>\n                <div className=\"form-outer clearfix\">\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-Name\"\n                            label=\"Name\"\n                            onChange={handleChange('name')}\n                            value={userDetails.name}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-Username\"\n                            label=\"Username\"\n                            onChange={handleChange('username')}\n                            value={userDetails.username}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            type=\"tel\"\n                            id=\"outlined-required-phone\"\n                            label=\"Phone\"\n                            onChange={handleChange('phone')}\n                            value={userDetails.phone}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-email\"\n                            label=\"Email\"\n                            type=\"email\"\n                            onChange={handleChange('email')}\n                            value={userDetails.email}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-country\"\n                            label=\"Country\"\n                            onChange={handleChange('country')}\n                            value={userDetails.country}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-state\"\n                            label=\"State\"\n                            onChange={handleChange('state')}\n                            value={userDetails.state}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl className=\"\" variant=\"outlined\" style={{ width: '100%' }}>\n                            <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n                            <OutlinedInput\n                                required\n                                id=\"outlined-adornment-password\"\n                                type={showHidePassword.showPassword ? 'text' : 'password'}\n                                value={userDetails.password}\n                                onChange={handleChange('password')}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={() => handleClickShowPassword('showPassword')}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showHidePassword.showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                labelWidth={70}\n                            />\n                        </FormControl>\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl className=\"\" variant=\"outlined\" style={{ width: '100%' }}>\n                            <InputLabel htmlFor=\"outlined-adornment-confirm-password\">Confirm Password</InputLabel>\n                            <OutlinedInput\n                                required\n                                id=\"outlined-adornment-confirm-password\"\n                                type={showHidePassword.showConfirmPassword ? 'text' : 'password'}\n                                value={userDetails.confirmPassword}\n                                onChange={handleChange('confirmPassword')}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle confirm password visibility\"\n                                            onClick={() => handleClickShowPassword('showConfirmPassword')}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showHidePassword.showConfirmPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                labelWidth={70}\n                            />\n                        </FormControl>\n                    </div>\n                    <div className=\"input-wrap\">\n                        <div className=\"dob-wrap\">\n                            <TextField className=\"input-field\"\n                                id=\"date\"\n                                label=\"Birthday\"\n                                type=\"date\"\n                                style={{ width: '100%' }}\n                                onChange={handleChange('dob')}\n                                value={userDetails.dob}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl variant=\"outlined\" className=\"input-field\">\n                            <InputLabel id=\"select-outlined-label\">Gender</InputLabel>\n                            <Select\n                                labelId=\"select-outlined-label\"\n                                id=\"select-outlined\"\n                                value={userDetails.gender}\n                                onChange={handleChange('gender')}\n                                label=\"Gender\"\n                            >\n                                <MenuItem value=\"Male\">Male</MenuItem>\n                                <MenuItem value=\"Female\">Female</MenuItem>\n                                <MenuItem value=\"Other\">Other</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div className=\"input-wrap\" style={{ width: '93%' }}>\n                        <TextField className=\"input-field bio-input\"\n                            id=\"outlined-required-bio\"\n                            label=\"Bio\"\n                            value={userDetails.bio}\n                            onChange={handleChange('bio')}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"tnc-wrap\">\n                        <div className=\"tnc-content clearfix\">\n                            <div className=\"checkbox-wrap\">\n                                <Checkbox\n                                    required\n                                    color=\"primary\"\n                                    checked={userDetails.tnc}\n                                    onChange={(e) => setUserDetails({ ...userDetails, tnc: e.target.checked })}\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                />\n                            </div>\n                            <div className=\"note-wrap\">Yes, I agree to the terms and conditions </div>\n                        </div>\n                    </div>\n                    {SignUpError && <div className=\"login-error\">\n                        {SignUpError}\n                    </div>}\n                    <div className=\"submit-btn clearfix\">\n                        <Button variant=\"contained\" type=\"submit\" color=\"primary\" >Update\n                         <ArrowRightSharpIcon />\n                        </Button>\n                    </div>\n                </div>\n            </form>\n            <div className=\"img-wrap\">\n                <img src={bgImg} alt=\"bg1\" />\n            </div>\n        </div>\n    );\n}","/Users/danny/Documents/Projects/boogalu/src/Data/LessonsCategory.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/Vedio/Video.js",[],{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"209","line":2,"column":50,"nodeType":"210","messageId":"211","endLine":2,"endColumn":54},{"ruleId":"204","replacedBy":"212"},{"ruleId":"206","replacedBy":"213"},{"ruleId":"208","severity":1,"message":"214","line":18,"column":21,"nodeType":"210","messageId":"211","endLine":18,"endColumn":31},{"ruleId":"208","severity":1,"message":"215","line":23,"column":13,"nodeType":"210","messageId":"211","endLine":23,"endColumn":18},{"ruleId":"216","severity":1,"message":"217","line":30,"column":39,"nodeType":"218","messageId":"219","endLine":30,"endColumn":41},{"ruleId":"216","severity":1,"message":"217","line":31,"column":39,"nodeType":"218","messageId":"219","endLine":31,"endColumn":41},{"ruleId":"220","severity":1,"message":"221","line":32,"column":8,"nodeType":"222","endLine":32,"endColumn":28,"suggestions":"223"},{"ruleId":"216","severity":1,"message":"224","line":59,"column":28,"nodeType":"218","messageId":"219","endLine":59,"endColumn":30},{"ruleId":"216","severity":1,"message":"224","line":95,"column":57,"nodeType":"218","messageId":"219","endLine":95,"endColumn":59},{"ruleId":"216","severity":1,"message":"217","line":96,"column":87,"nodeType":"218","messageId":"219","endLine":96,"endColumn":89},{"ruleId":"216","severity":1,"message":"217","line":96,"column":122,"nodeType":"218","messageId":"219","endLine":96,"endColumn":124},{"ruleId":"216","severity":1,"message":"217","line":96,"column":154,"nodeType":"218","messageId":"219","endLine":96,"endColumn":156},{"ruleId":"216","severity":1,"message":"217","line":96,"column":185,"nodeType":"218","messageId":"219","endLine":96,"endColumn":187},{"ruleId":"216","severity":1,"message":"217","line":96,"column":247,"nodeType":"218","messageId":"219","endLine":96,"endColumn":249},{"ruleId":"225","severity":1,"message":"226","line":116,"column":9,"nodeType":"227","messageId":"228","endLine":170,"endColumn":10},{"ruleId":"229","severity":1,"message":"230","line":263,"column":17,"nodeType":"231","endLine":263,"endColumn":36},{"ruleId":"232","severity":1,"message":"233","line":12,"column":66,"nodeType":"234","endLine":12,"endColumn":81},{"ruleId":"216","severity":1,"message":"217","line":33,"column":66,"nodeType":"218","messageId":"219","endLine":33,"endColumn":68},{"ruleId":"216","severity":1,"message":"217","line":33,"column":113,"nodeType":"218","messageId":"219","endLine":33,"endColumn":115},{"ruleId":"216","severity":1,"message":"224","line":68,"column":38,"nodeType":"218","messageId":"219","endLine":68,"endColumn":40},{"ruleId":"235","severity":1,"message":"236","line":72,"column":69,"nodeType":"237","messageId":"238","endLine":72,"endColumn":71},{"ruleId":"235","severity":1,"message":"236","line":73,"column":51,"nodeType":"237","messageId":"238","endLine":73,"endColumn":53},{"ruleId":"216","severity":1,"message":"224","line":76,"column":52,"nodeType":"218","messageId":"219","endLine":76,"endColumn":54},{"ruleId":"216","severity":1,"message":"217","line":77,"column":83,"nodeType":"218","messageId":"219","endLine":77,"endColumn":85},{"ruleId":"216","severity":1,"message":"224","line":78,"column":46,"nodeType":"218","messageId":"219","endLine":78,"endColumn":48},{"ruleId":"235","severity":1,"message":"236","line":79,"column":60,"nodeType":"237","messageId":"238","endLine":79,"endColumn":62},{"ruleId":"216","severity":1,"message":"217","line":80,"column":50,"nodeType":"218","messageId":"219","endLine":80,"endColumn":52},{"ruleId":"220","severity":1,"message":"239","line":89,"column":8,"nodeType":"222","endLine":89,"endColumn":20,"suggestions":"240"},{"ruleId":"216","severity":1,"message":"224","line":102,"column":53,"nodeType":"218","messageId":"219","endLine":102,"endColumn":55},{"ruleId":"216","severity":1,"message":"217","line":103,"column":81,"nodeType":"218","messageId":"219","endLine":103,"endColumn":83},{"ruleId":"216","severity":1,"message":"224","line":116,"column":34,"nodeType":"218","messageId":"219","endLine":116,"endColumn":36},{"ruleId":"225","severity":1,"message":"226","line":142,"column":9,"nodeType":"227","messageId":"228","endLine":148,"endColumn":10},{"ruleId":"225","severity":1,"message":"226","line":152,"column":9,"nodeType":"227","messageId":"228","endLine":158,"endColumn":10},{"ruleId":"235","severity":1,"message":"236","line":165,"column":45,"nodeType":"237","messageId":"238","endLine":165,"endColumn":47},{"ruleId":"216","severity":1,"message":"217","line":166,"column":28,"nodeType":"218","messageId":"219","endLine":166,"endColumn":30},{"ruleId":"216","severity":1,"message":"224","line":169,"column":28,"nodeType":"218","messageId":"219","endLine":169,"endColumn":30},{"ruleId":"235","severity":1,"message":"236","line":176,"column":69,"nodeType":"237","messageId":"238","endLine":176,"endColumn":71},{"ruleId":"235","severity":1,"message":"236","line":177,"column":47,"nodeType":"237","messageId":"238","endLine":177,"endColumn":49},{"ruleId":"216","severity":1,"message":"224","line":180,"column":48,"nodeType":"218","messageId":"219","endLine":180,"endColumn":50},{"ruleId":"216","severity":1,"message":"217","line":181,"column":79,"nodeType":"218","messageId":"219","endLine":181,"endColumn":81},{"ruleId":"216","severity":1,"message":"224","line":182,"column":42,"nodeType":"218","messageId":"219","endLine":182,"endColumn":44},{"ruleId":"235","severity":1,"message":"236","line":183,"column":56,"nodeType":"237","messageId":"238","endLine":183,"endColumn":58},{"ruleId":"216","severity":1,"message":"217","line":184,"column":46,"nodeType":"218","messageId":"219","endLine":184,"endColumn":48},{"ruleId":"216","severity":1,"message":"224","line":193,"column":34,"nodeType":"218","messageId":"219","endLine":193,"endColumn":36},{"ruleId":"216","severity":1,"message":"224","line":200,"column":25,"nodeType":"218","messageId":"219","endLine":200,"endColumn":27},{"ruleId":"216","severity":1,"message":"217","line":202,"column":29,"nodeType":"218","messageId":"219","endLine":202,"endColumn":31},{"ruleId":"216","severity":1,"message":"217","line":228,"column":29,"nodeType":"218","messageId":"219","endLine":228,"endColumn":31},{"ruleId":"216","severity":1,"message":"217","line":254,"column":29,"nodeType":"218","messageId":"219","endLine":254,"endColumn":31},{"ruleId":"216","severity":1,"message":"217","line":280,"column":29,"nodeType":"218","messageId":"219","endLine":280,"endColumn":31},{"ruleId":"216","severity":1,"message":"217","line":306,"column":29,"nodeType":"218","messageId":"219","endLine":306,"endColumn":31},{"ruleId":"216","severity":1,"message":"217","line":317,"column":64,"nodeType":"218","messageId":"219","endLine":317,"endColumn":66},{"ruleId":"216","severity":1,"message":"224","line":322,"column":64,"nodeType":"218","messageId":"219","endLine":322,"endColumn":66},{"ruleId":"216","severity":1,"message":"224","line":343,"column":29,"nodeType":"218","messageId":"219","endLine":343,"endColumn":31},{"ruleId":"216","severity":1,"message":"224","line":350,"column":33,"nodeType":"218","messageId":"219","endLine":350,"endColumn":35},{"ruleId":"216","severity":1,"message":"217","line":353,"column":25,"nodeType":"218","messageId":"219","endLine":353,"endColumn":27},{"ruleId":"216","severity":1,"message":"224","line":535,"column":37,"nodeType":"218","messageId":"219","endLine":535,"endColumn":39},{"ruleId":"208","severity":1,"message":"241","line":9,"column":20,"nodeType":"210","messageId":"211","endLine":9,"endColumn":28},{"ruleId":"204","replacedBy":"242"},{"ruleId":"206","replacedBy":"243"},{"ruleId":"208","severity":1,"message":"244","line":1,"column":8,"nodeType":"210","messageId":"211","endLine":1,"endColumn":13},{"ruleId":"245","severity":2,"message":"246","line":6,"column":9,"nodeType":"210","endLine":6,"endColumn":19},{"ruleId":"208","severity":1,"message":"247","line":8,"column":8,"nodeType":"210","messageId":"211","endLine":8,"endColumn":16},{"ruleId":"208","severity":1,"message":"248","line":12,"column":35,"nodeType":"210","messageId":"211","endLine":12,"endColumn":59},{"ruleId":"235","severity":1,"message":"249","line":53,"column":66,"nodeType":"237","messageId":"250","endLine":53,"endColumn":68},{"ruleId":"216","severity":1,"message":"224","line":54,"column":48,"nodeType":"218","messageId":"219","endLine":54,"endColumn":50},{"ruleId":"208","severity":1,"message":"244","line":1,"column":8,"nodeType":"210","messageId":"211","endLine":1,"endColumn":13},{"ruleId":"208","severity":1,"message":"251","line":1,"column":17,"nodeType":"210","messageId":"211","endLine":1,"endColumn":25},{"ruleId":"208","severity":1,"message":"252","line":1,"column":38,"nodeType":"210","messageId":"211","endLine":1,"endColumn":44},{"ruleId":"208","severity":1,"message":"253","line":58,"column":11,"nodeType":"210","messageId":"211","endLine":58,"endColumn":18},{"ruleId":"208","severity":1,"message":"241","line":61,"column":20,"nodeType":"210","messageId":"211","endLine":61,"endColumn":28},{"ruleId":"254","severity":1,"message":"255","line":138,"column":37,"nodeType":"231","endLine":138,"endColumn":247},{"ruleId":"254","severity":1,"message":"255","line":141,"column":37,"nodeType":"231","endLine":141,"endColumn":247},{"ruleId":"254","severity":1,"message":"255","line":144,"column":37,"nodeType":"231","endLine":144,"endColumn":247},{"ruleId":"254","severity":1,"message":"255","line":151,"column":37,"nodeType":"231","endLine":151,"endColumn":247},{"ruleId":"254","severity":1,"message":"255","line":154,"column":37,"nodeType":"231","endLine":154,"endColumn":247},{"ruleId":"254","severity":1,"message":"255","line":157,"column":37,"nodeType":"231","endLine":157,"endColumn":247},{"ruleId":"254","severity":1,"message":"255","line":164,"column":37,"nodeType":"231","endLine":164,"endColumn":247},{"ruleId":"254","severity":1,"message":"255","line":167,"column":37,"nodeType":"231","endLine":167,"endColumn":247},{"ruleId":"254","severity":1,"message":"255","line":170,"column":37,"nodeType":"231","endLine":170,"endColumn":247},{"ruleId":"216","severity":1,"message":"217","line":32,"column":66,"nodeType":"218","messageId":"219","endLine":32,"endColumn":68},{"ruleId":"216","severity":1,"message":"217","line":32,"column":113,"nodeType":"218","messageId":"219","endLine":32,"endColumn":115},{"ruleId":"216","severity":1,"message":"224","line":70,"column":33,"nodeType":"218","messageId":"219","endLine":70,"endColumn":35},{"ruleId":"216","severity":1,"message":"224","line":72,"column":57,"nodeType":"218","messageId":"219","endLine":72,"endColumn":59},{"ruleId":"216","severity":1,"message":"217","line":73,"column":85,"nodeType":"218","messageId":"219","endLine":73,"endColumn":87},{"ruleId":"216","severity":1,"message":"224","line":87,"column":34,"nodeType":"218","messageId":"219","endLine":87,"endColumn":36},"no-native-reassign",["256"],"no-negated-in-lhs",["257"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar",["256"],["257"],"'signupUser' is defined but never used.","'state' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'signinUser'. Either include it or remove the dependency array.","ArrayExpression",["258"],"Expected '!==' and instead saw '!='.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'stepData'. Either include it or remove the dependency array.",["259"],"'dispatch' is assigned a value but never used.",["256"],["257"],"'React' is defined but never used.","react-hooks/rules-of-hooks","React Hook \"useHistory\" cannot be called inside a callback. React Hooks must be called in a React function component or a custom React Hook function.","'SortIcon' is defined but never used.","'setLessonsCategoriesList' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'useState' is defined but never used.","'useRef' is defined but never used.","'classes' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation",{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},"Update the dependencies array to be: [signinUser, thirdPartyResponse]",{"range":"264","text":"265"},"Update the dependencies array to be: [activeStep, stepData]",{"range":"266","text":"267"},[1639,1659],"[signinUser, thirdPartyResponse]",[4194,4206],"[activeStep, stepData]"]