[{"/Users/danny/Documents/Projects/boogalu/src/index.js":"1","/Users/danny/Documents/Projects/boogalu/src/reportWebVitals.js":"2","/Users/danny/Documents/Projects/boogalu/src/Providers/StateProvider.js":"3","/Users/danny/Documents/Projects/boogalu/src/App.js":"4","/Users/danny/Documents/Projects/boogalu/src/Services/LocalstorageCache.js":"5","/Users/danny/Documents/Projects/boogalu/src/Components/Admin/Competition.js":"6","/Users/danny/Documents/Projects/boogalu/src/Components/Profile/Profile.js":"7","/Users/danny/Documents/Projects/boogalu/src/Components/EditProfile/EditProfile.js":"8","/Users/danny/Documents/Projects/boogalu/src/Components/Footer/index.js":"9","/Users/danny/Documents/Projects/boogalu/src/Components/Login/Login.js":"10","/Users/danny/Documents/Projects/boogalu/src/Components/Navigation/index.js":"11","/Users/danny/Documents/Projects/boogalu/src/Reducers/index.js":"12","/Users/danny/Documents/Projects/boogalu/src/Components/Upcoming/index.js":"13","/Users/danny/Documents/Projects/boogalu/src/Components/Splash/index.js":"14","/Users/danny/Documents/Projects/boogalu/src/Components/Competitions/index.js":"15","/Users/danny/Documents/Projects/boogalu/src/Components/Homepage/index.js":"16","/Users/danny/Documents/Projects/boogalu/src/Components/Contactus/index.js":"17","/Users/danny/Documents/Projects/boogalu/src/Components/Signup/index.js":"18","/Users/danny/Documents/Projects/boogalu/src/Components/Subscription/index.js":"19","/Users/danny/Documents/Projects/boogalu/src/Services/Competition.service.js":"20","/Users/danny/Documents/Projects/boogalu/src/Services/Upload.service.js":"21","/Users/danny/Documents/Projects/boogalu/src/Services/Utils.js":"22","/Users/danny/Documents/Projects/boogalu/src/Services/UploadedVideo.service.js":"23","/Users/danny/Documents/Projects/boogalu/src/Services/User.service.js":"24","/Users/danny/Documents/Projects/boogalu/src/Components/Vedio/Video.js":"25","/Users/danny/Documents/Projects/boogalu/src/Actions/User/index.js":"26","/Users/danny/Documents/Projects/boogalu/src/Data/LessonsCategory.js":"27","/Users/danny/Documents/Projects/boogalu/src/Data/RegistrationStepData.js":"28","/Users/danny/Documents/Projects/boogalu/src/Services/firebase.js":"29","/Users/danny/Documents/Projects/boogalu/src/Constants/index.js":"30","/Users/danny/Documents/Projects/boogalu/src/Actions/Competition/index.js":"31","/Users/danny/Documents/Projects/boogalu/src/Components/CompetitionsDetails/index.js":"32","/Users/danny/Documents/Projects/boogalu/src/Database/index.js":"33","/Users/danny/Documents/Projects/boogalu/src/Components/EnrollCompetition/index.js":"34","/Users/danny/Documents/Projects/boogalu/src/Components/VideoUploader/index.js":"35","/Users/danny/Documents/Projects/boogalu/src/Actions/LoginFlow/index.js":"36"},{"size":714,"mtime":1607871183480,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":1607448783643,"results":"39","hashOfConfig":"38"},{"size":980,"mtime":1611686954136,"results":"40","hashOfConfig":"38"},{"size":3092,"mtime":1611686954132,"results":"41","hashOfConfig":"38"},{"size":244,"mtime":1608092665797,"results":"42","hashOfConfig":"38"},{"size":7550,"mtime":1611657792742,"results":"43","hashOfConfig":"38"},{"size":8898,"mtime":1611663072217,"results":"44","hashOfConfig":"38"},{"size":12749,"mtime":1611657873315,"results":"45","hashOfConfig":"38"},{"size":3547,"mtime":1611682060479,"results":"46","hashOfConfig":"38"},{"size":13459,"mtime":1611686954133,"results":"47","hashOfConfig":"38"},{"size":10297,"mtime":1611686954134,"results":"48","hashOfConfig":"38"},{"size":897,"mtime":1611686954136,"results":"49","hashOfConfig":"38"},{"size":1144,"mtime":1611500144741,"results":"50","hashOfConfig":"38"},{"size":337,"mtime":1610252476571,"results":"51","hashOfConfig":"38"},{"size":2110,"mtime":1611686954133,"results":"52","hashOfConfig":"38"},{"size":4880,"mtime":1611682243957,"results":"53","hashOfConfig":"38"},{"size":2054,"mtime":1611682060478,"results":"54","hashOfConfig":"38"},{"size":28920,"mtime":1611686954135,"results":"55","hashOfConfig":"38"},{"size":1909,"mtime":1611682060480,"results":"56","hashOfConfig":"38"},{"size":3029,"mtime":1611657725425,"results":"57","hashOfConfig":"38"},{"size":2925,"mtime":1611659867189,"results":"58","hashOfConfig":"38"},{"size":1406,"mtime":1611638880845,"results":"59","hashOfConfig":"38"},{"size":1519,"mtime":1611658357929,"results":"60","hashOfConfig":"38"},{"size":1832,"mtime":1611657831156,"results":"61","hashOfConfig":"38"},{"size":616,"mtime":1611500501935,"results":"62","hashOfConfig":"38"},{"size":382,"mtime":1607543824191,"results":"63","hashOfConfig":"38"},{"size":11937,"mtime":1610252476574,"results":"64","hashOfConfig":"38"},{"size":7490,"mtime":1608453248853,"results":"65","hashOfConfig":"38"},{"size":984,"mtime":1611418181345,"results":"66","hashOfConfig":"38"},{"size":486,"mtime":1611686954135,"results":"67","hashOfConfig":"38"},{"size":186,"mtime":1611686954131,"results":"68","hashOfConfig":"38"},{"size":8555,"mtime":1611686954133,"results":"69","hashOfConfig":"38"},{"size":139,"mtime":1611420039353,"results":"70","hashOfConfig":"38"},{"size":3160,"mtime":1611661886712,"results":"71","hashOfConfig":"38"},{"size":5879,"mtime":1611687023694,"results":"72","hashOfConfig":"38"},{"size":306,"mtime":1611686954131,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gp1tlp",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"/Users/danny/Documents/Projects/boogalu/src/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/reportWebVitals.js",[],"/Users/danny/Documents/Projects/boogalu/src/Providers/StateProvider.js",[],["152","153"],"/Users/danny/Documents/Projects/boogalu/src/App.js",["154"],"/Users/danny/Documents/Projects/boogalu/src/Services/LocalstorageCache.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/Admin/Competition.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/Profile/Profile.js",["155","156","157","158","159","160","161","162","163"],"/Users/danny/Documents/Projects/boogalu/src/Components/EditProfile/EditProfile.js",["164","165","166"],"/Users/danny/Documents/Projects/boogalu/src/Components/Footer/index.js",["167","168","169","170"],"/Users/danny/Documents/Projects/boogalu/src/Components/Login/Login.js",["171","172","173","174","175","176","177"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useStoreConsumer } from '../../Providers/StateProvider';\nimport { GoogleLogin } from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport ArrowRightSharpIcon from '@material-ui/icons/ArrowRightSharp';\nimport bgImg from '../../Images/bg1.svg';\nimport { loginUser, signupUser } from '../../Actions/User/index';\nimport { getUserByEmail, getUserByPhone } from \"../../Services/User.service\";\nimport * as $ from 'jquery';\n\nexport default function Login() {\n    const { state, dispatch } = useStoreConsumer();\n    const history = useHistory();\n    const [loginCred, setloginCred] = useState({ username: \"\", password: \"\", showPassWord: false })\n    const [LoginError, setLoginError] = useState(null);\n    const [thirdPartyResponse, setThirdPartyResponse] = useState({ isLogginSuccess: false, data: null, source: '' })\n\n    useEffect(() => {\n        if (thirdPartyResponse.source === 'Facebook') signinUser('', 'Facebook');\n        if (thirdPartyResponse.source === 'Google') signinUser('', 'Google');\n    }, [thirdPartyResponse]);\n\n    useEffect(() => {\n        $('html,body').animate({\n            scrollTop: 0\n        }, 500);\n    }, [])\n\n    const setLoginResponseToServer = () => {\n        // notify server that user is loggedin\n        console.log('Save loggin user to db')\n\n    }\n    const successResponseGoogle = function (response) {\n        console.log(response);\n        let loginResponse = {\n            data: {\n                name: response.profileObj.name,\n                email: response.profileObj.email,\n                token: response.googleId,\n                profileImage: response.profileObj.imageUrl,\n            },\n            source: 'Google'\n        }\n        setThirdPartyResponse(loginResponse);\n    }\n\n    const failureResponseGoogle = function (response) {\n        if (response.error != \"idpiframe_initialization_failed\") {\n            setLoginError('Sorry there was a problem with your google login request.')\n        }\n    }\n\n    const responseFacebook = (response) => {\n        console.log(response);\n        if (response && response.userID) {\n            let loginResponse = {\n                isLogginSuccess: true,\n                data: response,\n                source: 'Facebook'\n            }\n            setThirdPartyResponse(loginResponse);\n        } else {\n            setLoginError('Sorry there was a problem with your facebook login request.')\n            console.log(\"facebook login error\", response);\n        }\n    }\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const handleChange = (prop) => (event) => {\n        setLoginError(null);\n        setloginCred({ ...loginCred, [prop]: event.target.value });\n    };\n\n    const showPassword = () => {\n        setloginCred({ ...loginCred, showPassWord: (loginCred.showPassWord ? false : true) })\n    }\n\n    const checkForUserPhone = (phone) => {\n        return new Promise((res, rej) => {\n            getUserByPhone(phone).subscribe((data) => {\n                if (data && data.length) res(data);\n                else res(null);\n            })\n        })\n    }\n\n    const checkForUserEmail = (email) => {\n        return new Promise((res, rej) => {\n            getUserByEmail(email).subscribe((data) => {\n                if (data && data.length) res(data);\n                else res(null);\n            })\n        })\n    }\n\n    const getUserLoginData = (userData) => {\n        return new Promise((res, rej) => {\n            if (thirdPartyResponse.data && thirdPartyResponse.data.email) {\n                // with gmail or fb flow\n                getUserByEmail(userData.email).subscribe((isRegisteredUser) => {\n                    if (isRegisteredUser.length) {\n                        res(isRegisteredUser[0]);\n                    } else {\n                        setLoginError('Please enter correct credentials.')\n                        rej({ ...userData, isRegistered: false });\n                    }\n                })\n            } else {\n                // without gmail fb flow\n                checkForUserEmail(userData.emailOrPhone).then((isRegisteredUser) => {\n                    if (isRegisteredUser && isRegisteredUser.length) {\n                        if (isRegisteredUser[0].password === userData.password) res(isRegisteredUser[0]);\n                        else {\n                            setLoginError('Please enter correct credentials.')\n                            rej();\n                        }\n                    } else {\n                        checkForUserPhone(userData.emailOrPhone).then((isRegisteredUser) => {\n                            if (isRegisteredUser && isRegisteredUser.length) {\n                                if (isRegisteredUser[0].password === userData.password) res(isRegisteredUser[0]);\n                                else {\n                                    setLoginError('Please enter correct credentials.')\n                                    rej();\n                                }\n                            } else {\n                                setLoginError('Please enter correct credentials.')\n                                rej();\n                            }\n                        })\n                    }\n                })\n            }\n        })\n    }\n    const signinUser = (e, status) => {\n        setLoginError(null);\n        let userData = {};\n        switch (status) {\n            case 'cred':\n                setThirdPartyResponse({ isLogginSuccess: false, data: null, source: '' })\n                e.preventDefault();\n                e.stopPropagation();\n                userData = {\n                    ...loginCred,\n                    phone: loginCred.username,\n                    email: loginCred.username,\n                    emailOrPhone: loginCred.username\n                }\n                getUserLoginData(userData)\n                    .then((data) => {\n                        //user is registered\n                        setLoginResponseToServer();\n                        data.source = 'Website';\n                        dispatch(loginUser(data));\n                        if (state.competitionLogginFlow) history.push('/competitions');\n                        else history.push('/')\n                    })\n                    .catch((data) => {\n                        if (data) {\n                            //user not registered\n                            history.push({\n                                pathname: '/register',\n                                state: data\n                            })\n                        }\n                    })\n                break;\n            case 'Google': case 'Facebook':\n                userData = {\n                    name: thirdPartyResponse.data.name,\n                    email: thirdPartyResponse.data.email,\n                }\n                getUserLoginData(userData)\n                    .then((data) => {\n                        //user is registered\n                        setLoginResponseToServer();\n                        data.source = thirdPartyResponse.source;\n                        dispatch(loginUser(data));\n                        if (state.competitionLogginFlow) history.push('/competitions');\n                        else history.push('/')\n                    })\n                    .catch((data) => {\n                        if (data) {\n                            data.source = thirdPartyResponse.source;\n                            //user not registered\n                            history.push({\n                                pathname: '/register',\n                                state: data\n                            })\n                        }\n                    })\n                break;\n        }\n    }\n\n    return (\n        <div className=\"login-wrap clearfix\">\n            <form className=\"form-wrap clearfix\" onSubmit={(e) => signinUser(e, 'cred')}>\n                <div className=\"heading-outer\">\n                    <div className=\"heading1\">Welcome Back!</div>\n                    <div className=\"heading2\">Login to your existant account of Choreoculture.</div>\n                </div>\n                <div className=\"form-outer clearfix\">\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-username\"\n                            label=\"Username / Email / Phone\"\n                            onChange={handleChange('username')}\n                            value={loginCred.username}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl className=\"\" variant=\"outlined\" style={{ width: '100%' }}>\n                            <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n                            <OutlinedInput\n                                required\n                                id=\"outlined-adornment-password\"\n                                type={loginCred.showPassWord ? 'text' : 'password'}\n                                value={loginCred.password}\n                                onChange={handleChange('password')}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={showPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {loginCred.showPassWord ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                labelWidth={70}\n                            />\n                        </FormControl>\n                    </div>\n                    <div className=\"action-wrap\">\n                        {LoginError && <div className=\"login-error\">\n                            {LoginError}\n                        </div>}\n                        <div className=\"submit-btn clearfix\">\n                            <Button variant=\"contained\" type=\"submit\" color=\"primary\">Sign In\n                            <ArrowRightSharpIcon />\n                            </Button>\n                        </div>\n                        <div className=\"forgot-password clearfix\">\n                            <div>Forgot Password ?</div>\n                        </div>\n                    </div>\n                    <div className=\"or-seprator clearfix\">\n                        <span></span>\n                        <div>OR</div>\n                        <span></span>\n                    </div>\n                    <div className=\"login-with\">\n                        <p className=\"loginWithTitle\">Login with</p>\n                        <div className=\"login-with-google\">\n                            <GoogleLogin\n                                className=\"google-login-btn\"\n                                clientId=\"417866547364-mesv7a9cn6bj4n3ge45s8b6hhl1vdam0.apps.googleusercontent.com\"\n                                buttonText=\"Login with Google\"\n                                onSuccess={successResponseGoogle}\n                                onFailure={failureResponseGoogle} >\n                            </GoogleLogin>\n                        </div>\n                        <div className=\"login-with-fb\">\n                            <div className=\"login-with-fb\">\n                                <FacebookLogin\n                                    appId=\"813330422546108\"\n                                    autoLoad={false}\n                                    fields=\"name,email,picture\"\n                                    callback={responseFacebook}\n                                    cssClass=\"facebook-login-btn\"\n                                    icon={<FacebookIcon />}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"already-login-wrap\">\n                        <div className=\"text-wrap\">New to Choreoculture?</div>\n                        <Button color=\"primary\" onClick={() => history.push('/register')}>SIGN UP</Button>\n                    </div>\n                </div>\n            </form>\n\n            <div className=\"img-wrap\">\n                <img src={bgImg} />\n            </div>\n        </div>\n    );\n}","/Users/danny/Documents/Projects/boogalu/src/Components/Navigation/index.js",["178","179"],"import React, { useState, useEffect, useRef } from 'react';\nimport { FaHome, FaBookReader, FaCloudUploadAlt, FaTrophy, FaStaylinked } from 'react-icons/fa';\nimport boogaluLogo from '../../Images/Boogalu-logo.svg';\nimport { useHistory } from \"react-router-dom\";\nimport { useStoreConsumer } from '../../Providers/StateProvider';\nimport { logoutUser } from '../../Actions/User';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport * as $ from 'jquery';\nconst SCROLL_TOP_LIMIT = 200;\nfunction Navigation() {\n    const [goingUpClass, setGoingUpClass] = useState('');\n    const [isUserRegstrationPage, toggleUserRegistrationPage] = useState(false);\n    const [didMount, setDidMount] = useState(false);\n    const [isMobile, toggleMobile] = useState(false);\n    const [goingDownClass, setGoingDownClass] = useState('');\n    const [showProfileTab, setShowProfileTab] = useState(false);\n    const ref = useRef();\n    const mobilHomelinkRef = useRef();\n    const history = useHistory();\n    const { state, dispatch } = useStoreConsumer();\n    useOnClickOutside(ref, () => setShowProfileTab(false));\n\n    useEffect(() => {\n        setDidMount(true);\n        toggleUserRegistrationPage(false);\n        let windowViewPortWidth = window.innerWidth;\n        if (windowViewPortWidth > 1023) {\n            toggleMobile(false);\n        } else {\n            toggleMobile(true);\n        }\n\n        const handleScroll = () => {\n            const currentScrollY = window.scrollY;\n            if (currentScrollY < SCROLL_TOP_LIMIT) {\n                setGoingUpClass('');\n                setGoingDownClass('');\n            } else {\n                setGoingUpClass('scrolled-up');\n                setTimeout(() => {\n                    setGoingDownClass('scrolled-down');\n                }, 200);\n            }\n        };\n\n        const windowResize = () => {\n            windowViewPortWidth = window.innerWidth;\n            if (windowViewPortWidth > 1023) {\n                toggleMobile(false);\n            } else {\n                toggleMobile(true);\n            }\n        }\n\n\n        setTimeout(() => {\n            const pathName = history?.location?.pathname.split('/')[1];\n            const navLinks = document.querySelectorAll('.nav-ul a');\n            if (pathName.includes('register') || pathName.includes('login')) {\n                toggleUserRegistrationPage(false);\n            } else {\n                toggleUserRegistrationPage(true);\n            }\n            if (navLinks && navLinks.length) {\n                navLinks.forEach((ele) => {\n                    const getHref = ele.getAttribute('href').toLocaleLowerCase();\n                    if (pathName?.length && getHref.includes(pathName)) {\n                        ele.classList.add('active');\n                    }\n                });\n            }\n        }, 1000);\n\n        window.addEventListener(\"resize\", windowResize, { passive: true });\n        window.addEventListener(\"scroll\", handleScroll, { passive: true });\n        return () => setDidMount(false);\n    }, [isMobile]);\n\n    const logout = () => {\n        console.log('logout success');\n        dispatch(logoutUser());\n        setShowProfileTab(false)\n        history.push(`/login`);\n    }\n\n    const onClickNav = (e, route) => {\n        e.preventDefault();\n        const navLinks = document.querySelectorAll('.nav-ul a');\n\n        toggleUserRegistrationPage(false);\n        setTimeout(() => {\n            const pathName = history?.location?.pathname.split('/')[1];\n            if (pathName.includes('register') || pathName.includes('login')) {\n                toggleUserRegistrationPage(false);\n            } else {\n                toggleUserRegistrationPage(true);\n            }\n        }, 1000);\n\n        if (navLinks && navLinks.length) {\n            navLinks.forEach((ele) => {\n                if (ele.classList.contains('active')) {\n                    ele.classList.remove('active');\n                }\n            });\n        }\n        if (route) {\n            history.push(`/${route}`);\n            e.target.classList.add('active');\n            setTimeout(() => {\n                let target = $(`.${route}`);\n                if (target && target.offset()) {\n                    $('html,body').animate({\n                        scrollTop: target.offset().top - 200\n                    }, 700);\n                }\n            }, 100);\n        } else {\n            history.push(`/`);\n            setTimeout(() => {\n                let target = $(`.homepage`);\n                if (target.length) {\n                    $('html,body').animate({\n                        scrollTop: target.offset().top - 200\n                    }, 700);\n                }\n            }, 100);\n        }\n    }\n    // Hook\n    function useOnClickOutside(ref, handler) {\n        useEffect(\n            () => {\n                const listener = event => {\n                    if (!ref.current || ref.current.contains(event.target)) {\n                        return;\n                    }\n\n                    handler(event);\n                };\n                document.addEventListener('mousedown', listener);\n                document.addEventListener('touchstart', listener);\n                return () => {\n                    document.removeEventListener('mousedown', listener);\n                    document.removeEventListener('touchstart', listener);\n                };\n            },\n            [ref, handler]\n        );\n    }\n\n    function navigateToUserRegistrationLogin(path) {\n        toggleUserRegistrationPage(false);\n        history.push(`/${path}`)\n    }\n\n    if (!didMount) {\n        return null;\n    }\n\n    return (\n        <>\n            <nav className={`navigation-wrap ${goingUpClass} ${goingDownClass}`}>\n                <div className=\"flex-container desktop-navigation\">\n                    <h1 title=\"home\" >\n                        <a href=\"/\" onClick={(e) => onClickNav(e, '')}>\n                            <img src={boogaluLogo} alt=\"Boogalu\" />\n                        </a>\n                    </h1>\n                    {\n                        !isMobile ?\n                            <ul className=\"flex-1 nav-ul\">\n                                <li><a href=\"#Lessons\" onClick={(e) => onClickNav(e, 'lessons')}>Lessons</a></li>\n                                <li><a href=\"#Competitions\" onClick={(e) => onClickNav(e, 'competitions')}>Competitions</a></li>\n                                <li><a href=\"#Subscription\" onClick={(e) => onClickNav(e, 'subscription')}>Subscription</a></li>\n                            </ul> : ''\n                    }\n                    {(!state.loggedInUser || !state.loggedInUser.phone) && <div className=\"flex-2 signup-wrap\" >\n                        <button className=\"btn primary-light login\" onClick={() => navigateToUserRegistrationLogin('login')}>Login</button>\n                        <button className=\"btn primary-dark signup\" onClick={() => navigateToUserRegistrationLogin('register')}>Sign Up</button>\n                    </div>}\n\n                    {state.loggedInUser && state.loggedInUser.phone && <div className=\"flex-2 signup-wrap\" >\n                        <div className=\"profile\" ref={ref}>\n                            <AccountCircleOutlinedIcon onClick={() => setShowProfileTab(true)} style={{ fontSize: '35px', paddingRight: '20px' }} />\n                            {showProfileTab && <div className=\"profile-tab-wrap\">\n                                <div className=\"profile\" onClick={() => { history.push('/profile'); setShowProfileTab(false) }}>Profile</div>\n                                <div className=\"logout\" onClick={() => logout()}>Logout</div>\n                            </div>}\n                        </div>\n                        {/* <button className=\"signup\" onClick={() => logout()}>Logout</button> */}\n                    </div>}\n                </div>\n                {\n                    isUserRegstrationPage ?\n                        <a href=\"#Competitions\" className=\"upload-btn\">\n                            <i><FaCloudUploadAlt /></i>\n                        </a> : ''\n                }\n                {\n                    isMobile ?\n                        <div className=\"sticky-mobile-menu\">\n                            <ul className=\"flex-1 nav-ul\">\n                                <li>\n                                    <a href=\"/\" ref={mobilHomelinkRef} onClick={(e) => onClickNav(e, '')}>\n                                        <i>\n                                            <FaHome />\n                                        </i>\n                                        <span>Home</span>\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href=\"#Lessons\" onClick={(e) => onClickNav(e, 'lessons')}>\n                                        <i><FaBookReader /></i>\n                                        <span>Lessons</span>\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href=\"#upload\" onClick={(e) => onClickNav(e, 'competitions')}>\n                                        <i><FaTrophy /></i>\n                                        <span>Competition</span>\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href=\"#Subscription\" onClick={(e) => onClickNav(e, 'subscription')}>\n                                        <i><FaStaylinked /></i>\n                                        <span>Subscription</span>\n                                    </a>\n                                </li>\n                            </ul>\n                        </div>\n                        : ''\n                }\n            </nav>\n        </>\n    )\n}\nexport default Navigation","/Users/danny/Documents/Projects/boogalu/src/Reducers/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/Upcoming/index.js",["180","181","182"],"/Users/danny/Documents/Projects/boogalu/src/Components/Splash/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/Competitions/index.js",["183","184","185"],"import React, { useState, useEffect } from 'react'\nimport CompetitionsDetails from \"../CompetitionsDetails\";\nimport { getCompetitionsList } from \"../../Services/Competition.service\";\nimport { useStoreConsumer } from '../../Providers/StateProvider';\nimport { disableLoginFlow, setActiveCompetition } from \"../../Actions/Competition\";\n\nfunction Competitions() {\n    const { state, dispatch } = useStoreConsumer();\n    const [isOpenDetailsModal, setIsOpenDetailsModal] = useState(state.competitionLogginFlow ? true : false);\n    const [CompletitionList, setCompletitionList] = useState(null);\n\n    var initialStep = state.competitionLogginFlow ? 3 : 1;\n\n    useEffect(() => {\n        getCompetitionsList().subscribe(list => setCompletitionList(list));\n        if (state.competitionLogginFlow) {\n            dispatch(disableLoginFlow());\n        }\n    }, [])\n\n    const openDetailsModal = (competition) => {\n        dispatch(setActiveCompetition(competition));\n        setIsOpenDetailsModal(true);\n    }\n\n    return (\n        <div className=\"competition-wrap\">\n            <div className=\"competition-inner\">\n                <div className=\"title-wrap\">\n                    <h1>Our Active Competition !</h1>\n                    <div className=\"competition-desc\">Participate in different competitions &amp; win exciting prizes.</div>\n                </div>\n                <ul className=\"competition-list\" >\n                    {CompletitionList && CompletitionList.map((competition) => {\n                        return <li key={competition.name + '-id'} onClick={() => openDetailsModal(competition)}>\n                            <img src={competition.img} alt={competition.name} />\n                            <h2>{competition.name}</h2>\n                        </li>\n                    })}\n                </ul>\n\n                {isOpenDetailsModal && <CompetitionsDetails open={isOpenDetailsModal} handleClose={() => setIsOpenDetailsModal(false)} initialStep={initialStep} />}\n            </div>\n        </div>\n    )\n}\n\nexport default Competitions\n","/Users/danny/Documents/Projects/boogalu/src/Components/Homepage/index.js",["186","187","188","189","190"],"/Users/danny/Documents/Projects/boogalu/src/Components/Contactus/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/Signup/index.js",["191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useStoreConsumer } from '../../Providers/StateProvider';\nimport { signupUser } from '../../Actions/User';\nimport bgImg from '../../Images/bg1.svg';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport stepListData from '../../Data/RegistrationStepData'\nimport ArrowRightSharpIcon from '@material-ui/icons/ArrowRightSharp';\nimport { registerUser, getUserByEmail, getUserByPhone } from \"../../Services/User.service\";\nimport * as $ from 'jquery';\n\nexport default function Signup() {\n    const { state, dispatch } = useStoreConsumer();\n    const history = useHistory();\n    let loggedInUser = state.loggedInUser;\n    // if user already login then redirect to home\n    if (loggedInUser.name && loggedInUser.phone && loggedInUser.email && loggedInUser.username) history.push({\n        pathname: '/',\n        state: null\n    })\n    // get data from history props if redirected through google or facebook login\n    if (history.location.state && (history.location.state.source === 'Facebook' || history.location.state.source === 'Google')) {\n        loggedInUser.email = history.location.state.email;\n        loggedInUser.name = history.location.state.name;\n        // setNeedToRegisterError('You are not registered yet, Please register with Choreoculture.')\n    }\n    const [userDetails, setUserDetails] = useState(loggedInUser);\n    const [SignUpError, setSignUpError] = useState(null);\n    const [showHidePassword, setShowHidePassword] = useState({ showPassword: false, showConfirmPassword: false });\n\n    const [activeStep, setActiveStep] = useState('stepOne');\n    const [showNextButton, setShowNextButton] = useState(false);\n    const [stepData, setStepListData] = useState(stepListData);\n    const [selectedOptionsList, setSelectedOptionsList] = useState([]);\n\n    const handleChange = (prop) => (event) => {\n        setUserDetails({ ...userDetails, [prop]: event.target.value });\n    };\n\n    const handleClickShowPassword = (prop) => {\n        setShowHidePassword({ ...showHidePassword, [prop]: !showHidePassword[prop] });\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    useEffect(() => {\n        $('html,body').animate({\n            scrollTop: 0\n        }, 500);\n    }, [])\n\n    useEffect(() => {\n        if (stepData[activeStep]) {\n            let isAnySelected = stepData[activeStep].filter((data) => data.isSelected);\n            if (isAnySelected.length != 0) setShowNextButton(true);\n            else setShowNextButton(false);\n            // set selected options\n            let selectedOptions = [];\n            Object.entries(stepData).map(([parentKey, parentValue]) => {\n                parentValue.map((parentValueItem) => {\n                    if (parentValueItem.isSelected) {\n                        let selectionObj = { value: [parentValueItem.title], key: parentKey, heading: parentValueItem.heading };\n                        if (selectedOptions.length != 0) {\n                            let isAvl = selectedOptions.filter((data) => data.key === parentKey);\n                            if (isAvl.length != 0) {\n                                selectedOptions.map((item) => {\n                                    if (item.key === parentKey) item.value.push(parentValueItem.title);\n                                })\n                            } else selectedOptions.push(selectionObj);\n                        } else selectedOptions.push(selectionObj);\n                    }\n                })\n            })\n            setSelectedOptionsList(selectedOptions);\n        }\n    }, [activeStep])\n\n    const saveUserRegistrationDetails = () => {\n        return new Promise((res, rej) => {\n            registerUser(userDetails).subscribe((data) => {\n                console.log('user registered success', data);\n                res();\n            })\n        })\n    }\n\n    const checkForUsedPhone = () => {\n        return new Promise((res, rej) => {\n            getUserByPhone(userDetails.phone).subscribe((data) => {\n                if (data && data.length) {\n                    setSignUpError('Phone already registered.');\n                    rej(false);\n                } else {\n                    res(true);\n                }\n            })\n        })\n    }\n\n    const checkForUsedEmail = () => {\n        return new Promise((res, rej) => {\n            getUserByEmail(userDetails.email).subscribe((data) => {\n                if (data && data.length) {\n                    setSignUpError('Email already registered.');\n                    rej(false);\n                } else {\n                    res(true);\n                }\n            })\n        })\n    }\n\n    const setSignupUserCred = (e) => {\n        if (userDetails.password != userDetails.confirmPassword) {\n            setSignUpError('Password dose not match.');\n            return;\n        }\n\n        Promise.all([checkForUsedEmail(), checkForUsedPhone()]).then(() => {\n            saveUserRegistrationDetails()\n                .then(() => {\n                    dispatch(signupUser(userDetails));\n                    if (state.competitionLogginFlow) history.push('/competitions');\n                    else history.push(({\n                        pathname: '/',\n                        state: null\n                    }));\n                })\n                .catch((error) => {\n                    // error in user registration\n                    if (error) {\n\n                    }\n                })\n        }).catch(error => {\n            console.error(error)\n        });\n        e.preventDefault();\n    }\n\n    const setNextStep = () => {\n        switch (activeStep) {\n            case 'stepOne': setActiveStep('stepTwo'); break;\n            case 'stepTwo': setActiveStep('stepThree'); break;\n            case 'stepThree': setActiveStep('stepFour'); break;\n            case 'stepFour': setActiveStep('stepFive'); break;\n            case 'stepFive': setActiveStep(6); break;\n        }\n    }\n\n    const setPrevStep = () => {\n        switch (activeStep) {\n            case 'stepTwo': setActiveStep('stepOne'); break;\n            case 'stepThree': setActiveStep('stepTwo'); break;\n            case 'stepFour': setActiveStep('stepThree'); break;\n            case 'stepFive': setActiveStep('stepFour'); break;\n            case 6: setActiveStep('stepFive'); break;\n        }\n    }\n\n    const setStepListItemData = (e, activeItem, status) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const stepDataList = Object.assign({}, stepData);\n        stepDataList[activeStep].map((item) => {\n            if (item.title === activeItem.title) {\n                item.isSelected = item.isSelected ? false : true;\n            } else {\n                if (status != 'multi-select') {\n                    item.isSelected = false;\n                }\n            }\n        })\n        // set selected options\n        let selectedOptions = [];\n        Object.entries(stepDataList).map(([parentKey, parentValue]) => {\n            parentValue.map((parentValueItem) => {\n                if (parentValueItem.isSelected) {\n                    let selectionObj = { value: [parentValueItem.title], key: parentKey, heading: parentValueItem.heading };\n                    if (selectedOptions.length != 0) {\n                        let isAvl = selectedOptions.filter((data) => data.key === parentKey);\n                        if (isAvl.length != 0) {\n                            selectedOptions.map((item) => {\n                                if (item.key === parentKey) item.value.push(parentValueItem.title);\n                            })\n                        } else selectedOptions.push(selectionObj);\n                    } else selectedOptions.push(selectionObj);\n                }\n            })\n        })\n        setSelectedOptionsList(selectedOptions);\n        let isAnySelected = stepDataList[activeStep].filter((data) => data.isSelected);\n        if (isAnySelected.length != 0) setShowNextButton(true);\n        else setShowNextButton(false);\n        setStepListData(stepDataList);\n    }\n\n    return (\n        <div className=\"logout-wrap clearfix\">\n            {activeStep != 6 && <div className=\"step-wrap\">\n                <div className=\"heading1\">Let's Get Started!</div>\n                {activeStep === 'stepOne' && <>\n                    <div className=\"list-content\">\n                        <div className=\"list-heading-wrap\">\n                            <div className=\"heading2\">What’s your experience with dancing?</div>\n                            <div className=\"heading3\">Select One Option</div>\n                        </div>\n                        <div className=\"list\">\n                            {stepData.stepOne.map((item, i) => {\n                                return (\n                                    <div key={i} className={item.isSelected ? 'list-item selected-item' : 'list-item'} onClick={(e) => setStepListItemData(e, item)}>\n                                        <div className=\"title\">{item.title}</div>\n                                        <div className=\"desc\">{item.desc}</div>\n                                        <Checkbox\n                                            required\n                                            color=\"primary\"\n                                            className=\"selected-item-checkbox\"\n                                            checked={item.isSelected}\n                                            onChange={(e) => setStepListItemData(e, item)}\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                        />\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </>}\n                {activeStep === 'stepTwo' && <>\n                    <div className=\"list-content\">\n                        <div className=\"list-heading-wrap\">\n                            <div className=\"heading2\">What is your first goal that you want to work on?</div>\n                            <div className=\"heading3\">Select One Option</div>\n                        </div>\n                        <div className=\"list\">\n                            {stepData.stepTwo.map((item, i) => {\n                                return (\n                                    <div key={i} className={item.isSelected ? 'list-item selected-item' : 'list-item'} onClick={(e) => setStepListItemData(e, item)}>\n                                        <div className=\"title\">{item.title}</div>\n                                        <div className=\"desc\">{item.desc}</div>\n                                        <Checkbox\n                                            required\n                                            color=\"primary\"\n                                            className=\"selected-item-checkbox\"\n                                            checked={item.isSelected}\n                                            onChange={(e) => setStepListItemData(e, item)}\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                        />\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </>}\n                {activeStep === 'stepThree' && <>\n                    <div className=\"list-content\">\n                        <div className=\"list-heading-wrap\">\n                            <div className=\"heading2\">What are you interested in?</div>\n                            <div className=\"heading3\">Select all that apply</div>\n                        </div>\n                        <div className=\"list\">\n                            {stepData.stepThree.map((item, i) => {\n                                return (\n                                    <div key={i} className={item.isSelected ? 'list-item selected-item' : 'list-item'} onClick={(e) => setStepListItemData(e, item, 'multi-select')}>\n                                        <div className=\"title\">{item.title}</div>\n                                        <div className=\"desc\" style={{ paddingRight: '25px' }}>{item.desc}</div>\n                                        <Checkbox\n                                            required\n                                            color=\"primary\"\n                                            className=\"selected-item-checkbox\"\n                                            checked={item.isSelected}\n                                            onChange={(e) => setStepListItemData(e, item, 'multi-select')}\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                        />\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </>}\n                {activeStep === 'stepFour' && <>\n                    <div className=\"list-content\">\n                        <div className=\"list-heading-wrap\">\n                            <div className=\"heading2\">How long would you like your dance sessions to be?</div>\n                            <div className=\"heading3\">Select One Option</div>\n                        </div>\n                        <div className=\"list\">\n                            {stepData.stepFour.map((item, i) => {\n                                return (\n                                    <div key={i} className={item.isSelected ? 'list-item selected-item' : 'list-item'} onClick={(e) => setStepListItemData(e, item)}>\n                                        <div className=\"title\">{item.title}</div>\n                                        <div className=\"desc\">{item.desc}</div>\n                                        <Checkbox\n                                            required\n                                            color=\"primary\"\n                                            className=\"selected-item-checkbox\"\n                                            checked={item.isSelected}\n                                            onChange={(e) => setStepListItemData(e, item)}\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                        />\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </>}\n                {activeStep === 'stepFive' && <>\n                    <div className=\"list-content\">\n                        <div className=\"list-heading-wrap\">\n                            <div style={{ paddingBottom: 0 }} className=\"heading2\">Your Personal Schedule & Recommendations</div>\n                        </div>\n                        <div className=\"list\">\n                            {selectedOptionsList.map((item, i) => {\n                                return (\n                                    <div key={i} className=\"list-item selected-item\" onClick={() => setActiveStep(item.key)}>\n                                        <div className=\"title\">{item.heading}</div>\n                                        <div className=\"desc\">\n                                            {item.value.length === 1 &&\n                                                item.value.map((listValue, j) => {\n                                                    return <span key={j}>{listValue} </span>\n                                                })\n                                            }\n                                            {item.value.length != 1 &&\n                                                item.value.map((listValue, j) => {\n                                                    return <span key={j}>{listValue}, </span>\n                                                })\n                                            }\n\n                                        </div>\n                                        {/* <Checkbox\n                                            required\n                                            color=\"primary\"\n                                            className=\"selected-item-checkbox\"\n                                            checked={true}\n                                            disabled={true}\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                        /> */}\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </>}\n                {activeStep != 6 && <div className=\"step-already-login-wrap clearfix\">\n                    <div className=\"text-wrap\">Already have an account?</div>\n                    <Button color=\"primary\" onClick={() => history.push({\n                        pathname: '/login',\n                        state: null\n                    })}>SIGN IN</Button>\n                    {\n                        showNextButton ?\n                            <div className={`next-prev-actions ${activeStep != 'stepOne' ? 'next-step-active' : ''} `}>\n                                {activeStep != 'stepOne' && <Button color=\"primary\" variant=\"contained\" className=\"next-btn previous\" onClick={() => setPrevStep()}>Prev</Button>}\n                                {showNextButton && <Button color=\"primary\" variant=\"contained\" className=\"next-btn\" onClick={() => setNextStep()}>Next</Button>}\n                            </div> : ''\n                    }\n                </div>}\n            </div>}\n            {activeStep == 6 && <form className=\"form-wrap final-registration-block clearfix\" onSubmit={setSignupUserCred}>\n                <div className=\"heading-outer\">\n                    <div className=\"heading1\">Let's Get Started!</div>\n                    <div className=\"heading2\">Create an account to Choreoculture to get all features.</div>\n                </div>\n                {/* {NeedToRegisterError && <div className=\"login-error\">\n                    {NeedToRegisterError}\n                </div>} */}\n                <div className=\"form-outer clearfix\">\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-Name\"\n                            label=\"Name\"\n                            onChange={handleChange('name')}\n                            value={userDetails.name}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-Username\"\n                            label=\"Username\"\n                            onChange={handleChange('username')}\n                            value={userDetails.username}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            type=\"tel\"\n                            id=\"outlined-required-phone\"\n                            label=\"Phone\"\n                            onChange={handleChange('phone')}\n                            value={userDetails.phone}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-email\"\n                            label=\"Email\"\n                            type=\"email\"\n                            onChange={handleChange('email')}\n                            value={userDetails.email}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-country\"\n                            label=\"Country\"\n                            onChange={handleChange('country')}\n                            value={userDetails.country}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-state\"\n                            label=\"State\"\n                            onChange={handleChange('state')}\n                            value={userDetails.state}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl className=\"\" variant=\"outlined\">\n                            <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n                            <OutlinedInput\n                                required\n                                id=\"outlined-adornment-password\"\n                                type={showHidePassword.showPassword ? 'text' : 'password'}\n                                value={userDetails.password}\n                                onChange={handleChange('password')}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={() => handleClickShowPassword('showPassword')}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showHidePassword.showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                labelWidth={70}\n                            />\n                        </FormControl>\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl className=\"\" variant=\"outlined\">\n                            <InputLabel htmlFor=\"outlined-adornment-confirm-password\">Confirm Password</InputLabel>\n                            <OutlinedInput\n                                required\n                                id=\"outlined-adornment-confirm-password\"\n                                type={showHidePassword.showConfirmPassword ? 'text' : 'password'}\n                                value={userDetails.confirmPassword}\n                                onChange={handleChange('confirmPassword')}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle confirm password visibility\"\n                                            onClick={() => handleClickShowPassword('showConfirmPassword')}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showHidePassword.showConfirmPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                labelWidth={70}\n                            />\n                        </FormControl>\n                    </div>\n                    <div className=\"input-wrap\">\n                        <div className=\"dob-wrap\">\n                            <TextField className=\"input-field\"\n                                id=\"date\"\n                                label=\"Birthday\"\n                                type=\"date\"\n                                onChange={handleChange('dob')}\n                                value={userDetails.dob}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl variant=\"outlined\" className=\"input-field\">\n                            <InputLabel id=\"select-outlined-label\">Gender</InputLabel>\n                            <Select\n                                labelId=\"select-outlined-label\"\n                                id=\"select-outlined\"\n                                value={userDetails.gender}\n                                onChange={handleChange('gender')}\n                                label=\"Gender\"\n                            >\n                                <MenuItem value=\"Male\">Male</MenuItem>\n                                <MenuItem value=\"Female\">Female</MenuItem>\n                                <MenuItem value=\"Other\">Other</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div className=\"input-wrap bio-wrap\">\n                        <TextField className=\"input-field bio-input\"\n                            id=\"outlined-required-bio\"\n                            label=\"Bio\"\n                            value={userDetails.bio}\n                            onChange={handleChange('bio')}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"tnc-wrap\">\n                        <div className=\"tnc-content clearfix\">\n                            <div className=\"checkbox-wrap\">\n                                <Checkbox\n                                    required\n                                    color=\"primary\"\n                                    checked={userDetails.tnc}\n                                    onChange={(e) => setUserDetails({ ...userDetails, tnc: e.target.checked })}\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                />\n                            </div>\n                            <div className=\"note-wrap\">Yes, I agree to the terms and conditions </div>\n                        </div>\n                    </div>\n                    {SignUpError && <div className=\"login-error\">\n                        {SignUpError}\n                    </div>}\n                    <div className=\"submit-btn clearfix\">\n                        <Button variant=\"contained\" type=\"submit\" color=\"primary\" >Sign Up\n                         <ArrowRightSharpIcon />\n                        </Button>\n                        {activeStep != 'stepOne' && <Button color=\"primary\" variant=\"contained\" className=\"next-btn previous\" onClick={() => setPrevStep()}>Prev</Button>}\n                    </div>\n                    <div className=\"already-login-wrap\">\n                        <div className=\"text-wrap\">Already have an account?</div>\n                        <Button color=\"primary\" onClick={() => history.push({\n                            pathname: '/login',\n                            state: null\n                        })}>SIGN IN</Button>\n                    </div>\n                </div>\n            </form>}\n\n            <div className=\"img-wrap\">\n                <img src={bgImg} alt=\"bg1\" />\n            </div>\n        </div>\n    );\n}","/Users/danny/Documents/Projects/boogalu/src/Components/Subscription/index.js",["217","218"],"/Users/danny/Documents/Projects/boogalu/src/Services/Competition.service.js",[],"/Users/danny/Documents/Projects/boogalu/src/Services/Upload.service.js",["219","220"],"/Users/danny/Documents/Projects/boogalu/src/Services/Utils.js",["221","222","223"],"/Users/danny/Documents/Projects/boogalu/src/Services/UploadedVideo.service.js",[],"/Users/danny/Documents/Projects/boogalu/src/Services/User.service.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/Vedio/Video.js",[],"/Users/danny/Documents/Projects/boogalu/src/Actions/User/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Data/LessonsCategory.js",[],"/Users/danny/Documents/Projects/boogalu/src/Data/RegistrationStepData.js",[],"/Users/danny/Documents/Projects/boogalu/src/Services/firebase.js",[],"/Users/danny/Documents/Projects/boogalu/src/Constants/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Actions/Competition/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/CompetitionsDetails/index.js",["224","225","226","227","228","229","230","231"],"import React, { useState, useEffect } from 'react'\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { useHistory } from \"react-router-dom\";\nimport { useStoreConsumer } from '../../Providers/StateProvider';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { THUMBNAIL_URL } from '../../Constants';\nimport \"./CompetitionsDetails.scss\";\nimport EnrollCompetition from \"../EnrollCompetition\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { setActiveCompetition } from \"../../Actions/Competition\";\nimport { enableLoginFlow } from \"../../Actions/LoginFlow\";\nimport { getUploadedVideosByUserId } from \"../../Services/UploadedVideo.service\";\n\nfunction CompetitionsDetails({ open, handleClose, initialStep }) {\n\n    const { state, dispatch } = useStoreConsumer();\n    const history = useHistory();\n    const competitionDetails = state.activeCompetition;\n    console.log(competitionDetails);\n    const loggedInUser = state.loggedInUser;\n    const [userUploadedVdos, setUserUploadedVideoList] = useState([]);\n    const [TnC, setTnC] = useState(false);\n    const [ActiveStep, setActiveStep] = useState(initialStep || 1);\n    // const [SelectedVdo, setSelectedVdo] = useState(null);\n\n    useEffect(() => {\n        getUploadedVideosByUserId(loggedInUser.key).subscribe((vdoList) => setUserUploadedVideoList(vdoList));\n    }, [])\n\n    const useStyles = makeStyles((theme) => ({\n        modal: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n        },\n        paper: {\n            backgroundColor: theme.palette.background.paper,\n            border: '2px solid #000',\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2, 4, 3),\n        },\n    }));\n    const classes = useStyles();\n\n    const selectVdo = (e, vdo) => {\n        e.preventDefault();\n        e.stopPropagation();\n        let updatedVdos = userUploadedVdos;\n        updatedVdos.map((item) => {\n            if (item.key == vdo.key) {\n                item.isSelected = true;\n                let updatedCompetition = competitionDetails;\n                updatedCompetition.selectedVideo = item;\n                dispatch(setActiveCompetition(updatedCompetition));\n            }\n            else item.isSelected = false;\n        })\n        setUserUploadedVideoList([...updatedVdos]);\n    }\n\n    const enrollForCompetition = () => {\n        if (loggedInUser.name && loggedInUser.phone && loggedInUser.username) {\n            setActiveStep(3);\n        } else {\n            handleClose();\n            dispatch(enableLoginFlow('competition'));\n            history.push({\n                pathname: '/login',\n                state: null\n            })\n        }\n    }\n\n    return (\n        <div>\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className='competition-modal-box'\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <div className={classes.paper}>\n                        {ActiveStep == 1 && <IconButton onClick={() => { handleClose(); (state.activeCompetition && !state.currentLoginFlow) && dispatch(setActiveCompetition(null)) }}>\n                            <CloseIcon />\n                        </IconButton>}\n                        {(ActiveStep == 2 || ActiveStep == 3) && <IconButton onClick={() => setActiveStep(ActiveStep - 1)}>\n                            <ArrowBackIcon />\n                        </IconButton>}\n                        {ActiveStep == 1 && <div>\n                            <h2 id=\"title\">{competitionDetails.name}</h2>\n                            <img src={competitionDetails.img} alt={competitionDetails.name} style={{ width: '20%' }} />\n\n                            <div className=\"\">About Competition-</div>\n                            <p id=\"description\">{competitionDetails.desc}</p>\n\n                            <div>Age Category-</div>\n                            <div >Age 4 to 13 years</div>\n                            <div >Age 14 to 17 years</div>\n                            <div >Age 18 and above</div>\n\n                            <div id=\"fees\">Fees: {competitionDetails.fee}</div>\n\n                            <div className=\"start-at\">\n                                Start At: {competitionDetails.startingDate}\n                            </div>\n                            <div className=\"end-at\">\n                                End At: {competitionDetails.endingDate}\n                            </div>\n\n                            <div>Winners -</div>\n                            <div>1. Top 3 Winner From Each Category Get Award.</div>\n                            <div>2. There will be a three category as mention above.</div>\n                            <div>1. Winner will be based on best performance.</div>\n                            <div className=\"prices\">\n                                <div className=\"price-details\">\n                                    First Price : {competitionDetails.prices[0]}\n                                </div>\n                                <div className=\"price-details\">\n                                    Second Price : {competitionDetails.prices[1]}\n                                </div>\n                                <div className=\"price-details\">\n                                    Third Price : {competitionDetails.prices[2]}\n                                </div>\n                            </div>\n\n                            <div>Submission And Result -</div>\n                            <div>1. You Have to submit Your video till 15th June</div>\n                            <div>2. Result will be declared on 16th June At 4 Pm On</div>\n                            <div>1. Winner will be based on best performance.</div>\n\n                            <h3>Time To Express Your Talent on Our Platform during this Lockdown</h3>\n\n                            <div onClick={() => setTnC((TnC ? false : true))}>Terms & Conditions</div>\n                            {TnC && <div>\n                                <div>You may not be able to attend the live session if you are late.</div>\n                                <div>You may face interruptions during the course of the live stream due to internet connectivity issues.</div>\n                                <div>Show details and the artist lineup are subject to change as per the artist’s discretion.</div>\n                                <div> No refunds on purchased tickets are possible, even in case of any rescheduling.</div>\n                            </div>}\n                            <Button variant=\"contained\" color=\"primary\" onClick={() => setActiveStep(2)}>Submit Video</Button>\n                        </div>}\n\n                        {ActiveStep === 2 && <div>\n                            <div className=\"lessons-vdo-wrap\">\n                                {userUploadedVdos && userUploadedVdos.map((item, index) => {\n                                    return <div className={item.isSelected ? 'vdo-outer selected-vdo' : 'vdo-outer'} key={index} onClick={(e) => selectVdo(e, item)}>\n                                        <div className=\"vdo-wrap\" >\n                                            <img src={item.thumbnail ? item.thumbnail : THUMBNAIL_URL} style={{ width: \"50%\" }} />\n                                            <div>{item.title}</div>\n                                        </div>\n                                    </div>\n                                })}\n                            </div>\n                            <Button variant=\"contained\" color=\"primary\" onClick={() => enrollForCompetition()}>Submit</Button>\n                        </div>}\n\n                        {ActiveStep === 3 && <div>\n                            <EnrollCompetition handleClose={(e) => handleClose(e)} changeSelectedVdo={() => setActiveStep(2)} />\n                        </div>}\n                    </div>\n                </Fade>\n            </Modal>\n        </div>\n    )\n}\n\n\nexport default CompetitionsDetails\n","/Users/danny/Documents/Projects/boogalu/src/Database/index.js",["232"],"/Users/danny/Documents/Projects/boogalu/src/Components/EnrollCompetition/index.js",["233","234","235"],"/Users/danny/Documents/Projects/boogalu/src/Components/VideoUploader/index.js",["236"],"/Users/danny/Documents/Projects/boogalu/src/Actions/LoginFlow/index.js",[],{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","severity":1,"message":"242","line":2,"column":50,"nodeType":"243","messageId":"244","endLine":2,"endColumn":54},{"ruleId":"241","severity":1,"message":"245","line":58,"column":11,"nodeType":"243","messageId":"244","endLine":58,"endColumn":18},{"ruleId":"241","severity":1,"message":"246","line":61,"column":20,"nodeType":"243","messageId":"244","endLine":61,"endColumn":28},{"ruleId":"247","severity":1,"message":"248","line":71,"column":8,"nodeType":"249","endLine":71,"endColumn":10,"suggestions":"250"},{"ruleId":"251","severity":1,"message":"252","line":149,"column":37,"nodeType":"253","endLine":149,"endColumn":247},{"ruleId":"251","severity":1,"message":"252","line":152,"column":37,"nodeType":"253","endLine":152,"endColumn":247},{"ruleId":"251","severity":1,"message":"252","line":155,"column":37,"nodeType":"253","endLine":155,"endColumn":247},{"ruleId":"251","severity":1,"message":"252","line":162,"column":37,"nodeType":"253","endLine":162,"endColumn":247},{"ruleId":"251","severity":1,"message":"252","line":165,"column":37,"nodeType":"253","endLine":165,"endColumn":247},{"ruleId":"251","severity":1,"message":"252","line":168,"column":37,"nodeType":"253","endLine":168,"endColumn":247},{"ruleId":"254","severity":1,"message":"255","line":27,"column":66,"nodeType":"256","messageId":"257","endLine":27,"endColumn":68},{"ruleId":"254","severity":1,"message":"255","line":27,"column":113,"nodeType":"256","messageId":"257","endLine":27,"endColumn":115},{"ruleId":"254","severity":1,"message":"258","line":56,"column":34,"nodeType":"256","messageId":"257","endLine":56,"endColumn":36},{"ruleId":"241","severity":1,"message":"259","line":1,"column":17,"nodeType":"243","messageId":"244","endLine":1,"endColumn":25},{"ruleId":"247","severity":1,"message":"260","line":25,"column":8,"nodeType":"249","endLine":25,"endColumn":10,"suggestions":"261"},{"ruleId":"262","severity":1,"message":"263","line":60,"column":66,"nodeType":"264","endLine":60,"endColumn":81},{"ruleId":"265","severity":1,"message":"266","line":77,"column":29,"nodeType":"253","endLine":77,"endColumn":83},{"ruleId":"241","severity":1,"message":"267","line":18,"column":21,"nodeType":"243","messageId":"244","endLine":18,"endColumn":31},{"ruleId":"247","severity":1,"message":"268","line":32,"column":8,"nodeType":"249","endLine":32,"endColumn":28,"suggestions":"269"},{"ruleId":"254","severity":1,"message":"258","line":60,"column":28,"nodeType":"256","messageId":"257","endLine":60,"endColumn":30},{"ruleId":"270","severity":1,"message":"271","line":153,"column":9,"nodeType":"272","messageId":"273","endLine":208,"endColumn":10},{"ruleId":"254","severity":1,"message":"255","line":170,"column":52,"nodeType":"256","messageId":"257","endLine":170,"endColumn":54},{"ruleId":"254","severity":1,"message":"255","line":194,"column":52,"nodeType":"256","messageId":"257","endLine":194,"endColumn":54},{"ruleId":"274","severity":1,"message":"275","line":304,"column":17,"nodeType":"253","endLine":304,"endColumn":36},{"ruleId":"247","severity":1,"message":"260","line":76,"column":8,"nodeType":"249","endLine":76,"endColumn":18,"suggestions":"276"},{"ruleId":"265","severity":1,"message":"277","line":208,"column":25,"nodeType":"253","endLine":208,"endColumn":89},{"ruleId":"241","severity":1,"message":"278","line":1,"column":27,"nodeType":"243","messageId":"244","endLine":1,"endColumn":33},{"ruleId":"241","severity":1,"message":"279","line":1,"column":35,"nodeType":"243","messageId":"244","endLine":1,"endColumn":44},{"ruleId":"241","severity":1,"message":"280","line":6,"column":28,"nodeType":"243","messageId":"244","endLine":6,"endColumn":45},{"ruleId":"254","severity":1,"message":"255","line":13,"column":46,"nodeType":"256","messageId":"257","endLine":13,"endColumn":48},{"ruleId":"254","severity":1,"message":"255","line":17,"column":36,"nodeType":"256","messageId":"257","endLine":17,"endColumn":38},{"ruleId":"247","severity":1,"message":"281","line":20,"column":8,"nodeType":"249","endLine":20,"endColumn":10,"suggestions":"282"},{"ruleId":"241","severity":1,"message":"283","line":5,"column":13,"nodeType":"243","messageId":"244","endLine":5,"endColumn":14},{"ruleId":"241","severity":1,"message":"246","line":9,"column":20,"nodeType":"243","messageId":"244","endLine":9,"endColumn":28},{"ruleId":"251","severity":1,"message":"252","line":24,"column":25,"nodeType":"253","endLine":24,"endColumn":223},{"ruleId":"251","severity":1,"message":"252","line":27,"column":25,"nodeType":"253","endLine":27,"endColumn":223},{"ruleId":"251","severity":1,"message":"252","line":30,"column":25,"nodeType":"253","endLine":30,"endColumn":223},{"ruleId":"254","severity":1,"message":"258","line":68,"column":38,"nodeType":"256","messageId":"257","endLine":68,"endColumn":40},{"ruleId":"284","severity":1,"message":"285","line":72,"column":69,"nodeType":"286","messageId":"287","endLine":72,"endColumn":71},{"ruleId":"284","severity":1,"message":"285","line":73,"column":51,"nodeType":"286","messageId":"287","endLine":73,"endColumn":53},{"ruleId":"254","severity":1,"message":"258","line":76,"column":52,"nodeType":"256","messageId":"257","endLine":76,"endColumn":54},{"ruleId":"254","severity":1,"message":"258","line":78,"column":46,"nodeType":"256","messageId":"257","endLine":78,"endColumn":48},{"ruleId":"284","severity":1,"message":"285","line":79,"column":60,"nodeType":"286","messageId":"287","endLine":79,"endColumn":62},{"ruleId":"247","severity":1,"message":"288","line":89,"column":8,"nodeType":"249","endLine":89,"endColumn":20,"suggestions":"289"},{"ruleId":"254","severity":1,"message":"258","line":127,"column":34,"nodeType":"256","messageId":"257","endLine":127,"endColumn":36},{"ruleId":"254","severity":1,"message":"255","line":136,"column":48,"nodeType":"256","messageId":"257","endLine":136,"endColumn":50},{"ruleId":"270","severity":1,"message":"271","line":155,"column":9,"nodeType":"272","messageId":"273","endLine":161,"endColumn":10},{"ruleId":"270","severity":1,"message":"271","line":165,"column":9,"nodeType":"272","messageId":"273","endLine":171,"endColumn":10},{"ruleId":"284","severity":1,"message":"285","line":178,"column":45,"nodeType":"286","messageId":"287","endLine":178,"endColumn":47},{"ruleId":"254","severity":1,"message":"258","line":182,"column":28,"nodeType":"256","messageId":"257","endLine":182,"endColumn":30},{"ruleId":"284","severity":1,"message":"285","line":189,"column":69,"nodeType":"286","messageId":"287","endLine":189,"endColumn":71},{"ruleId":"284","severity":1,"message":"285","line":190,"column":47,"nodeType":"286","messageId":"287","endLine":190,"endColumn":49},{"ruleId":"254","severity":1,"message":"258","line":193,"column":48,"nodeType":"256","messageId":"257","endLine":193,"endColumn":50},{"ruleId":"254","severity":1,"message":"258","line":195,"column":42,"nodeType":"256","messageId":"257","endLine":195,"endColumn":44},{"ruleId":"284","severity":1,"message":"285","line":196,"column":56,"nodeType":"286","messageId":"287","endLine":196,"endColumn":58},{"ruleId":"254","severity":1,"message":"258","line":206,"column":34,"nodeType":"256","messageId":"257","endLine":206,"endColumn":36},{"ruleId":"254","severity":1,"message":"258","line":213,"column":25,"nodeType":"256","messageId":"257","endLine":213,"endColumn":27},{"ruleId":"254","severity":1,"message":"258","line":335,"column":64,"nodeType":"256","messageId":"257","endLine":335,"endColumn":66},{"ruleId":"254","severity":1,"message":"258","line":356,"column":29,"nodeType":"256","messageId":"257","endLine":356,"endColumn":31},{"ruleId":"254","severity":1,"message":"258","line":364,"column":77,"nodeType":"256","messageId":"257","endLine":364,"endColumn":79},{"ruleId":"254","severity":1,"message":"258","line":365,"column":45,"nodeType":"256","messageId":"257","endLine":365,"endColumn":47},{"ruleId":"254","severity":1,"message":"255","line":371,"column":25,"nodeType":"256","messageId":"257","endLine":371,"endColumn":27},{"ruleId":"254","severity":1,"message":"258","line":552,"column":37,"nodeType":"256","messageId":"257","endLine":552,"endColumn":39},{"ruleId":"241","severity":1,"message":"259","line":1,"column":17,"nodeType":"243","messageId":"244","endLine":1,"endColumn":25},{"ruleId":"241","severity":1,"message":"246","line":6,"column":20,"nodeType":"243","messageId":"244","endLine":6,"endColumn":28},{"ruleId":"270","severity":1,"message":"271","line":24,"column":17,"nodeType":"272","messageId":"273","endLine":31,"endColumn":18},{"ruleId":"270","severity":1,"message":"271","line":61,"column":17,"nodeType":"272","messageId":"273","endLine":68,"endColumn":18},{"ruleId":"254","severity":1,"message":"255","line":26,"column":16,"nodeType":"256","messageId":"257","endLine":26,"endColumn":18},{"ruleId":"254","severity":1,"message":"255","line":27,"column":16,"nodeType":"256","messageId":"257","endLine":27,"endColumn":18},{"ruleId":"254","severity":1,"message":"255","line":28,"column":16,"nodeType":"256","messageId":"257","endLine":28,"endColumn":18},{"ruleId":"247","severity":1,"message":"248","line":33,"column":8,"nodeType":"249","endLine":33,"endColumn":10,"suggestions":"290"},{"ruleId":"284","severity":1,"message":"285","line":54,"column":32,"nodeType":"286","messageId":"287","endLine":54,"endColumn":34},{"ruleId":"254","severity":1,"message":"255","line":55,"column":26,"nodeType":"256","messageId":"257","endLine":55,"endColumn":28},{"ruleId":"254","severity":1,"message":"255","line":95,"column":37,"nodeType":"256","messageId":"257","endLine":95,"endColumn":39},{"ruleId":"254","severity":1,"message":"255","line":98,"column":38,"nodeType":"256","messageId":"257","endLine":98,"endColumn":40},{"ruleId":"254","severity":1,"message":"255","line":98,"column":57,"nodeType":"256","messageId":"257","endLine":98,"endColumn":59},{"ruleId":"254","severity":1,"message":"255","line":101,"column":37,"nodeType":"256","messageId":"257","endLine":101,"endColumn":39},{"ruleId":"274","severity":1,"message":"275","line":160,"column":45,"nodeType":"253","endLine":160,"endColumn":131},{"ruleId":"241","severity":1,"message":"291","line":1,"column":10,"nodeType":"243","messageId":"244","endLine":1,"endColumn":14},{"ruleId":"241","severity":1,"message":"292","line":4,"column":10,"nodeType":"243","messageId":"244","endLine":4,"endColumn":20},{"ruleId":"241","severity":1,"message":"246","line":14,"column":20,"nodeType":"243","messageId":"244","endLine":14,"endColumn":28},{"ruleId":"274","severity":1,"message":"275","line":60,"column":21,"nodeType":"253","endLine":60,"endColumn":121},{"ruleId":"241","severity":1,"message":"246","line":13,"column":20,"nodeType":"243","messageId":"244","endLine":13,"endColumn":28},"no-native-reassign",["293"],"no-negated-in-lhs",["294"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'classes' is assigned a value but never used.","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loggedInUser.key'. Either include it or remove the dependency array.","ArrayExpression",["295"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'history?.location?.pathname'. Either include it or remove the dependency array.",["296"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'signupUser' is defined but never used.","React Hook useEffect has a missing dependency: 'signinUser'. Either include it or remove the dependency array.",["297"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["298"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useRef' is defined but never used.","'useEffect' is defined but never used.","'setActiveCategory' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'state.currentLoginFlow'. Either include them or remove the dependency array.",["299"],"'$' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'stepData'. Either include it or remove the dependency array.",["300"],["301"],"'data' is defined but never used.","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"302","fix":"314"},"Update the dependencies array to be: [loggedInUser.key]",{"range":"315","text":"316"},"Update the dependencies array to be: [history?.location?.pathname]",{"range":"317","text":"318"},"Update the dependencies array to be: [signinUser, thirdPartyResponse]",{"range":"319","text":"320"},"Update the dependencies array to be: [history?.location?.pathname, isMobile]",{"range":"321","text":"322"},"Update the dependencies array to be: [dispatch, state.currentLoginFlow]",{"range":"323","text":"324"},"Update the dependencies array to be: [activeStep, stepData]",{"range":"325","text":"326"},{"range":"327","text":"316"},[2423,2425],"[loggedInUser.key]",[844,846],"[history?.location?.pathname]",[1699,1719],"[signinUser, thirdPartyResponse]",[3060,3070],"[history?.location?.pathname, isMobile]",[914,916],"[dispatch, state.currentLoginFlow]",[4267,4279],"[activeStep, stepData]",[1592,1594]]