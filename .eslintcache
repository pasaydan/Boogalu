[{"/Users/danny/Documents/Projects/boogalu/src/index.js":"1","/Users/danny/Documents/Projects/boogalu/src/reportWebVitals.js":"2","/Users/danny/Documents/Projects/boogalu/src/Providers/StateProvider.js":"3","/Users/danny/Documents/Projects/boogalu/src/App.js":"4","/Users/danny/Documents/Projects/boogalu/src/Services/LocalstorageCache.js":"5","/Users/danny/Documents/Projects/boogalu/src/Components/Footer/index.js":"6","/Users/danny/Documents/Projects/boogalu/src/Components/Login/Login.js":"7","/Users/danny/Documents/Projects/boogalu/src/Components/Navigation/index.js":"8","/Users/danny/Documents/Projects/boogalu/src/Components/Admin/Subscription.js":"9","/Users/danny/Documents/Projects/boogalu/src/Components/Profile/Profile.js":"10","/Users/danny/Documents/Projects/boogalu/src/Components/Admin/Competition.js":"11","/Users/danny/Documents/Projects/boogalu/src/Components/EditProfile/EditProfile.js":"12","/Users/danny/Documents/Projects/boogalu/src/Reducers/index.js":"13","/Users/danny/Documents/Projects/boogalu/src/Components/Competitions/index.js":"14","/Users/danny/Documents/Projects/boogalu/src/Components/Upcoming/index.js":"15","/Users/danny/Documents/Projects/boogalu/src/Components/Splash/index.js":"16","/Users/danny/Documents/Projects/boogalu/src/Components/Subscriptions/index.js":"17","/Users/danny/Documents/Projects/boogalu/src/Components/Signup/index.js":"18","/Users/danny/Documents/Projects/boogalu/src/Components/Contactus/index.js":"19","/Users/danny/Documents/Projects/boogalu/src/Components/Homepage/index.js":"20","/Users/danny/Documents/Projects/boogalu/src/Components/VideoUploader/index.js":"21","/Users/danny/Documents/Projects/boogalu/src/Components/Page404/index.js":"22","/Users/danny/Documents/Projects/boogalu/src/Services/User.service.js":"23","/Users/danny/Documents/Projects/boogalu/src/Services/Upload.service.js":"24","/Users/danny/Documents/Projects/boogalu/src/Services/UploadedVideo.service.js":"25","/Users/danny/Documents/Projects/boogalu/src/Services/Competition.service.js":"26","/Users/danny/Documents/Projects/boogalu/src/Services/Subscription.service.js":"27","/Users/danny/Documents/Projects/boogalu/src/Services/EnrollCompetition.service.js":"28","/Users/danny/Documents/Projects/boogalu/src/Components/Vedio/Video.js":"29","/Users/danny/Documents/Projects/boogalu/src/Actions/User/index.js":"30","/Users/danny/Documents/Projects/boogalu/src/Services/Utils.js":"31","/Users/danny/Documents/Projects/boogalu/src/Data/RegistrationStepData.js":"32","/Users/danny/Documents/Projects/boogalu/src/Actions/LoginFlow/index.js":"33","/Users/danny/Documents/Projects/boogalu/src/Actions/Competition/index.js":"34","/Users/danny/Documents/Projects/boogalu/src/Services/firebase.js":"35","/Users/danny/Documents/Projects/boogalu/src/Components/CompetitionsDetails/index.js":"36","/Users/danny/Documents/Projects/boogalu/src/Constants/index.js":"37","/Users/danny/Documents/Projects/boogalu/src/Data/LessonsCategory.js":"38","/Users/danny/Documents/Projects/boogalu/src/Database/index.js":"39","/Users/danny/Documents/Projects/boogalu/src/Actions/Subscription/index.js":"40","/Users/danny/Documents/Projects/boogalu/src/Components/BuySubscription/index.js":"41","/Users/danny/Documents/Projects/boogalu/src/Components/EnrollCompetition/index.js":"42","/Users/danny/Documents/Projects/boogalu/src/Components/Loader/index.js":"43","/Users/danny/Documents/Projects/boogalu/src/Actions/Loader/index.js":"44"},{"size":714,"mtime":1607871183480,"results":"45","hashOfConfig":"46"},{"size":362,"mtime":1607448783643,"results":"47","hashOfConfig":"46"},{"size":987,"mtime":1612100632203,"results":"48","hashOfConfig":"46"},{"size":3624,"mtime":1612103324686,"results":"49","hashOfConfig":"46"},{"size":244,"mtime":1608092665797,"results":"50","hashOfConfig":"46"},{"size":4454,"mtime":1611990120104,"results":"51","hashOfConfig":"46"},{"size":14413,"mtime":1612102963471,"results":"52","hashOfConfig":"46"},{"size":11497,"mtime":1612095977538,"results":"53","hashOfConfig":"46"},{"size":7040,"mtime":1612089803597,"results":"54","hashOfConfig":"46"},{"size":10748,"mtime":1612103462121,"results":"55","hashOfConfig":"46"},{"size":8261,"mtime":1612089803596,"results":"56","hashOfConfig":"46"},{"size":12749,"mtime":1611657873315,"results":"57","hashOfConfig":"46"},{"size":1258,"mtime":1612101391708,"results":"58","hashOfConfig":"46"},{"size":4548,"mtime":1612102405077,"results":"59","hashOfConfig":"46"},{"size":1144,"mtime":1611500144741,"results":"60","hashOfConfig":"46"},{"size":337,"mtime":1610252476571,"results":"61","hashOfConfig":"46"},{"size":6013,"mtime":1612102775713,"results":"62","hashOfConfig":"46"},{"size":29360,"mtime":1612103085661,"results":"63","hashOfConfig":"46"},{"size":2054,"mtime":1611682060478,"results":"64","hashOfConfig":"46"},{"size":4885,"mtime":1612089803599,"results":"65","hashOfConfig":"46"},{"size":10515,"mtime":1612089803604,"results":"66","hashOfConfig":"46"},{"size":454,"mtime":1612089803600,"results":"67","hashOfConfig":"46"},{"size":2106,"mtime":1612005451251,"results":"68","hashOfConfig":"46"},{"size":2925,"mtime":1611659867189,"results":"69","hashOfConfig":"46"},{"size":1519,"mtime":1611658357929,"results":"70","hashOfConfig":"46"},{"size":3029,"mtime":1611657725425,"results":"71","hashOfConfig":"46"},{"size":2579,"mtime":1611998841256,"results":"72","hashOfConfig":"46"},{"size":3292,"mtime":1611776438217,"results":"73","hashOfConfig":"46"},{"size":616,"mtime":1611500501935,"results":"74","hashOfConfig":"46"},{"size":382,"mtime":1607543824191,"results":"75","hashOfConfig":"46"},{"size":1406,"mtime":1611638880845,"results":"76","hashOfConfig":"46"},{"size":7490,"mtime":1608453248853,"results":"77","hashOfConfig":"46"},{"size":306,"mtime":1611686954131,"results":"78","hashOfConfig":"46"},{"size":186,"mtime":1611686954131,"results":"79","hashOfConfig":"46"},{"size":984,"mtime":1611418181345,"results":"80","hashOfConfig":"46"},{"size":19589,"mtime":1612102552123,"results":"81","hashOfConfig":"46"},{"size":1149,"mtime":1612100758043,"results":"82","hashOfConfig":"46"},{"size":11937,"mtime":1610252476574,"results":"83","hashOfConfig":"46"},{"size":139,"mtime":1611420039353,"results":"84","hashOfConfig":"46"},{"size":189,"mtime":1612003974266,"results":"85","hashOfConfig":"46"},{"size":5719,"mtime":1612102898259,"results":"86","hashOfConfig":"46"},{"size":6532,"mtime":1612102693277,"results":"87","hashOfConfig":"46"},{"size":338,"mtime":1612100323181,"results":"88","hashOfConfig":"46"},{"size":286,"mtime":1612101381270,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"1gp1tlp",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"92"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"92"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"92"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"92"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"92"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"/Users/danny/Documents/Projects/boogalu/src/index.js",[],["191","192"],"/Users/danny/Documents/Projects/boogalu/src/reportWebVitals.js",[],"/Users/danny/Documents/Projects/boogalu/src/Providers/StateProvider.js",["193"],"import React, { createContext, useReducer, useContext } from 'react';\nimport storeReducer from '../Reducers';\nimport LocalstorageCache from '../Services/LocalstorageCache';\n\nconst loggedInUserState = {\n  name: '',\n  username: '',\n  email: '',\n  phone: '',\n  dob: '2017-05-24',\n  gender: '',\n  country: '',\n  state: '',\n  password: '',\n  confirmPassword: '',\n  bio: '',\n  tnc: true,\n  profileImage: '',\n  source: ''\n}\n\nconst initialState = localStorage.getItem(\"Choreoculture\") ? JSON.parse(localStorage.getItem(\"Choreoculture\"))\n  : {\n    loggedInUser: {},\n    isLoading: false,\n    currentLoginFlow: null\n  };\nconst store = createContext(initialState);\nconst { Provider } = store;\n\nconst useStoreConsumer = () => useContext(store);\n\nconst StateProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(LocalstorageCache(storeReducer), initialState);\n\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nexport { store, StateProvider, useStoreConsumer }","/Users/danny/Documents/Projects/boogalu/src/App.js",["194"],"/Users/danny/Documents/Projects/boogalu/src/Services/LocalstorageCache.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/Footer/index.js",["195","196","197","198","199","200","201"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport boogaluLogo from '../../Images/Boogalu-logo.svg';\nimport { FaInstagramSquare, FaYoutube, FaFacebookSquare } from 'react-icons/fa';\nimport * as $ from 'jquery';\n\nfunction Footer() {\n    const history = useHistory();\n    \n    useEffect(() => {\n        setTimeout(() => {\n            const pathName = history?.location?.pathname.split('/')[1];\n            const footerLinks = document.querySelectorAll('.js-page-links li');\n\n            if (footerLinks && footerLinks.length) {\n                footerLinks.forEach((ele) => {\n                    const getData = ele.getAttribute('data-name').toLocaleLowerCase();\n                    if (pathName?.length && getData.includes(pathName)) {\n                        ele.classList.add('active');\n                    }\n                });\n            }\n\n        }, 1000);\n\n    }, []);\n\n    function navigatePageLinks(event, path) {\n        const footerLinks = document.querySelectorAll('.js-page-links li');\n        if (footerLinks && footerLinks.length) {\n            footerLinks.forEach((ele) => {\n                const getData = ele.getAttribute('data-name').toLocaleLowerCase();\n                if (path?.length && getData.includes(path)) {\n                    ele.classList.add('active');\n                } else {\n                    if (ele.classList.contains('active')) {\n                        ele.classList.remove('active');    \n                    }\n                }\n            });\n        }\n        history.push(`/${path}`);\n        if (path) {\n            setTimeout(() => {\n                $('html,body').animate({\n                    scrollTop: 0\n                }, 700);\n            }, 100);\n        }\n    }\n\n    return (\n        <div>\n            <footer className=\"flex-container-VC\">\n                <div className=\"flex-1 copyright-wrap\">\n                    <div className=\"footer-logo-wrap\">\n                        <img src={boogaluLogo} alt=\"Logo\" className=\"image-7\" />\n                    </div>\n                    <div className=\"copyright-inner\">\n                        &#169; 2021 &nbsp;  \n                        <a href=\"https://www.choreoculture.com/\" target=\"_blank\">\n                            CHOREOCULTURE STUDIO.\n                        </a>\n                        <div>ALL RIGHTS RESERVED.</div>\n                    </div>\n                </div>\n                <div className=\"flex-1\">\n                    <div className=\"footer-tagline\" >Get the latest dance content &amp; ChoreoCulture news</div>\n                    <div className=\"email-input-inner\">\n                        <input type=\"email\" placeholder=\"Email\" />\n                    </div>\n                    <button className=\"subscribe\" >Subscribe</button>\n                </div>\n                <div className=\"footer-menus flex-1\">\n                    <ul className=\"menu-lists js-page-links flex-1\">\n                        <li data-name=\"career\">Careers</li>\n                        <li data-name=\"contactus\">\n                            <a onClick={(e) => navigatePageLinks(e, 'contactus')}>Contact us</a>\n                        </li>\n                        <li data-name=\"terms\">Terms</li>\n                    </ul>\n                    <ul className=\"menu-lists menu-lists-2 flex-1\">\n                        <li>\n                            <a href=\"https://www.instagram.com/choreo_culture/?hl=en\" title=\"Follow us on Insta\" target=\"_blank\">\n                                <i><FaInstagramSquare /></i>\n                                <span>Instagram</span>\n                            </a>\n                        </li>\n                        <li>\n                            <a href=\"https://www.youtube.com/user/anjanevents\" title=\"Subscribe our channel\" target=\"_blank\">\n                                <i><FaYoutube /></i>\n                                <span>Youtube</span>\n                            </a>\n                        </li>\n                        <li>\n                            <a href=\"https://www.facebook.com/choreocultureindia/\" title=\"Like our FB page\" target=\"_blank\">\n                                <i><FaFacebookSquare /></i>\n                                <span>Facebook</span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </footer>\n        </div>\n    )\n}\n\nexport default Footer\n","/Users/danny/Documents/Projects/boogalu/src/Components/Login/Login.js",["202","203","204","205","206","207","208","209","210","211","212"],"/Users/danny/Documents/Projects/boogalu/src/Components/Navigation/index.js",["213","214","215"],"import React, { useState, useEffect, useRef } from 'react';\nimport { FaHome, FaBookReader, FaCloudUploadAlt, FaTrophy, FaStaylinked } from 'react-icons/fa';\nimport boogaluLogo from '../../Images/Boogalu-logo.svg';\nimport { useHistory } from \"react-router-dom\";\nimport { useStoreConsumer } from '../../Providers/StateProvider';\nimport { logoutUser } from '../../Actions/User';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport { enableLoginFlow } from \"../../Actions/LoginFlow\";\nimport { disableLoginFlow } from \"../../Actions/LoginFlow\";\nimport VideoUploader from \"../VideoUploader\";\nimport * as $ from 'jquery';\nconst SCROLL_TOP_LIMIT = 200;\n\nfunction Navigation() {\n    const [goingUpClass, setGoingUpClass] = useState('');\n    const [hideVdoUploadBtn, setHideVdoUploadBtn] = useState(false);\n    const [didMount, setDidMount] = useState(false);\n    const [isMobile, toggleMobile] = useState(false);\n    const [goingDownClass, setGoingDownClass] = useState('');\n    const [showProfileTab, setShowProfileTab] = useState(false);\n    const ref = useRef();\n    const mobilHomelinkRef = useRef();\n    const history = useHistory();\n    const { state, dispatch } = useStoreConsumer();\n    const [openVdoUploadModal, setOpenVdoUploadModal] = useState(false)\n    useOnClickOutside(ref, () => setShowProfileTab(false));\n\n    useEffect(() => {\n        setDidMount(true);\n        setHideVdoUploadBtn(false);\n        let windowViewPortWidth = window.innerWidth;\n        if (windowViewPortWidth > 1023) {\n            toggleMobile(false);\n        } else {\n            toggleMobile(true);\n        }\n\n        const handleScroll = () => {\n            const currentScrollY = window.scrollY;\n            if (currentScrollY < SCROLL_TOP_LIMIT) {\n                setGoingUpClass('');\n                setGoingDownClass('');\n            } else {\n                setGoingUpClass('scrolled-up');\n                setTimeout(() => {\n                    setGoingDownClass('scrolled-down');\n                }, 200);\n            }\n        };\n\n        const windowResize = () => {\n            windowViewPortWidth = window.innerWidth;\n            if (windowViewPortWidth > 1023) {\n                toggleMobile(false);\n            } else {\n                toggleMobile(true);\n            }\n        }\n\n\n        setTimeout(() => {\n            const pathName = history?.location?.pathname.split('/')[1];\n            const navLinks = document.querySelectorAll('.nav-ul a');\n            if (pathName.includes('register') || pathName.includes('login') || pathName.includes('upload-video') || pathName.includes('admin') || pathName.includes('admin')) {\n                setHideVdoUploadBtn(true);\n            }\n            if (navLinks && navLinks.length) {\n                navLinks.forEach((ele) => {\n                    const getHref = ele.getAttribute('href').toLocaleLowerCase();\n                    if (pathName?.length && getHref.includes(pathName)) {\n                        ele.classList.add('active');\n                    }\n                });\n            }\n        }, 1000);\n\n        window.addEventListener(\"resize\", windowResize, { passive: true });\n        window.addEventListener(\"scroll\", handleScroll, { passive: true });\n        return () => setDidMount(false);\n    }, [isMobile]);\n\n    useEffect(() => {\n        const listenRouteChange = history.listen((location, action) => {\n            const pathName = location?.pathname.split('/')[1];\n            if (pathName.includes('register') || pathName.includes('login') || pathName.includes('upload-video') || pathName.includes('admin') || pathName.includes('admin')) setHideVdoUploadBtn(true);\n            else setHideVdoUploadBtn(false);\n            if ((!pathName || pathName.includes('lessons') || (pathName.includes('subscription') && state.currentLoginFlow !== 'competition-subscription' && state.currentLoginFlow !== 'competition') || pathName.includes('contactus') || pathName.includes('home')) && state.currentLoginFlow) {\n                dispatch(disableLoginFlow());\n            }\n        });\n    })\n\n    const logout = () => {\n        console.log('logout success');\n        dispatch(logoutUser());\n        setShowProfileTab(false)\n        history.push(`/login`);\n    }\n\n    const onClickNav = (e, route) => {\n        e.preventDefault();\n        const navLinks = document.querySelectorAll('.nav-ul a');\n\n        setTimeout(() => {\n            const pathName = history?.location?.pathname.split('/')[1];\n            if (pathName.includes('register') || pathName.includes('login') || pathName.includes('upload-video') || pathName.includes('admin')) setHideVdoUploadBtn(true);\n            else setHideVdoUploadBtn(false);\n        });\n\n        if (navLinks && navLinks.length) {\n            navLinks.forEach((ele) => {\n                if (ele.classList.contains('active')) {\n                    ele.classList.remove('active');\n                }\n            });\n        }\n        if (route) {\n            history.push(`/${route}`);\n            e.target.classList.add('active');\n            setTimeout(() => {\n                let target = $(`.${route}`);\n                if (target && target.offset()) {\n                    $('html,body').animate({\n                        scrollTop: target.offset().top - 200\n                    }, 700);\n                }\n            }, 100);\n        } else {\n            history.push(`/`);\n            setTimeout(() => {\n                let target = $(`.homepage`);\n                if (target.length) {\n                    $('html,body').animate({\n                        scrollTop: target.offset().top - 200\n                    }, 700);\n                }\n            }, 100);\n        }\n    }\n    // Hook\n    function useOnClickOutside(ref, handler) {\n        useEffect(\n            () => {\n                const listener = event => {\n                    if (!ref.current || ref.current.contains(event.target)) {\n                        return;\n                    }\n\n                    handler(event);\n                };\n                document.addEventListener('mousedown', listener);\n                document.addEventListener('touchstart', listener);\n                return () => {\n                    document.removeEventListener('mousedown', listener);\n                    document.removeEventListener('touchstart', listener);\n                };\n            },\n            [ref, handler]\n        );\n    }\n\n    function navigateToUserRegistrationLogin(path) {\n        setHideVdoUploadBtn(true);\n        history.push(`/${path}`)\n    }\n\n    if (!didMount) {\n        return null;\n    }\n\n    const uploadVdo = (e) => {\n        setHideVdoUploadBtn(true);\n        e.preventDefault();\n        if (state.loggedInUser && state.loggedInUser.email && state.loggedInUser.phone) {\n            // history.push({\n            //     pathname: '/upload-video',\n            //     state: null\n            // })\n            setOpenVdoUploadModal(true);\n        } else {\n            dispatch(enableLoginFlow('upload-video'));\n            history.push({\n                pathname: '/login',\n                state: null\n            })\n        }\n    }\n\n    return (\n        <>\n            <nav className={`navigation-wrap ${goingUpClass} ${goingDownClass}`}>\n                <div className=\"flex-container desktop-navigation\">\n                    <h1 title=\"home\" >\n                        <a href=\"/\" onClick={(e) => onClickNav(e, '')}>\n                            <img src={boogaluLogo} alt=\"Boogalu\" />\n                        </a>\n                    </h1>\n                    {\n                        !isMobile ?\n                            <ul className=\"flex-1 nav-ul\">\n                                <li><a href=\"#Lessons\" onClick={(e) => onClickNav(e, 'lessons')}>Lessons</a></li>\n                                <li><a href=\"#Competitions\" onClick={(e) => onClickNav(e, 'competitions')}>Competitions</a></li>\n                                <li><a href=\"#Subscription\" onClick={(e) => onClickNav(e, 'subscription')}>Subscription</a></li>\n                            </ul> : ''\n                    }\n                    {(!state.loggedInUser || !state.loggedInUser.phone) && <div className=\"flex-2 signup-wrap\" >\n                        <button className=\"btn primary-light login\" onClick={() => navigateToUserRegistrationLogin('login')}>Login</button>\n                        <button className=\"btn primary-dark signup\" onClick={() => navigateToUserRegistrationLogin('register')}>Sign Up</button>\n                    </div>}\n\n                    {state.loggedInUser && state.loggedInUser.phone && <div className=\"flex-2 signup-wrap\" >\n                        <div className=\"profile\" ref={ref}>\n                            <AccountCircleOutlinedIcon onClick={() => setShowProfileTab(true)} style={{ fontSize: '35px', paddingRight: '20px' }} />\n                            {showProfileTab && <div className=\"profile-tab-wrap\">\n                                <div className=\"profile\" onClick={() => { history.push('/profile'); setShowProfileTab(false) }}>Profile</div>\n                                <div className=\"logout\" onClick={() => logout()}>Logout</div>\n                            </div>}\n                        </div>\n                        {/* <button className=\"signup\" onClick={() => logout()}>Logout</button> */}\n                    </div>}\n                </div>\n                {\n                    !hideVdoUploadBtn ?\n                        <a href=\"\" className=\"upload-btn\" onClick={(e) => uploadVdo(e)}>\n                            <i><FaCloudUploadAlt /></i>\n                        </a> : ''\n                }\n                {\n                    isMobile ?\n                        <div className=\"sticky-mobile-menu\">\n                            <ul className=\"flex-1 nav-ul\">\n                                <li>\n                                    <a href=\"/\" ref={mobilHomelinkRef} onClick={(e) => onClickNav(e, '')}>\n                                        <i>\n                                            <FaHome />\n                                        </i>\n                                        <span>Home</span>\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href=\"#Lessons\" onClick={(e) => onClickNav(e, 'lessons')}>\n                                        <i><FaBookReader /></i>\n                                        <span>Lessons</span>\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href=\"#upload\" onClick={(e) => onClickNav(e, 'competitions')}>\n                                        <i><FaTrophy /></i>\n                                        <span>Competition</span>\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href=\"#Subscription\" onClick={(e) => onClickNav(e, 'subscription')}>\n                                        <i><FaStaylinked /></i>\n                                        <span>Subscription</span>\n                                    </a>\n                                </li>\n                            </ul>\n                        </div>\n                        : ''\n                }\n                {openVdoUploadModal && <VideoUploader />}\n            </nav>\n        </>\n    )\n}\nexport default Navigation","/Users/danny/Documents/Projects/boogalu/src/Components/Admin/Subscription.js",["216","217"],"import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ImageUploader from 'react-images-upload';\nimport Button from '@material-ui/core/Button';\nimport { uploadImage } from \"../../Services/Upload.service\";\nimport { saveSubscription } from \"../../Services/Subscription.service\";\n\nexport default function Subscription() {\n    const initialSubscriptionData = {\n        name: \"\",\n        desc: \"\",\n        active: true,\n        type: \"\",\n        amount: \"\",\n        img: \"\",\n        startAt: \"\",\n        endAt: \"\",\n        plans: \"\",\n    }\n    const [Subscription, setSubscription] = useState(initialSubscriptionData);\n\n    const handleChange = (prop, index) => (event) => {\n        let value = event.target.value;\n        if (prop === 'active') value = event.target.checked;\n        if (prop === 'prices') {\n            Subscription.prices[index] = event.target.value;\n            value = Subscription.prices;\n        }\n        setSubscription({ ...Subscription, [prop]: value });\n    };\n\n    const onimageUpload = (picture) => {\n        setSubscription({ ...Subscription, img: picture });\n    }\n\n    async function saveDetails(e) {\n        console.log(Subscription)\n        // upload Subscription image to bucket\n        if (Subscription.img[0]) {\n            const reader = new FileReader();\n            reader.readAsDataURL(Subscription.img[0]);\n            reader.onload = () => {\n                uploadImage(reader.result, 'subscription', 'small').subscribe((downloadableUrl) => {\n                    Subscription.img = downloadableUrl;\n                    // save Subscription data to db with imag url\n                    saveSubscription(Subscription).subscribe((response) => {\n                        console.log('Subscription success', response);\n                        setSubscription(initialSubscriptionData);\n                    })\n                })\n            }\n        } else {\n            saveSubscription(Subscription).subscribe((response) => {\n                console.log('Subscription success', response);\n                setSubscription(initialSubscriptionData);\n            })\n        }\n    }\n    return (\n        <div className=\"subscription-bo-wrap clearfix\">\n            <h1>Create a new Subscription</h1>\n            <div className=\"inner-form-wrap\">\n                <div className=\"input-wrap\">\n                    <TextField className=\"input-field\"\n                        required\n                        id=\"outlined-required-name\"\n                        label=\"Name\"\n                        onChange={handleChange('name')}\n                        value={Subscription.name}\n                        variant=\"outlined\"\n                    />\n                </div>\n                <div className=\"input-wrap\">\n                    <TextField className=\"input-field\"\n                        id=\"outlined-required-desc\"\n                        label=\"Description\"\n                        onChange={handleChange('desc')}\n                        value={Subscription.desc}\n                        variant=\"outlined\"\n                    />\n                </div>\n                <div className=\"input-wrap\">\n                    <TextField className=\"input-field\"\n                        id=\"outlined-required-amount\"\n                        label=\"Amount\"\n                        type=\"number\"\n                        onChange={handleChange('amount')}\n                        value={Subscription.amount}\n                        variant=\"outlined\"\n                    />\n                </div>\n                <div className=\"input-wrap\">\n                    <FormControl variant=\"outlined\" className=\"input-field\">\n                        <InputLabel id=\"select-outlined-label\">Plans</InputLabel>\n                        <Select\n                            labelId=\"select-outlined-label\"\n                            id=\"select-outlined\"\n                            value={Subscription.plans}\n                            onChange={handleChange('plans')}\n                        >\n                            <MenuItem value=\"monthly\">Monthly</MenuItem>\n                            <MenuItem value=\"annual\">Annual</MenuItem>\n                        </Select>\n                    </FormControl>\n                </div>\n                <div className=\"input-wrap data-time-wrap\">\n                    <TextField\n                        id=\"datetime-local-start\"\n                        label=\"Start Date & Time\"\n                        type=\"datetime-local\"\n                        value={Subscription.startAt}\n                        onChange={handleChange('startAt')}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField\n                        id=\"datetime-local-end\"\n                        label=\"End Date & Time\"\n                        type=\"datetime-local\"\n                        value={Subscription.endAt}\n                        onChange={handleChange('endAt')}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                </div>\n                {/* <div className=\"input-wrap\">\n                    <ImageUploader\n                        withIcon={true}\n                        buttonText='Upload image'\n                        onChange={onimageUpload}\n                        imgExtension={['.jpg', '.gif', '.png', '.gif', '.svg']}\n                        maxFileSize={5242880}\n                        accept=\"image/*\"\n                        withPreview={true}\n                        singleImage={true}\n                        label=\"Select subscription image\"\n                    />\n                </div> */}\n                <div className=\"input-wrap action-wrap\">\n                    <Button variant=\"contained\" color=\"primary\">Cancel</Button>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={(e) => saveDetails(e)}>Save</Button>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                required\n                                color=\"primary\"\n                                className=\"selected-item-checkbox\"\n                                checked={Subscription.active}\n                                onChange={handleChange('active')}\n                                inputProps={{ 'aria-label': 'secondary checkbox' }}\n                            />\n                        }\n                        label=\"Active Subscription\"\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n","/Users/danny/Documents/Projects/boogalu/src/Components/Profile/Profile.js",["218","219","220","221","222"],"/Users/danny/Documents/Projects/boogalu/src/Components/Admin/Competition.js",["223"],"import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ImageUploader from 'react-images-upload';\nimport Button from '@material-ui/core/Button';\nimport { saveCompetition } from \"../../Services/Competition.service\";\nimport { uploadImage } from \"../../Services/Upload.service\";\nimport { toBase64 } from \"../../Services/Utils\";\n\nexport default function Competition() {\n    const initialCompetitionData = {\n        name: \"\",\n        type: \"\",\n        desc: \"\",\n        active: true,\n        fee: \"\",\n        img: \"\",\n        startAt: \"\",\n        endAt: \"\",\n        prices: [],\n    }\n    const [CompetitionData, setCompetitionData] = useState(initialCompetitionData);\n\n    const handleChange = (prop, index) => (event) => {\n        let value = event.target.value;\n        if (prop === 'active') value = event.target.checked;\n        if (prop === 'prices') {\n            CompetitionData.prices[index] = event.target.value;\n            value = CompetitionData.prices;\n        }\n        setCompetitionData({ ...CompetitionData, [prop]: value });\n    };\n\n    const onimageUpload = (picture) => {\n        setCompetitionData({ ...CompetitionData, img: picture });\n    }\n\n    async function saveDetails(e) {\n        console.log(CompetitionData)\n        // upload competition image to bucket\n        if (CompetitionData.img[0]) {\n            const reader = new FileReader();\n            reader.readAsDataURL(CompetitionData.img[0]);\n            reader.onload = () => {\n                uploadImage(reader.result, 'competition', 'small').subscribe((downloadableUrl) => {\n                    CompetitionData.img = downloadableUrl;\n                    // save competition data to db with imag url\n                    saveCompetition(CompetitionData).subscribe((response) => {\n                        console.log('competition success', response);\n                        setCompetitionData(initialCompetitionData);\n                    })\n                })\n            }\n        }\n    }\n    return (\n        <div className=\"competition-bo-wrap clearfix\">\n            <h1>Launch a new competition</h1>\n            <div className=\"inner-form-wrap\">\n                <div className=\"input-wrap\">\n                    <TextField className=\"input-field\"\n                        required\n                        id=\"outlined-required-name\"\n                        label=\"Name\"\n                        onChange={handleChange('name')}\n                        value={CompetitionData.name}\n                        variant=\"outlined\"\n                    />\n                </div>\n                <div className=\"input-wrap\">\n                    <TextField className=\"input-field\"\n                        id=\"outlined-required-desc\"\n                        label=\"Description\"\n                        onChange={handleChange('desc')}\n                        value={CompetitionData.desc}\n                        variant=\"outlined\"\n                    />\n                </div>\n                <div className=\"input-wrap\">\n                    <TextField className=\"input-field\"\n                        id=\"outlined-required-fee\"\n                        label=\"Fee\"\n                        type=\"number\"\n                        onChange={handleChange('fee')}\n                        value={CompetitionData.fee}\n                        variant=\"outlined\"\n                    />\n                </div>\n                <div className=\"input-wrap\">\n                    <FormControl variant=\"outlined\" className=\"input-field\">\n                        <InputLabel id=\"select-outlined-label\">Type</InputLabel>\n                        <Select\n                            labelId=\"select-outlined-label\"\n                            id=\"select-outlined\"\n                            value={CompetitionData.type}\n                            onChange={handleChange('type')}\n                            label=\"Type\"\n                        >\n                            <MenuItem value=\"running\">Currently Running</MenuItem>\n                            <MenuItem value=\"upcomming\">Up-Comming</MenuItem>\n                        </Select>\n                    </FormControl>\n                </div>\n                <div className=\"input-wrap data-time-wrap\">\n                    <TextField\n                        id=\"datetime-local-start\"\n                        label=\"Start Date & Time\"\n                        type=\"datetime-local\"\n                        value={CompetitionData.startAt}\n                        onChange={handleChange('startAt')}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                     <TextField\n                        id=\"datetime-local-end\"\n                        label=\"End Date & Time\"\n                        type=\"datetime-local\"\n                        value={CompetitionData.endAt}\n                        onChange={handleChange('endAt')}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                </div>\n                <div className=\"input-wrap\">\n                    <TextField className=\"input-field\"\n                        required\n                        id=\"outlined-required-name\"\n                        label=\"First Price\"\n                        onChange={handleChange('prices', 0)}\n                        value={CompetitionData.prices[0]}\n                        variant=\"outlined\"\n                    />\n                </div>\n                <div className=\"input-wrap\">\n                    <TextField className=\"input-field\"\n                        required\n                        id=\"outlined-required-name\"\n                        label=\"Second Price\"\n                        onChange={handleChange('prices', 1)}\n                        value={CompetitionData.prices[1]}\n                        variant=\"outlined\"\n                    />\n                </div>\n                <div className=\"input-wrap\">\n                    <TextField className=\"input-field\"\n                        required\n                        id=\"outlined-required-name\"\n                        label=\"Third Price\"\n                        onChange={handleChange('prices', 2)}\n                        value={CompetitionData.prices[2]}\n                        variant=\"outlined\"\n                    />\n                </div>\n                <div className=\"input-wrap\">\n                    <ImageUploader\n                        withIcon={true}\n                        buttonText='Upload image'\n                        onChange={onimageUpload}\n                        imgExtension={['.jpg', '.gif', '.png', '.gif', '.svg']}\n                        maxFileSize={5242880}\n                        accept=\"image/*\"\n                        withPreview={true}\n                        singleImage={true}\n                        label=\"Select competition image\"\n                    />\n                </div>\n                <div className=\"input-wrap action-wrap\">\n                    <Button variant=\"contained\" color=\"primary\">Cancel</Button>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={(e) => saveDetails(e)}>Save</Button>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                required\n                                color=\"primary\"\n                                className=\"selected-item-checkbox\"\n                                checked={CompetitionData.active}\n                                onChange={handleChange('active')}\n                                inputProps={{ 'aria-label': 'secondary checkbox' }}\n                            />\n                        }\n                        label=\"Active Competition\"\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n","/Users/danny/Documents/Projects/boogalu/src/Components/EditProfile/EditProfile.js",["224","225","226"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useStoreConsumer } from '../../Providers/StateProvider';\nimport { signupUser } from '../../Actions/User';\nimport bgImg from '../../Images/bg1.svg';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport ArrowRightSharpIcon from '@material-ui/icons/ArrowRightSharp';\nimport * as $ from 'jquery';\nimport { updateUser } from \"../../Services/User.service\";\n\nexport default function EditProfile() {\n    const { state, dispatch } = useStoreConsumer();\n    const history = useHistory();\n    let loggedInUser = state.loggedInUser;\n    // get data from history props if redirected through google or facebook login\n    if (history.location.state && (history.location.state.source == 'Facebook' || history.location.state.source == 'Google')) {\n        loggedInUser.email = history.location.state.email;\n        loggedInUser.name = history.location.state.name;\n        // setNeedToRegisterError('You are not registered yet, Please register with Choreoculture.')\n    }\n    const [userDetails, setUserDetails] = useState(loggedInUser);\n    const [SignUpError, setSignUpError] = useState(null);\n    const [showHidePassword, setShowHidePassword] = useState({ showPassword: false, showConfirmPassword: false });\n\n    const handleChange = (prop) => (event) => {\n        setUserDetails({ ...userDetails, [prop]: event.target.value });\n        console.log(userDetails)\n    };\n\n    const handleClickShowPassword = (prop) => {\n        setShowHidePassword({ ...showHidePassword, [prop]: !showHidePassword[prop] });\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    useEffect(() => {\n        $('html,body').animate({\n            scrollTop: 0\n        }, 500);\n    }, [])\n\n    const setSignupUserCred = (e) => {\n        if (userDetails.password != userDetails.confirmPassword) {\n            setSignUpError('Password dose not match.');\n            return;\n        }\n\n        updateUser(userDetails.key, userDetails).subscribe(() => {\n            dispatch(signupUser(userDetails));\n            history.push(({\n                pathname: '/profile',\n                state: null\n            }));\n        })\n        e.preventDefault();\n    }\n\n    return (\n        <div className=\"logout-wrap clearfix\">\n            <form className=\"form-wrap clearfix\" onSubmit={setSignupUserCred}>\n                <div className=\"heading-outer\">\n                    <div className=\"heading1\">Update Profile</div>\n                </div>\n                <div className=\"form-outer clearfix\">\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-Name\"\n                            label=\"Name\"\n                            onChange={handleChange('name')}\n                            value={userDetails.name}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-Username\"\n                            label=\"Username\"\n                            onChange={handleChange('username')}\n                            value={userDetails.username}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            type=\"tel\"\n                            id=\"outlined-required-phone\"\n                            label=\"Phone\"\n                            onChange={handleChange('phone')}\n                            value={userDetails.phone}\n                            variant=\"outlined\"\n                            InputProps={{ readOnly: true }}\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-email\"\n                            label=\"Email\"\n                            type=\"email\"\n                            onChange={handleChange('email')}\n                            value={userDetails.email}\n                            variant=\"outlined\"\n                            InputProps={{ readOnly: true }}\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-country\"\n                            label=\"Country\"\n                            onChange={handleChange('country')}\n                            value={userDetails.country}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-state\"\n                            label=\"State\"\n                            onChange={handleChange('state')}\n                            value={userDetails.state}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl className=\"\" variant=\"outlined\" style={{ width: '100%' }}>\n                            <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n                            <OutlinedInput\n                                required\n                                id=\"outlined-adornment-password\"\n                                type={showHidePassword.showPassword ? 'text' : 'password'}\n                                value={userDetails.password}\n                                onChange={handleChange('password')}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={() => handleClickShowPassword('showPassword')}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showHidePassword.showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                labelWidth={70}\n                            />\n                        </FormControl>\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl className=\"\" variant=\"outlined\" style={{ width: '100%' }}>\n                            <InputLabel htmlFor=\"outlined-adornment-confirm-password\">Confirm Password</InputLabel>\n                            <OutlinedInput\n                                required\n                                id=\"outlined-adornment-confirm-password\"\n                                type={showHidePassword.showConfirmPassword ? 'text' : 'password'}\n                                value={userDetails.confirmPassword}\n                                onChange={handleChange('confirmPassword')}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle confirm password visibility\"\n                                            onClick={() => handleClickShowPassword('showConfirmPassword')}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showHidePassword.showConfirmPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                labelWidth={70}\n                            />\n                        </FormControl>\n                    </div>\n                    <div className=\"input-wrap\">\n                        <div className=\"dob-wrap\">\n                            <TextField className=\"input-field\"\n                                id=\"date\"\n                                label=\"Birthday\"\n                                type=\"date\"\n                                style={{ width: '100%' }}\n                                onChange={handleChange('dob')}\n                                value={userDetails.dob}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl variant=\"outlined\" className=\"input-field\">\n                            <InputLabel id=\"select-outlined-label\">Gender</InputLabel>\n                            <Select\n                                labelId=\"select-outlined-label\"\n                                id=\"select-outlined\"\n                                value={userDetails.gender}\n                                onChange={handleChange('gender')}\n                                label=\"Gender\"\n                            >\n                                <MenuItem value=\"Male\">Male</MenuItem>\n                                <MenuItem value=\"Female\">Female</MenuItem>\n                                <MenuItem value=\"Other\">Other</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div className=\"input-wrap\" style={{ width: '93%' }}>\n                        <TextField className=\"input-field bio-input\"\n                            id=\"outlined-required-bio\"\n                            label=\"Bio\"\n                            value={userDetails.bio}\n                            onChange={handleChange('bio')}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"tnc-wrap\">\n                        <div className=\"tnc-content clearfix\">\n                            <div className=\"checkbox-wrap\">\n                                <Checkbox\n                                    required\n                                    color=\"primary\"\n                                    checked={userDetails.tnc}\n                                    onChange={(e) => setUserDetails({ ...userDetails, tnc: e.target.checked })}\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                />\n                            </div>\n                            <div className=\"note-wrap\">Yes, I agree to the terms and conditions </div>\n                        </div>\n                    </div>\n                    {SignUpError && <div className=\"login-error\">\n                        {SignUpError}\n                    </div>}\n                    <div className=\"submit-btn clearfix\">\n                        <Button variant=\"contained\" type=\"submit\" color=\"primary\" >Update\n                         <ArrowRightSharpIcon />\n                        </Button>\n                    </div>\n                </div>\n            </form>\n            <div className=\"img-wrap\">\n                <img src={bgImg} alt=\"bg1\" />\n            </div>\n        </div>\n    );\n}","/Users/danny/Documents/Projects/boogalu/src/Reducers/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/Competitions/index.js",["227","228","229","230"],"/Users/danny/Documents/Projects/boogalu/src/Components/Upcoming/index.js",["231","232","233"],"import React, { useState, useRef, useEffect } from 'react'\nimport LessonsCategories from '../../Data/LessonsCategory';\nimport Video from \"../Vedio/Video\";\n\nfunction Upcoming () {\n    const [activeCategory, setActiveCategory] = useState(LessonsCategories[0]);\n    return (\n        <div className=\"lessons lessons-wrap\" id=\"upcomingLessons\">\n            <div className=\"inner-page\">\n                <h1>Learn from the Experts</h1>\n                <p>\n                    Lessons for all users from our expert faculty members.\n                    From Hip-Hop to Bharatnatyam. You'll get all learning videos\n                    at one place.\n                </p>\n                <p className=\"launching-soon\">Videos launching soon! Stay connected!</p>\n                <p className=\"from-our-expert-title\">Few sample lessons</p>\n                <div className=\"lessons-vdo-wrap\">\n                    {activeCategory.upcoming.map((item, index) => {\n                        return <Video key={'upcoming-'+index} vdoObj={item}></Video>\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Upcoming;\n","/Users/danny/Documents/Projects/boogalu/src/Components/Splash/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/Subscriptions/index.js",["234","235","236","237","238"],"/Users/danny/Documents/Projects/boogalu/src/Components/Signup/index.js",["239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266"],"/Users/danny/Documents/Projects/boogalu/src/Components/Contactus/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/Homepage/index.js",["267","268","269","270","271"],"import React, { useState, useEffect } from \"react\";\nimport { useStoreConsumer } from '../../Providers/StateProvider';\nimport bgImg from '../../Images/hip-hop.png';\nimport { useHistory } from \"react-router-dom\";\nimport * as $ from 'jquery';\n\nexport default function Homepage() {\n    const history = useHistory();\n    const { state, dispatch } = useStoreConsumer();\n    let loggedInUser = state.loggedInUser;\n    const [danceImageVisibleClass, activeDanceImage] = useState('');\n\n    useEffect(() => {\n        setTimeout(() => {\n            activeDanceImage('show');\n        }, 800);\n    }, []);\n\n    return (\n        <div className=\"homepage charcoal-bg clearfix\">\n            <div className=\"homepage-wrap clearfix\">\n                <div className=\"banner_vdo\">\n                    <div className=\"vdo_wrap rounded-dark-box\">\n                        <iframe width=\"100%\" src=\"https://www.youtube.com/embed/i3yMXpeLPuU\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                    </div>\n                    <div className=\"vdo_wrap rounded-dark-box\">\n                        <iframe width=\"100%\" src=\"https://www.youtube.com/embed/dM1ghaspLyc\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                    </div>\n                    <div className=\"vdo_wrap rounded-dark-box\">\n                        <iframe width=\"100%\" src=\"https://www.youtube.com/embed/U7NaFiqSeVE\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                    </div>\n                </div>\n                <div className=\"banner_img\">\n                    <h1>Dance Classes for Everyone</h1>\n                    <div className=\"get-started-wrap\">\n                        <h4>The world’s best dance learning tools – at your fingertips. Start free for 7 days.</h4>\n                        <button className=\"btn primary-light get_started\" onClick={() => {\n                            loggedInUser ? history.push('/competitions') : history.push('/login');\n                        }}>Get Started</button>\n                    </div>\n                </div>\n            </div>\n            <div className={`home-img-wrap ${danceImageVisibleClass}`}>\n                <img src={bgImg} alt=\"\" />\n            </div>\n            <div className=\"homepage-display-1 charcoal-bg-dark\">\n                <div className=\"learn_choreo\" id=\"Lessons\">\n                    <div className=\"heading-wrap\">\n                        <h2>\n                            Learn Choreography To <br /> Your Favorite Songs\n                        </h2>\n                        <div className=\"line1\">Dance to the music that makes YOU want to move at any skill level.</div>\n                    </div>\n                    <div className=\"flex-container vdo-wrap\" >\n                        <div className=\"flex-basis-3 rounded-dark-box\">\n                            <iframe className=\"iframe\" src=\"//www.youtube.com/embed/i3yMXpeLPuU?wmode=transparent&amp;autoplay=0&amp;theme=dark&amp;controls=0&amp;autohide=0&amp;loop=0&amp;showinfo=0&amp;rel=0&amp;playlist=false&amp;enablejsapi=0\" scrolling=\"no\" title=\"Vimeo embed\" frameBorder=\"0\" allow=\"autoplay; fullscreen\" allowFullScreen={false}>\n                            </iframe>\n                        </div>\n                        <div className=\"flex-basis-3 rounded-dark-box\">\n                            <iframe className=\"iframe\" src=\"//cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fplayer.vimeo.com%2Fvideo%2F453549133%3Fapp_id%3D122963&amp;dntp=1&amp;display_name=Vimeo&amp;url=https%3A%2F%2Fvimeo.com%2F453549133%3Flazy%3D1&amp;image=https%3A%2F%2Fi.vimeocdn.com%2Fvideo%2F951136340_1280.jpg&amp;key=96f1f04c5f4143bcb0f2e68c87d65feb&amp;type=text%2Fhtml&amp;schema=vimeo\" scrolling=\"no\" title=\"Vimeo embed\" frameBorder=\"0\" allow=\"autoplay; fullscreen\" allowFullScreen={false}>\n                            </iframe>\n                        </div>\n                        <div className=\"flex-basis-3 rounded-dark-box\">\n                            <iframe className=\"iframe\" src=\"//cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fplayer.vimeo.com%2Fvideo%2F453549133%3Fapp_id%3D122963&amp;dntp=1&amp;display_name=Vimeo&amp;url=https%3A%2F%2Fvimeo.com%2F453549133%3Flazy%3D1&amp;image=https%3A%2F%2Fi.vimeocdn.com%2Fvideo%2F951136340_1280.jpg&amp;key=96f1f04c5f4143bcb0f2e68c87d65feb&amp;type=text%2Fhtml&amp;schema=vimeo\" scrolling=\"no\" title=\"Vimeo embed\" frameBorder=\"0\" allow=\"autoplay; fullscreen\" allowFullScreen={false}>\n                            </iframe>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","/Users/danny/Documents/Projects/boogalu/src/Components/VideoUploader/index.js",["272","273","274"],"import React, { useRef, useState, useEffect } from 'react'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { useStoreConsumer } from '../../Providers/StateProvider';\nimport { uploadVideo, uploadImage } from \"../../Services/Upload.service\";\nimport { saveUploadedVideo } from \"../../Services/UploadedVideo.service\";\nimport { useHistory } from \"react-router-dom\";\nimport { THUMBNAIL_URL } from \"../../Constants\";\nimport ImageUploader from 'react-images-upload';\nimport { disableLoginFlow } from \"../../Actions/LoginFlow\";\nimport { FaCloudUploadAlt } from 'react-icons/fa';\n// modal imports\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\n\nexport default function VideoUploader({ selectedVdo, handleVdoUploadResponse }) {\n    const history = useHistory();\n    const { state, dispatch } = useStoreConsumer();\n    const loggedInUser = state.loggedInUser;\n    const uploaderRef = useRef(null);\n    const [SelectedVideo, setSelectedVideo] = useState(selectedVdo ? selectedVdo : { title: \"\", desc: \"\", file: null });\n    const [UploadedVdoUrl, setUploadedVdoUrl] = useState(null);\n    const [ThumbnailImage, setThumbnailImage] = useState(null);\n    const [openVdoUploaderModal, setOpenVdoUploaderModal] = useState(true);\n\n    useEffect(() => {\n        dispatch(disableLoginFlow());\n    }, [])\n\n    const useStyles = makeStyles((theme) => ({\n        modal: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n        },\n        paper: {\n            backgroundColor: theme.palette.background.paper,\n            border: '2px solid #000',\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2, 4, 3),\n        },\n    }));\n    const classes = useStyles();\n\n    async function onChangeFile(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        var file = event.target.files[0];\n        console.log(file);\n        if (file) {\n            setSelectedVideo({ ...SelectedVideo, file: null });\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                setSelectedVideo({ ...SelectedVideo, file: reader.result });\n            }\n            reader.onerror = error => console.error(error);\n        }\n    }\n\n    const handleChange = (prop) => (event) => {\n        setSelectedVideo({ ...SelectedVideo, [prop]: event.target.value });\n    };\n\n    async function uploadSelectedVideo() {\n        var thumbnailImage = THUMBNAIL_URL;\n        if (ThumbnailImage && ThumbnailImage[0]) {\n            const reader = new FileReader();\n            reader.readAsDataURL(ThumbnailImage[0]);\n            reader.onload = () => {\n                uploadImage(reader.result, 'thumbnail', 'small').subscribe((downloadableUrl) => {\n                    thumbnailImage = downloadableUrl;\n                })\n            }\n            reader.onerror = error => console.error(error);\n        }\n\n        uploadVideo(SelectedVideo.file).subscribe((response) => {\n            if (response.donePercentage) {\n                console.log('Upload is ' + response.donePercentage + '% done');\n            }\n            if (response.downloadURL && !UploadedVdoUrl) {\n                setUploadedVdoUrl(response.downloadURL);\n                const uploadObj = {\n                    title: SelectedVideo.title,\n                    desc: SelectedVideo.desc,\n                    url: response.downloadURL,\n                    userId: loggedInUser.key,\n                    thumbnail: thumbnailImage\n                }\n                saveUploadedVideo(uploadObj).subscribe((response) => {\n                    console.log(\"vedio data saved to db\", response);\n                    closeUploaderModal();\n                    if (state.currentLoginFlow == 'competition-uploadvdo') handleVdoUploadResponse(3);\n                    else history.push('/profile');\n                })\n            }\n        })\n        console.log(SelectedVideo);\n        console.log(loggedInUser);\n    }\n\n    const onThumbnailImgSelect = (picture) => {\n        setThumbnailImage(picture);\n    }\n\n    const closeUploaderModal = () => {\n        const pathName = history?.location?.pathname.split('/')[1];\n        if (pathName.includes('register') || pathName.includes('login')) {\n            history.push('/profile');\n        }\n        // else if (state.currentLoginFlow == 'competition-uploadvdo') history.push('/competition');\n        // handleClose();\n        setOpenVdoUploaderModal(false);\n\n    }\n    return (\n        <div>\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className='competition-modal-box'\n                open={openVdoUploaderModal}\n                onClose={() => closeUploaderModal(false)}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={openVdoUploaderModal}>\n                    <div className=\"video-uploader-inner-modal\">\n                        <IconButton className=\"close-modal-btn\" onClick={() => closeUploaderModal(false)}>\n                            <CloseIcon />\n                        </IconButton>\n                        <h3>Upload your dance performance video!</h3>\n                        <div className={`uploader-wrap ${SelectedVideo.file ? 'selected-file': ''}`}>\n                            {\n                                !SelectedVideo.file ?\n                                <div className=\"upload-input-wrap\">\n                                    <i className=\"upload-icon\"><FaCloudUploadAlt /></i>\n                                    <input id=\"myInput\"\n                                        type=\"file\"\n                                        accept=\"video/mp4,video/x-m4v,video/*\"\n                                        ref={uploaderRef}\n                                        onChange={(e) => onChangeFile(e)}\n                                    />\n                                </div> : ''\n                            }\n\n                            {!SelectedVideo.file ?\n                                <div className=\"upload-btn-file\">\n                                    <Button\n                                        variant=\"contained\" color=\"primary\"\n                                        onClick={() => { uploaderRef.current.click() }}>Upload Video</Button>\n                                </div> :\n                                <div className=\"video-information-wrap\">\n                                    <video width=\"400\" controls>\n                                        <source src={SelectedVideo.file} />\n                                    </video>\n                                    <div className=\"change-video-btn\">\n                                        <Button\n                                            variant=\"contained\" color=\"primary\"\n                                            onClick={() => { uploaderRef.current.click() }}\n                                        >Change vdo</Button>\n                                    </div>\n                                    <div className=\"input-form-wrap\">\n                                        <div className=\"input-wrap image-uploader-wrap\">\n                                            <ImageUploader\n                                                withIcon={true}\n                                                buttonText='Select image'\n                                                onChange={onThumbnailImgSelect}\n                                                imgExtension={['.jpg', '.gif', '.png', '.gif', '.svg']}\n                                                maxFileSize={5242880}\n                                                accept=\"image/*\"\n                                                withPreview={true}\n                                                singleImage={true}\n                                                label=\"Select thumbnail image\"\n                                            />\n                                        </div>\n                                        <div className=\"text-form-wrapper\">\n                                            <div className=\"input-field-wrap\">\n                                                <TextField className=\"input-field\"\n                                                    required\n                                                    id=\"outlined-required-title\"\n                                                    label=\"Video title\"\n                                                    onChange={handleChange('title')}\n                                                    value={SelectedVideo.title}\n                                                    variant=\"outlined\"\n                                                    autoComplete=\"off\"\n                                                />\n                                            </div>\n                                            <div className=\"input-field-wrap\">\n                                                <TextField className=\"input-field\"\n                                                    required\n                                                    id=\"outlined-required-desc\"\n                                                    label=\"Video description\"\n                                                    onChange={handleChange('desc')}\n                                                    value={SelectedVideo.desc}\n                                                    variant=\"outlined\"\n                                                    autoComplete=\"off\"\n                                                />\n                                            </div>\n                                            <Button variant=\"contained\" color=\"secondary\" onClick={(e) => uploadSelectedVideo(e)}>Upload</Button>\n                                        </div>\n                                    </div>\n                                </div>}\n                        </div>\n                    </div>\n                </Fade>\n            </Modal>\n        </div>\n    )\n}","/Users/danny/Documents/Projects/boogalu/src/Components/Page404/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Services/User.service.js",[],"/Users/danny/Documents/Projects/boogalu/src/Services/Upload.service.js",["275","276"],"import { Observable } from 'rxjs';\nimport firebase from './firebase';\nconst storageRef = firebase.storage().ref();\n\nconst BASE_PATH = '/uploads';\nvar FILE_NAME = '';\nvar FILE_PATH = '';\n// from ==> competition or user upload\n// type => small or large\nexport function uploadImage(image, from, type) {\n\n    let date = new Date();\n    let id = date.getTime().toString();\n    FILE_NAME = (type ? type : '') + 'pic' + id + '.jpg';\n    FILE_PATH = BASE_PATH + '/' + from + '/' + FILE_NAME;\n\n    let uploadTask = storageRef.child(FILE_PATH).putString(image, 'data_url');\n\n    return new Observable((observer) => {\n        uploadTask.on('state_changed',\n            (snapshot) => {\n                let progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                console.log('Upload is ' + progress + '% done');\n                switch (snapshot.state) {\n                    case firebase.storage.TaskState.PAUSED: // or 'paused'\n                        console.log('Upload is paused');\n                        break;\n                    case firebase.storage.TaskState.RUNNING: // or 'running'\n                        console.log('Upload is running');\n                        break;\n                }\n            }, (error) => {\n                console.log(error);\n            }, () => {\n                uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n                    observer.next(downloadURL);\n                });\n            });\n    });\n}\n\nexport function deleteImage(imageUrl) {\n    storageRef.refFromURL(imageUrl).delete();\n}\n\nexport function uploadVideo(video) {\n\n    let date = new Date();\n    let id = date.getTime().toString();\n    FILE_NAME = 'user' + id + '.mp4';\n    FILE_PATH = BASE_PATH + '/video/' + FILE_NAME;\n\n    let uploadTask = storageRef.child(FILE_PATH).putString(video, 'data_url');\n\n    return new Observable((observer) => {\n        uploadTask.on('state_changed',\n            (snapshot) => {\n                let progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                // console.log('Upload is ' + progress + '% done');\n                observer.next({ donePercentage: progress });\n                switch (snapshot.state) {\n                    case firebase.storage.TaskState.PAUSED: // or 'paused'\n                        console.log('Upload is paused');\n                        break;\n                    case firebase.storage.TaskState.RUNNING: // or 'running'\n                        console.log('Upload is running');\n                        break;\n                }\n            }, (error) => {\n                console.log(error);\n            }, () => {\n                uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n                    observer.next({ downloadURL });\n                });\n            });\n    });\n}\n\nexport function deleteVideo(videoUrl) {\n    storageRef.refFromURL(videoUrl).delete();\n}\n","/Users/danny/Documents/Projects/boogalu/src/Services/UploadedVideo.service.js",[],"/Users/danny/Documents/Projects/boogalu/src/Services/Competition.service.js",[],"/Users/danny/Documents/Projects/boogalu/src/Services/Subscription.service.js",[],"/Users/danny/Documents/Projects/boogalu/src/Services/EnrollCompetition.service.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/Vedio/Video.js",[],"/Users/danny/Documents/Projects/boogalu/src/Actions/User/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Services/Utils.js",["277","278","279"],"export function formatTime(time) {\n    time = new Date(time);\n    const hour24 = time.getHours();\n    let minutes = (time.getMinutes() === 0) ? '00' : time.getMinutes();\n    minutes = (minutes > 0 && minutes < 10) ? `0${minutes}` : minutes;\n    const ampm = (hour24 >= 12) ? 'PM' : 'AM';\n    let hour = hour24 % 12 || 12;\n    //append zero is hour is single digit\n    if (hour < 10) {\n        hour = `0${hour}`;\n    }\n    return `${hour}:${minutes} ${ampm}`;\n};\n\nexport function formatDate(date, status) {\n    date = new Date(date);\n    var monthNames = [\n        \"January\", \"February\", \"March\",\n        \"April\", \"May\", \"June\", \"July\",\n        \"August\", \"September\", \"October\",\n        \"November\", \"December\"\n    ];\n    let day = date.getDate();\n    let monthIndex = date.getMonth();\n    let year = date.getFullYear();\n    if (status == 3) return day + 'th ' + monthNames[monthIndex] + \" \" + year;\n    if (status == 2) return day + 'th ' + monthNames[monthIndex];\n    if (status == 1) return day;\n};\n\nexport function timeStampToNewDate(timeStamp) {\n    return new Date(timeStamp.seconds * 1000 + Math.round(timeStamp.nanoseconds / 1000000));\n}\n\nexport function toBase64(file) {\n    new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = error => reject(error);\n    });\n}","/Users/danny/Documents/Projects/boogalu/src/Data/RegistrationStepData.js",[],"/Users/danny/Documents/Projects/boogalu/src/Actions/LoginFlow/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Actions/Competition/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Services/firebase.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/CompetitionsDetails/index.js",["280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296"],"/Users/danny/Documents/Projects/boogalu/src/Constants/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Data/LessonsCategory.js",[],"/Users/danny/Documents/Projects/boogalu/src/Database/index.js",["297"],"import { data } from 'jquery';\nimport firebase from '../Services/firebase';\nconst database = firebase.firestore();\nexport default database;","/Users/danny/Documents/Projects/boogalu/src/Actions/Subscription/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/BuySubscription/index.js",["298","299","300","301","302","303"],"/Users/danny/Documents/Projects/boogalu/src/Components/EnrollCompetition/index.js",["304","305"],"/Users/danny/Documents/Projects/boogalu/src/Components/Loader/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Actions/Loader/index.js",[],{"ruleId":"306","replacedBy":"307"},{"ruleId":"308","replacedBy":"309"},{"ruleId":"310","severity":1,"message":"311","line":5,"column":7,"nodeType":"312","messageId":"313","endLine":5,"endColumn":24},{"ruleId":"310","severity":1,"message":"314","line":2,"column":50,"nodeType":"312","messageId":"313","endLine":2,"endColumn":54},{"ruleId":"310","severity":1,"message":"315","line":1,"column":17,"nodeType":"312","messageId":"313","endLine":1,"endColumn":25},{"ruleId":"316","severity":1,"message":"317","line":26,"column":8,"nodeType":"318","endLine":26,"endColumn":10,"suggestions":"319"},{"ruleId":"320","severity":1,"message":"321","line":61,"column":66,"nodeType":"322","endLine":61,"endColumn":81},{"ruleId":"323","severity":1,"message":"324","line":78,"column":29,"nodeType":"325","endLine":78,"endColumn":83},{"ruleId":"320","severity":1,"message":"321","line":84,"column":114,"nodeType":"322","endLine":84,"endColumn":129},{"ruleId":"320","severity":1,"message":"321","line":90,"column":110,"nodeType":"322","endLine":90,"endColumn":125},{"ruleId":"320","severity":1,"message":"321","line":96,"column":109,"nodeType":"322","endLine":96,"endColumn":124},{"ruleId":"310","severity":1,"message":"326","line":18,"column":21,"nodeType":"312","messageId":"313","endLine":18,"endColumn":31},{"ruleId":"316","severity":1,"message":"327","line":35,"column":8,"nodeType":"318","endLine":35,"endColumn":28,"suggestions":"328"},{"ruleId":"329","severity":1,"message":"330","line":63,"column":28,"nodeType":"331","messageId":"332","endLine":63,"endColumn":30},{"ruleId":"333","severity":1,"message":"334","line":157,"column":9,"nodeType":"335","messageId":"336","endLine":220,"endColumn":10},{"ruleId":"329","severity":1,"message":"337","line":175,"column":52,"nodeType":"331","messageId":"332","endLine":175,"endColumn":54},{"ruleId":"329","severity":1,"message":"337","line":176,"column":57,"nodeType":"331","messageId":"332","endLine":176,"endColumn":59},{"ruleId":"329","severity":1,"message":"337","line":177,"column":57,"nodeType":"331","messageId":"332","endLine":177,"endColumn":59},{"ruleId":"329","severity":1,"message":"337","line":203,"column":52,"nodeType":"331","messageId":"332","endLine":203,"endColumn":54},{"ruleId":"329","severity":1,"message":"337","line":204,"column":57,"nodeType":"331","messageId":"332","endLine":204,"endColumn":59},{"ruleId":"329","severity":1,"message":"337","line":205,"column":57,"nodeType":"331","messageId":"332","endLine":205,"endColumn":59},{"ruleId":"338","severity":1,"message":"339","line":316,"column":17,"nodeType":"325","endLine":316,"endColumn":36},{"ruleId":"316","severity":1,"message":"317","line":80,"column":8,"nodeType":"318","endLine":80,"endColumn":18,"suggestions":"340"},{"ruleId":"310","severity":1,"message":"341","line":83,"column":15,"nodeType":"312","messageId":"313","endLine":83,"endColumn":32},{"ruleId":"323","severity":1,"message":"342","line":224,"column":25,"nodeType":"325","endLine":224,"endColumn":89},{"ruleId":"310","severity":1,"message":"343","line":9,"column":8,"nodeType":"312","messageId":"313","endLine":9,"endColumn":21},{"ruleId":"310","severity":1,"message":"344","line":38,"column":11,"nodeType":"312","messageId":"313","endLine":38,"endColumn":24},{"ruleId":"310","severity":1,"message":"345","line":64,"column":11,"nodeType":"312","messageId":"313","endLine":64,"endColumn":18},{"ruleId":"310","severity":1,"message":"346","line":72,"column":32,"nodeType":"312","messageId":"313","endLine":72,"endColumn":53},{"ruleId":"316","severity":1,"message":"347","line":88,"column":8,"nodeType":"318","endLine":88,"endColumn":10,"suggestions":"348"},{"ruleId":"329","severity":1,"message":"337","line":134,"column":72,"nodeType":"331","messageId":"332","endLine":134,"endColumn":74},{"ruleId":"338","severity":1,"message":"339","line":228,"column":41,"nodeType":"325","endLine":228,"endColumn":74},{"ruleId":"310","severity":1,"message":"349","line":13,"column":10,"nodeType":"312","messageId":"313","endLine":13,"endColumn":18},{"ruleId":"329","severity":1,"message":"337","line":27,"column":66,"nodeType":"331","messageId":"332","endLine":27,"endColumn":68},{"ruleId":"329","severity":1,"message":"337","line":27,"column":113,"nodeType":"331","messageId":"332","endLine":27,"endColumn":115},{"ruleId":"329","severity":1,"message":"330","line":56,"column":34,"nodeType":"331","messageId":"332","endLine":56,"endColumn":36},{"ruleId":"350","severity":1,"message":"351","line":22,"column":51,"nodeType":"352","messageId":"353","endLine":22,"endColumn":53},{"ruleId":"329","severity":1,"message":"337","line":23,"column":104,"nodeType":"331","messageId":"332","endLine":23,"endColumn":106},{"ruleId":"329","severity":1,"message":"337","line":50,"column":36,"nodeType":"331","messageId":"332","endLine":50,"endColumn":38},{"ruleId":"316","severity":1,"message":"354","line":69,"column":8,"nodeType":"318","endLine":69,"endColumn":10,"suggestions":"355"},{"ruleId":"310","severity":1,"message":"356","line":1,"column":27,"nodeType":"312","messageId":"313","endLine":1,"endColumn":33},{"ruleId":"310","severity":1,"message":"357","line":1,"column":35,"nodeType":"312","messageId":"313","endLine":1,"endColumn":44},{"ruleId":"310","severity":1,"message":"358","line":6,"column":28,"nodeType":"312","messageId":"313","endLine":6,"endColumn":45},{"ruleId":"329","severity":1,"message":"337","line":32,"column":31,"nodeType":"331","messageId":"332","endLine":32,"endColumn":33},{"ruleId":"329","severity":1,"message":"337","line":62,"column":44,"nodeType":"331","messageId":"332","endLine":62,"endColumn":46},{"ruleId":"329","severity":1,"message":"337","line":70,"column":40,"nodeType":"331","messageId":"332","endLine":70,"endColumn":42},{"ruleId":"316","severity":1,"message":"359","line":75,"column":8,"nodeType":"318","endLine":75,"endColumn":10,"suggestions":"360"},{"ruleId":"316","severity":1,"message":"361","line":80,"column":8,"nodeType":"318","endLine":80,"endColumn":28,"suggestions":"362"},{"ruleId":"329","severity":1,"message":"330","line":69,"column":38,"nodeType":"331","messageId":"332","endLine":69,"endColumn":40},{"ruleId":"350","severity":1,"message":"351","line":73,"column":69,"nodeType":"352","messageId":"353","endLine":73,"endColumn":71},{"ruleId":"350","severity":1,"message":"351","line":74,"column":51,"nodeType":"352","messageId":"353","endLine":74,"endColumn":53},{"ruleId":"329","severity":1,"message":"330","line":77,"column":52,"nodeType":"331","messageId":"332","endLine":77,"endColumn":54},{"ruleId":"329","severity":1,"message":"330","line":79,"column":46,"nodeType":"331","messageId":"332","endLine":79,"endColumn":48},{"ruleId":"350","severity":1,"message":"351","line":80,"column":60,"nodeType":"352","messageId":"353","endLine":80,"endColumn":62},{"ruleId":"316","severity":1,"message":"363","line":90,"column":8,"nodeType":"318","endLine":90,"endColumn":20,"suggestions":"364"},{"ruleId":"329","severity":1,"message":"330","line":131,"column":34,"nodeType":"331","messageId":"332","endLine":131,"endColumn":36},{"ruleId":"329","severity":1,"message":"337","line":141,"column":48,"nodeType":"331","messageId":"332","endLine":141,"endColumn":50},{"ruleId":"329","severity":1,"message":"337","line":142,"column":53,"nodeType":"331","messageId":"332","endLine":142,"endColumn":55},{"ruleId":"329","severity":1,"message":"337","line":143,"column":48,"nodeType":"331","messageId":"332","endLine":143,"endColumn":50},{"ruleId":"333","severity":1,"message":"334","line":162,"column":9,"nodeType":"335","messageId":"336","endLine":168,"endColumn":10},{"ruleId":"333","severity":1,"message":"334","line":172,"column":9,"nodeType":"335","messageId":"336","endLine":178,"endColumn":10},{"ruleId":"350","severity":1,"message":"351","line":185,"column":45,"nodeType":"352","messageId":"353","endLine":185,"endColumn":47},{"ruleId":"329","severity":1,"message":"330","line":189,"column":28,"nodeType":"331","messageId":"332","endLine":189,"endColumn":30},{"ruleId":"350","severity":1,"message":"351","line":196,"column":69,"nodeType":"352","messageId":"353","endLine":196,"endColumn":71},{"ruleId":"350","severity":1,"message":"351","line":197,"column":47,"nodeType":"352","messageId":"353","endLine":197,"endColumn":49},{"ruleId":"329","severity":1,"message":"330","line":200,"column":48,"nodeType":"331","messageId":"332","endLine":200,"endColumn":50},{"ruleId":"329","severity":1,"message":"330","line":202,"column":42,"nodeType":"331","messageId":"332","endLine":202,"endColumn":44},{"ruleId":"350","severity":1,"message":"351","line":203,"column":56,"nodeType":"352","messageId":"353","endLine":203,"endColumn":58},{"ruleId":"329","severity":1,"message":"330","line":213,"column":34,"nodeType":"331","messageId":"332","endLine":213,"endColumn":36},{"ruleId":"329","severity":1,"message":"330","line":220,"column":25,"nodeType":"331","messageId":"332","endLine":220,"endColumn":27},{"ruleId":"329","severity":1,"message":"330","line":342,"column":64,"nodeType":"331","messageId":"332","endLine":342,"endColumn":66},{"ruleId":"329","severity":1,"message":"330","line":363,"column":29,"nodeType":"331","messageId":"332","endLine":363,"endColumn":31},{"ruleId":"329","severity":1,"message":"330","line":371,"column":77,"nodeType":"331","messageId":"332","endLine":371,"endColumn":79},{"ruleId":"329","severity":1,"message":"330","line":372,"column":45,"nodeType":"331","messageId":"332","endLine":372,"endColumn":47},{"ruleId":"329","severity":1,"message":"337","line":378,"column":25,"nodeType":"331","messageId":"332","endLine":378,"endColumn":27},{"ruleId":"329","severity":1,"message":"330","line":559,"column":37,"nodeType":"331","messageId":"332","endLine":559,"endColumn":39},{"ruleId":"310","severity":1,"message":"365","line":5,"column":13,"nodeType":"312","messageId":"313","endLine":5,"endColumn":14},{"ruleId":"310","severity":1,"message":"366","line":9,"column":20,"nodeType":"312","messageId":"313","endLine":9,"endColumn":28},{"ruleId":"367","severity":1,"message":"368","line":24,"column":25,"nodeType":"325","endLine":24,"endColumn":223},{"ruleId":"367","severity":1,"message":"368","line":27,"column":25,"nodeType":"325","endLine":27,"endColumn":223},{"ruleId":"367","severity":1,"message":"368","line":30,"column":25,"nodeType":"325","endLine":30,"endColumn":223},{"ruleId":"316","severity":1,"message":"369","line":32,"column":8,"nodeType":"318","endLine":32,"endColumn":10,"suggestions":"370"},{"ruleId":"310","severity":1,"message":"345","line":47,"column":11,"nodeType":"312","messageId":"313","endLine":47,"endColumn":18},{"ruleId":"329","severity":1,"message":"337","line":98,"column":48,"nodeType":"331","messageId":"332","endLine":98,"endColumn":50},{"ruleId":"333","severity":1,"message":"334","line":24,"column":17,"nodeType":"335","messageId":"336","endLine":31,"endColumn":18},{"ruleId":"333","severity":1,"message":"334","line":61,"column":17,"nodeType":"335","messageId":"336","endLine":68,"endColumn":18},{"ruleId":"329","severity":1,"message":"337","line":26,"column":16,"nodeType":"331","messageId":"332","endLine":26,"endColumn":18},{"ruleId":"329","severity":1,"message":"337","line":27,"column":16,"nodeType":"331","messageId":"332","endLine":27,"endColumn":18},{"ruleId":"329","severity":1,"message":"337","line":28,"column":16,"nodeType":"331","messageId":"332","endLine":28,"endColumn":18},{"ruleId":"329","severity":1,"message":"337","line":59,"column":98,"nodeType":"331","messageId":"332","endLine":59,"endColumn":100},{"ruleId":"350","severity":1,"message":"351","line":61,"column":43,"nodeType":"352","messageId":"353","endLine":61,"endColumn":45},{"ruleId":"329","severity":1,"message":"337","line":63,"column":45,"nodeType":"331","messageId":"332","endLine":63,"endColumn":47},{"ruleId":"316","severity":1,"message":"371","line":78,"column":8,"nodeType":"318","endLine":78,"endColumn":20,"suggestions":"372"},{"ruleId":"310","severity":1,"message":"373","line":81,"column":15,"nodeType":"312","messageId":"313","endLine":81,"endColumn":29},{"ruleId":"329","severity":1,"message":"337","line":84,"column":30,"nodeType":"331","messageId":"332","endLine":84,"endColumn":32},{"ruleId":"329","severity":1,"message":"337","line":110,"column":97,"nodeType":"331","messageId":"332","endLine":110,"endColumn":99},{"ruleId":"350","severity":1,"message":"351","line":118,"column":32,"nodeType":"352","messageId":"353","endLine":118,"endColumn":34},{"ruleId":"329","severity":1,"message":"337","line":119,"column":26,"nodeType":"331","messageId":"332","endLine":119,"endColumn":28},{"ruleId":"350","severity":1,"message":"351","line":183,"column":43,"nodeType":"352","messageId":"353","endLine":183,"endColumn":45},{"ruleId":"329","severity":1,"message":"337","line":185,"column":45,"nodeType":"331","messageId":"332","endLine":185,"endColumn":47},{"ruleId":"329","severity":1,"message":"337","line":217,"column":42,"nodeType":"331","messageId":"332","endLine":217,"endColumn":44},{"ruleId":"329","severity":1,"message":"337","line":220,"column":42,"nodeType":"331","messageId":"332","endLine":220,"endColumn":44},{"ruleId":"329","severity":1,"message":"337","line":220,"column":61,"nodeType":"331","messageId":"332","endLine":220,"endColumn":63},{"ruleId":"329","severity":1,"message":"337","line":224,"column":42,"nodeType":"331","messageId":"332","endLine":224,"endColumn":44},{"ruleId":"329","severity":1,"message":"337","line":224,"column":61,"nodeType":"331","messageId":"332","endLine":224,"endColumn":63},{"ruleId":"329","severity":1,"message":"330","line":327,"column":74,"nodeType":"331","messageId":"332","endLine":327,"endColumn":76},{"ruleId":"310","severity":1,"message":"374","line":1,"column":10,"nodeType":"312","messageId":"313","endLine":1,"endColumn":14},{"ruleId":"310","severity":1,"message":"356","line":1,"column":17,"nodeType":"312","messageId":"313","endLine":1,"endColumn":23},{"ruleId":"310","severity":1,"message":"375","line":22,"column":12,"nodeType":"312","messageId":"313","endLine":22,"endColumn":31},{"ruleId":"329","severity":1,"message":"337","line":65,"column":36,"nodeType":"331","messageId":"332","endLine":65,"endColumn":38},{"ruleId":"329","severity":1,"message":"337","line":94,"column":37,"nodeType":"331","messageId":"332","endLine":94,"endColumn":39},{"ruleId":"329","severity":1,"message":"337","line":108,"column":37,"nodeType":"331","messageId":"332","endLine":108,"endColumn":39},{"ruleId":"329","severity":1,"message":"337","line":112,"column":37,"nodeType":"331","messageId":"332","endLine":112,"endColumn":39},{"ruleId":"316","severity":1,"message":"376","line":31,"column":8,"nodeType":"318","endLine":31,"endColumn":10,"suggestions":"377"},{"ruleId":"338","severity":1,"message":"339","line":117,"column":21,"nodeType":"325","endLine":117,"endColumn":121},"no-native-reassign",["378"],"no-negated-in-lhs",["379"],"no-unused-vars","'loggedInUserState' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history?.location?.pathname'. Either include it or remove the dependency array.","ArrayExpression",["380"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'signupUser' is defined but never used.","React Hook useEffect has a missing dependency: 'signinUser'. Either include it or remove the dependency array.",["381"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Expected '===' and instead saw '=='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["382"],"'listenRouteChange' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'ImageUploader' is defined but never used.","'onimageUpload' is assigned a value but never used.","'classes' is assigned a value but never used.","'setUserLikedVideoList' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'loggedInUser.key', and 'onWindowScroll'. Either include them or remove the dependency array.",["383"],"'toBase64' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'dispatch', 'loggedInUser.email', 'loggedInUser.phone', 'loggedInUser.subscriptions', 'prepareUserCompData', and 'state.currentLoginFlow'. Either include them or remove the dependency array.",["384"],"'useRef' is defined but never used.","'useEffect' is defined but never used.","'setActiveCategory' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'history', 'loggedInUser', 'state.activeSubscription.key', 'state.activeSubscription.type', and 'state.currentLoginFlow'. Either include them or remove the dependency array.",["385"],"React Hook useEffect has a missing dependency: 'loggedInUser?.subscriptions'. Either include it or remove the dependency array.",["386"],"React Hook useEffect has a missing dependency: 'stepData'. Either include it or remove the dependency array.",["387"],"'$' is defined but never used.","'dispatch' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["388"],"React Hook useEffect has missing dependencies: 'competitionDetails', 'dispatch', 'loggedInUser.email', 'loggedInUser.key', 'loggedInUser.phone', and 'userUploadedVdos.length'. Either include them or remove the dependency array.",["389"],"'getCurrentData' is assigned a value but never used.","'data' is defined but never used.","'subsciptionValidity' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loggedInUser.subscriptions'. Either include it or remove the dependency array.",["390"],"no-global-assign","no-unsafe-negation",{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},{"desc":"395","fix":"396"},{"desc":"397","fix":"398"},{"desc":"399","fix":"400"},{"desc":"401","fix":"402"},{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"407","fix":"408"},{"desc":"409","fix":"410"},{"desc":"411","fix":"412"},"Update the dependencies array to be: [history?.location?.pathname]",{"range":"413","text":"414"},"Update the dependencies array to be: [signinUser, thirdPartyResponse]",{"range":"415","text":"416"},"Update the dependencies array to be: [history?.location?.pathname, isMobile]",{"range":"417","text":"418"},"Update the dependencies array to be: [dispatch, loggedInUser.key, onWindowScroll]",{"range":"419","text":"420"},"Update the dependencies array to be: [dispatch, loggedInUser.email, loggedInUser.phone, loggedInUser.subscriptions, prepareUserCompData, state.currentLoginFlow]",{"range":"421","text":"422"},"Update the dependencies array to be: [dispatch, history, loggedInUser, state.activeSubscription.key, state.activeSubscription.type, state.currentLoginFlow]",{"range":"423","text":"424"},"Update the dependencies array to be: [loggedInUser?.subscriptions, state.loggedInUser]",{"range":"425","text":"426"},"Update the dependencies array to be: [activeStep, stepData]",{"range":"427","text":"428"},"Update the dependencies array to be: [dispatch]",{"range":"429","text":"430"},"Update the dependencies array to be: [ActiveStep, competitionDetails, dispatch, loggedInUser.email, loggedInUser.key, loggedInUser.phone, userUploadedVdos.length]",{"range":"431","text":"432"},"Update the dependencies array to be: [loggedInUser.subscriptions]",{"range":"433","text":"434"},[925,927],"[history?.location?.pathname]",[1887,1907],"[signinUser, thirdPartyResponse]",[3285,3295],"[history?.location?.pathname, isMobile]",[3510,3512],"[dispatch, loggedInUser.key, onWindowScroll]",[3229,3231],"[dispatch, loggedInUser.email, loggedInUser.phone, loggedInUser.subscriptions, prepareUserCompData, state.currentLoginFlow]",[3825,3827],"[dispatch, history, loggedInUser, state.activeSubscription.key, state.activeSubscription.type, state.currentLoginFlow]",[4050,4070],"[loggedInUser?.subscriptions, state.loggedInUser]",[4337,4349],"[activeStep, stepData]",[1590,1592],"[dispatch]",[3773,3785],"[ActiveStep, competitionDetails, dispatch, loggedInUser.email, loggedInUser.key, loggedInUser.phone, userUploadedVdos.length]",[1550,1552],"[loggedInUser.subscriptions]"]