[{"/Users/danny/Documents/Projects/boogalu/src/index.js":"1","/Users/danny/Documents/Projects/boogalu/src/reportWebVitals.js":"2","/Users/danny/Documents/Projects/boogalu/src/Providers/StateProvider.js":"3","/Users/danny/Documents/Projects/boogalu/src/App.js":"4","/Users/danny/Documents/Projects/boogalu/src/Services/LocalstorageCache.js":"5","/Users/danny/Documents/Projects/boogalu/src/Components/Admin/Competition.js":"6","/Users/danny/Documents/Projects/boogalu/src/Components/Profile/Profile.js":"7","/Users/danny/Documents/Projects/boogalu/src/Components/EditProfile/EditProfile.js":"8","/Users/danny/Documents/Projects/boogalu/src/Components/Footer/index.js":"9","/Users/danny/Documents/Projects/boogalu/src/Components/Login/Login.js":"10","/Users/danny/Documents/Projects/boogalu/src/Components/Navigation/index.js":"11","/Users/danny/Documents/Projects/boogalu/src/Reducers/index.js":"12","/Users/danny/Documents/Projects/boogalu/src/Components/Upcoming/index.js":"13","/Users/danny/Documents/Projects/boogalu/src/Components/Splash/index.js":"14","/Users/danny/Documents/Projects/boogalu/src/Components/Competitions/index.js":"15","/Users/danny/Documents/Projects/boogalu/src/Components/Homepage/index.js":"16","/Users/danny/Documents/Projects/boogalu/src/Components/Contactus/index.js":"17","/Users/danny/Documents/Projects/boogalu/src/Components/Signup/index.js":"18","/Users/danny/Documents/Projects/boogalu/src/Components/Subscription/index.js":"19","/Users/danny/Documents/Projects/boogalu/src/Services/Competition.service.js":"20","/Users/danny/Documents/Projects/boogalu/src/Services/Upload.service.js":"21","/Users/danny/Documents/Projects/boogalu/src/Services/Utils.js":"22","/Users/danny/Documents/Projects/boogalu/src/Services/UploadedVideo.service.js":"23","/Users/danny/Documents/Projects/boogalu/src/Services/User.service.js":"24","/Users/danny/Documents/Projects/boogalu/src/Components/Vedio/Video.js":"25","/Users/danny/Documents/Projects/boogalu/src/Actions/User/index.js":"26","/Users/danny/Documents/Projects/boogalu/src/Data/LessonsCategory.js":"27","/Users/danny/Documents/Projects/boogalu/src/Data/RegistrationStepData.js":"28","/Users/danny/Documents/Projects/boogalu/src/Services/firebase.js":"29","/Users/danny/Documents/Projects/boogalu/src/Constants/index.js":"30","/Users/danny/Documents/Projects/boogalu/src/Actions/Competition/index.js":"31","/Users/danny/Documents/Projects/boogalu/src/Components/CompetitionsDetails/index.js":"32","/Users/danny/Documents/Projects/boogalu/src/Database/index.js":"33","/Users/danny/Documents/Projects/boogalu/src/Components/EnrollCompetition/index.js":"34","/Users/danny/Documents/Projects/boogalu/src/Components/VideoUploader/index.js":"35","/Users/danny/Documents/Projects/boogalu/src/Actions/LoginFlow/index.js":"36","/Users/danny/Documents/Projects/boogalu/src/Services/EnrollCompetition.service.js":"37"},{"size":714,"mtime":1607871183480,"results":"38","hashOfConfig":"39"},{"size":362,"mtime":1607448783643,"results":"40","hashOfConfig":"39"},{"size":965,"mtime":1611688670329,"results":"41","hashOfConfig":"39"},{"size":3092,"mtime":1611686954132,"results":"42","hashOfConfig":"39"},{"size":244,"mtime":1608092665797,"results":"43","hashOfConfig":"39"},{"size":7697,"mtime":1611768313081,"results":"44","hashOfConfig":"39"},{"size":9231,"mtime":1611988263583,"results":"45","hashOfConfig":"39"},{"size":12749,"mtime":1611657873315,"results":"46","hashOfConfig":"39"},{"size":3547,"mtime":1611682060479,"results":"47","hashOfConfig":"39"},{"size":13888,"mtime":1611989553659,"results":"48","hashOfConfig":"39"},{"size":11120,"mtime":1611990027562,"results":"49","hashOfConfig":"39"},{"size":897,"mtime":1611688676513,"results":"50","hashOfConfig":"39"},{"size":1144,"mtime":1611500144741,"results":"51","hashOfConfig":"39"},{"size":337,"mtime":1610252476571,"results":"52","hashOfConfig":"39"},{"size":3567,"mtime":1611989989736,"results":"53","hashOfConfig":"39"},{"size":4880,"mtime":1611682243957,"results":"54","hashOfConfig":"39"},{"size":2054,"mtime":1611682060478,"results":"55","hashOfConfig":"39"},{"size":29017,"mtime":1611701108878,"results":"56","hashOfConfig":"39"},{"size":1909,"mtime":1611682060480,"results":"57","hashOfConfig":"39"},{"size":3029,"mtime":1611657725425,"results":"58","hashOfConfig":"39"},{"size":2925,"mtime":1611659867189,"results":"59","hashOfConfig":"39"},{"size":1406,"mtime":1611638880845,"results":"60","hashOfConfig":"39"},{"size":1519,"mtime":1611658357929,"results":"61","hashOfConfig":"39"},{"size":1832,"mtime":1611657831156,"results":"62","hashOfConfig":"39"},{"size":616,"mtime":1611500501935,"results":"63","hashOfConfig":"39"},{"size":382,"mtime":1607543824191,"results":"64","hashOfConfig":"39"},{"size":11937,"mtime":1610252476574,"results":"65","hashOfConfig":"39"},{"size":7490,"mtime":1608453248853,"results":"66","hashOfConfig":"39"},{"size":984,"mtime":1611418181345,"results":"67","hashOfConfig":"39"},{"size":486,"mtime":1611686954135,"results":"68","hashOfConfig":"39"},{"size":186,"mtime":1611686954131,"results":"69","hashOfConfig":"39"},{"size":11422,"mtime":1611990012467,"results":"70","hashOfConfig":"39"},{"size":139,"mtime":1611420039353,"results":"71","hashOfConfig":"39"},{"size":4892,"mtime":1611776492967,"results":"72","hashOfConfig":"39"},{"size":9110,"mtime":1611989811849,"results":"73","hashOfConfig":"39"},{"size":306,"mtime":1611686954131,"results":"74","hashOfConfig":"39"},{"size":3292,"mtime":1611776438217,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1gp1tlp",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"78"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"78"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"/Users/danny/Documents/Projects/boogalu/src/index.js",[],["164","165"],"/Users/danny/Documents/Projects/boogalu/src/reportWebVitals.js",[],"/Users/danny/Documents/Projects/boogalu/src/Providers/StateProvider.js",["166"],"import React, { createContext, useReducer, useContext } from 'react';\nimport storeReducer from '../Reducers';\nimport LocalstorageCache from '../Services/LocalstorageCache';\n\nconst loggedInUserState = {\n  name: '',\n  username: '',\n  email: '',\n  phone: '',\n  dob: '2017-05-24',\n  gender: '',\n  country: '',\n  state: '',\n  password: '',\n  confirmPassword: '',\n  bio: '',\n  tnc: true,\n  profileImage: '',\n  source: ''\n}\n\nconst initialState = localStorage.getItem(\"Choreoculture\") ? JSON.parse(localStorage.getItem(\"Choreoculture\"))\n  : {\n    loggedInUser: {},\n    currentLoginFlow: null\n  };\nconst store = createContext(initialState);\nconst { Provider } = store;\n\nconst useStoreConsumer = () => useContext(store);\n\nconst StateProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(LocalstorageCache(storeReducer), initialState);\n\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nexport { store, StateProvider, useStoreConsumer }","/Users/danny/Documents/Projects/boogalu/src/App.js",["167"],"import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"./App.scss\"\nimport Login from \"./Components/Login/Login\";\nimport SplashScreen from './Components/Splash';\nimport Navigation from \"./Components/Navigation/index\";\nimport Homepage from \"./Components/Homepage\";\nimport Footer from \"./Components/Footer/index\";\nimport Signup from \"./Components/Signup\";\nimport Profile from \"./Components/Profile/Profile\";\nimport Upcoming from \"./Components/Upcoming\";\nimport Competitions from \"./Components/Competitions\";\nimport Competition from \"./Components/Admin/Competition\"\nimport Subscription from \"./Components/Subscription\";\nimport EditProfile from \"./Components/EditProfile/EditProfile\";\nimport ContactUs from \"./Components/Contactus\";\nimport VideoUploader from \"./Components/VideoUploader\";\n\nfunction App() {\n  const [isSplashVisible, toggleSplash] = useState(true);\n  const [transitionOpacityClass, toggleTransition] = useState('');\n  useEffect(() => {\n    setTimeout(() => {\n      toggleSplash(false);\n    }, 2500);\n\n    setTimeout(() => {\n      toggleTransition('visible-transition');\n    }, 2800);\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        {\n          isSplashVisible ?\n            <SplashScreen />\n            :\n            <div className={`main-content-wrapper ${transitionOpacityClass}`}>\n              <Navigation />\n              <Switch>\n                <Route exact path=\"/contactus\">\n                  <ContactUs />\n                </Route>\n                <Route exact path=\"/login:plan\">\n                  <Login />\n                </Route>\n                <Route exact path=\"/login\">\n                  <Login />\n                </Route>\n                <Route exact path=\"/profile/edit\">\n                  <EditProfile />\n                </Route>\n                <Route exact path=\"/register:plan\">\n                  <Signup />\n                </Route>\n                <Route exact path=\"/register\">\n                  <Signup />\n                </Route>\n                <Route exact path=\"/lessons\">\n                  <Upcoming />\n                </Route>\n                <Route exact path=\"/competitions\">\n                  <Competitions />\n                </Route>\n                <Route exact path=\"/subscription\">\n                  <Subscription />\n                </Route>\n                <Route exact path=\"/profile\">\n                  <Profile />\n                </Route>\n                <Route exact path=\"/home\">\n                  <Homepage />\n                </Route>\n                <Route exact path=\"/upload-video\">\n                  <VideoUploader />\n                </Route>\n                <Route exact path=\"/\">\n                  <Homepage />\n                </Route>\n\n                {/* admin routes */}\n                <Route exact path=\"/admin/competition\">\n                  <Competition />\n                </Route>\n              </Switch>\n              <Footer />\n            </div>\n        }\n      </div>\n    </Router>\n  );\n}\nexport default App;","/Users/danny/Documents/Projects/boogalu/src/Services/LocalstorageCache.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/Admin/Competition.js",["168"],"import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ImageUploader from 'react-images-upload';\nimport Button from '@material-ui/core/Button';\nimport { saveCompetition } from \"../../Services/Competition.service\";\nimport { uploadImage } from \"../../Services/Upload.service\";\nimport { toBase64 } from \"../../Services/Utils\";\n\nexport default function Competition() {\n    const initialCompetitionData = {\n        name: \"\",\n        type: \"\",\n        desc: \"\",\n        active: true,\n        fee: \"\",\n        img: \"\",\n        startAt: \"\",\n        endAt: \"\",\n        prices: [],\n    }\n    const [CompetitionData, setCompetitionData] = useState(initialCompetitionData);\n\n    const handleChange = (prop, index) => (event) => {\n        let value = event.target.value;\n        if (prop === 'active') value = event.target.checked;\n        if (prop === 'prices') {\n            CompetitionData.prices[index] = event.target.value;\n            value = CompetitionData.prices;\n        }\n        setCompetitionData({ ...CompetitionData, [prop]: value });\n    };\n\n    const onimageUpload = (picture) => {\n        setCompetitionData({ ...CompetitionData, img: picture });\n    }\n\n    async function saveDetails(e) {\n        console.log(CompetitionData)\n        // upload competition image to bucket\n        if (CompetitionData.img[0]) {\n            const reader = new FileReader();\n            reader.readAsDataURL(CompetitionData.img[0]);\n            reader.onload = () => {\n                uploadImage(reader.result, 'competition', 'small').subscribe((downloadableUrl) => {\n                    CompetitionData.img = downloadableUrl;\n                    // save competition data to db with imag url\n                    saveCompetition(CompetitionData).subscribe((response) => {\n                        console.log('competition success', response);\n                        setCompetitionData(initialCompetitionData);\n                    })\n                })\n            }\n        }\n    }\n    return (\n        <div className=\"competition-bo-wrap\">\n            <div className=\"input-wrap\">\n                <TextField className=\"input-field\"\n                    required\n                    id=\"outlined-required-name\"\n                    label=\"Name\"\n                    onChange={handleChange('name')}\n                    value={CompetitionData.name}\n                    variant=\"outlined\"\n                />\n            </div>\n            <div className=\"input-wrap\">\n                <TextField className=\"input-field\"\n                    required\n                    id=\"outlined-required-desc\"\n                    label=\"Description\"\n                    onChange={handleChange('desc')}\n                    value={CompetitionData.desc}\n                    variant=\"outlined\"\n                />\n            </div>\n            <div className=\"input-wrap\">\n                <TextField className=\"input-field\"\n                    required\n                    id=\"outlined-required-fee\"\n                    label=\"Fee\"\n                    type=\"number\"\n                    onChange={handleChange('fee')}\n                    value={CompetitionData.fee}\n                    variant=\"outlined\"\n                />\n            </div>\n            <div className=\"input-wrap\">\n                <FormControl variant=\"outlined\" className=\"input-field\">\n                    <InputLabel id=\"select-outlined-label\">Type</InputLabel>\n                    <Select\n                        labelId=\"select-outlined-label\"\n                        id=\"select-outlined\"\n                        value={CompetitionData.type}\n                        onChange={handleChange('type')}\n                        label=\"Type\"\n                    >\n                        <MenuItem value=\"running\">Currently Running</MenuItem>\n                        <MenuItem value=\"upcomming\">Up-Comming</MenuItem>\n                    </Select>\n                </FormControl>\n            </div>\n            <div className=\"input-wrap\">\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            required\n                            color=\"primary\"\n                            className=\"selected-item-checkbox\"\n                            checked={CompetitionData.active}\n                            onChange={handleChange('active')}\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                        />\n                    }\n                    label=\"Active\"\n                />\n            </div>\n            <div className=\"inpyt-wrap\">\n                <TextField\n                    id=\"datetime-local\"\n                    label=\"Start Date & Time\"\n                    type=\"datetime-local\"\n                    value={CompetitionData.startAt}\n                    onChange={handleChange('startAt')}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                />\n            </div>\n            <div className=\"input-wrap\">\n                <TextField\n                    id=\"datetime-local\"\n                    label=\"End Date & Time\"\n                    type=\"datetime-local\"\n                    value={CompetitionData.endAt}\n                    onChange={handleChange('endAt')}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                />\n            </div>\n            <div className=\"input-wrap\">\n                <TextField className=\"input-field\"\n                    required\n                    id=\"outlined-required-name\"\n                    label=\"First Price\"\n                    onChange={handleChange('prices', 0)}\n                    value={CompetitionData.prices[0]}\n                    variant=\"outlined\"\n                />\n            </div>\n            <div className=\"input-wrap\">\n                <TextField className=\"input-field\"\n                    required\n                    id=\"outlined-required-name\"\n                    label=\"Second Price\"\n                    onChange={handleChange('prices', 1)}\n                    value={CompetitionData.prices[1]}\n                    variant=\"outlined\"\n                />\n            </div>\n            <div className=\"input-wrap\">\n                <TextField className=\"input-field\"\n                    required\n                    id=\"outlined-required-name\"\n                    label=\"Third Price\"\n                    onChange={handleChange('prices', 2)}\n                    value={CompetitionData.prices[2]}\n                    variant=\"outlined\"\n                />\n            </div>\n            <div className=\"input-wrap\">\n                <ImageUploader\n                    withIcon={true}\n                    buttonText='Upload image'\n                    onChange={onimageUpload}\n                    imgExtension={['.jpg', '.gif', '.png', '.gif', '.svg']}\n                    maxFileSize={5242880}\n                    accept=\"image/*\"\n                    withPreview={true}\n                    singleImage={true}\n                    label=\"Select competition image\"\n                />\n            </div>\n            <Button variant=\"contained\" color=\"primary\">Cancel</Button>\n            <Button variant=\"contained\" color=\"secondary\" onClick={(e) => saveDetails(e)}>Save</Button>\n        </div>\n    )\n}\n","/Users/danny/Documents/Projects/boogalu/src/Components/Profile/Profile.js",["169","170","171","172","173"],"/Users/danny/Documents/Projects/boogalu/src/Components/EditProfile/EditProfile.js",["174","175","176"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useStoreConsumer } from '../../Providers/StateProvider';\nimport { signupUser } from '../../Actions/User';\nimport bgImg from '../../Images/bg1.svg';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport ArrowRightSharpIcon from '@material-ui/icons/ArrowRightSharp';\nimport * as $ from 'jquery';\nimport { updateUser } from \"../../Services/User.service\";\n\nexport default function EditProfile() {\n    const { state, dispatch } = useStoreConsumer();\n    const history = useHistory();\n    let loggedInUser = state.loggedInUser;\n    // get data from history props if redirected through google or facebook login\n    if (history.location.state && (history.location.state.source == 'Facebook' || history.location.state.source == 'Google')) {\n        loggedInUser.email = history.location.state.email;\n        loggedInUser.name = history.location.state.name;\n        // setNeedToRegisterError('You are not registered yet, Please register with Choreoculture.')\n    }\n    const [userDetails, setUserDetails] = useState(loggedInUser);\n    const [SignUpError, setSignUpError] = useState(null);\n    const [showHidePassword, setShowHidePassword] = useState({ showPassword: false, showConfirmPassword: false });\n\n    const handleChange = (prop) => (event) => {\n        setUserDetails({ ...userDetails, [prop]: event.target.value });\n        console.log(userDetails)\n    };\n\n    const handleClickShowPassword = (prop) => {\n        setShowHidePassword({ ...showHidePassword, [prop]: !showHidePassword[prop] });\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    useEffect(() => {\n        $('html,body').animate({\n            scrollTop: 0\n        }, 500);\n    }, [])\n\n    const setSignupUserCred = (e) => {\n        if (userDetails.password != userDetails.confirmPassword) {\n            setSignUpError('Password dose not match.');\n            return;\n        }\n\n        updateUser(userDetails.key, userDetails).subscribe(() => {\n            dispatch(signupUser(userDetails));\n            history.push(({\n                pathname: '/profile',\n                state: null\n            }));\n        })\n        e.preventDefault();\n    }\n\n    return (\n        <div className=\"logout-wrap clearfix\">\n            <form className=\"form-wrap clearfix\" onSubmit={setSignupUserCred}>\n                <div className=\"heading-outer\">\n                    <div className=\"heading1\">Update Profile</div>\n                </div>\n                <div className=\"form-outer clearfix\">\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-Name\"\n                            label=\"Name\"\n                            onChange={handleChange('name')}\n                            value={userDetails.name}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-Username\"\n                            label=\"Username\"\n                            onChange={handleChange('username')}\n                            value={userDetails.username}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            type=\"tel\"\n                            id=\"outlined-required-phone\"\n                            label=\"Phone\"\n                            onChange={handleChange('phone')}\n                            value={userDetails.phone}\n                            variant=\"outlined\"\n                            InputProps={{ readOnly: true }}\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-email\"\n                            label=\"Email\"\n                            type=\"email\"\n                            onChange={handleChange('email')}\n                            value={userDetails.email}\n                            variant=\"outlined\"\n                            InputProps={{ readOnly: true }}\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-country\"\n                            label=\"Country\"\n                            onChange={handleChange('country')}\n                            value={userDetails.country}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-state\"\n                            label=\"State\"\n                            onChange={handleChange('state')}\n                            value={userDetails.state}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl className=\"\" variant=\"outlined\" style={{ width: '100%' }}>\n                            <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n                            <OutlinedInput\n                                required\n                                id=\"outlined-adornment-password\"\n                                type={showHidePassword.showPassword ? 'text' : 'password'}\n                                value={userDetails.password}\n                                onChange={handleChange('password')}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={() => handleClickShowPassword('showPassword')}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showHidePassword.showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                labelWidth={70}\n                            />\n                        </FormControl>\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl className=\"\" variant=\"outlined\" style={{ width: '100%' }}>\n                            <InputLabel htmlFor=\"outlined-adornment-confirm-password\">Confirm Password</InputLabel>\n                            <OutlinedInput\n                                required\n                                id=\"outlined-adornment-confirm-password\"\n                                type={showHidePassword.showConfirmPassword ? 'text' : 'password'}\n                                value={userDetails.confirmPassword}\n                                onChange={handleChange('confirmPassword')}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle confirm password visibility\"\n                                            onClick={() => handleClickShowPassword('showConfirmPassword')}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showHidePassword.showConfirmPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                labelWidth={70}\n                            />\n                        </FormControl>\n                    </div>\n                    <div className=\"input-wrap\">\n                        <div className=\"dob-wrap\">\n                            <TextField className=\"input-field\"\n                                id=\"date\"\n                                label=\"Birthday\"\n                                type=\"date\"\n                                style={{ width: '100%' }}\n                                onChange={handleChange('dob')}\n                                value={userDetails.dob}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl variant=\"outlined\" className=\"input-field\">\n                            <InputLabel id=\"select-outlined-label\">Gender</InputLabel>\n                            <Select\n                                labelId=\"select-outlined-label\"\n                                id=\"select-outlined\"\n                                value={userDetails.gender}\n                                onChange={handleChange('gender')}\n                                label=\"Gender\"\n                            >\n                                <MenuItem value=\"Male\">Male</MenuItem>\n                                <MenuItem value=\"Female\">Female</MenuItem>\n                                <MenuItem value=\"Other\">Other</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div className=\"input-wrap\" style={{ width: '93%' }}>\n                        <TextField className=\"input-field bio-input\"\n                            id=\"outlined-required-bio\"\n                            label=\"Bio\"\n                            value={userDetails.bio}\n                            onChange={handleChange('bio')}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"tnc-wrap\">\n                        <div className=\"tnc-content clearfix\">\n                            <div className=\"checkbox-wrap\">\n                                <Checkbox\n                                    required\n                                    color=\"primary\"\n                                    checked={userDetails.tnc}\n                                    onChange={(e) => setUserDetails({ ...userDetails, tnc: e.target.checked })}\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                />\n                            </div>\n                            <div className=\"note-wrap\">Yes, I agree to the terms and conditions </div>\n                        </div>\n                    </div>\n                    {SignUpError && <div className=\"login-error\">\n                        {SignUpError}\n                    </div>}\n                    <div className=\"submit-btn clearfix\">\n                        <Button variant=\"contained\" type=\"submit\" color=\"primary\" >Update\n                         <ArrowRightSharpIcon />\n                        </Button>\n                    </div>\n                </div>\n            </form>\n            <div className=\"img-wrap\">\n                <img src={bgImg} alt=\"bg1\" />\n            </div>\n        </div>\n    );\n}","/Users/danny/Documents/Projects/boogalu/src/Components/Footer/index.js",["177","178","179","180"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport boogaluLogo from '../../Images/Boogalu-logo.svg';\nimport * as $ from 'jquery';\n\nfunction Footer() {\n    const history = useHistory();\n    \n    useEffect(() => {\n        setTimeout(() => {\n            const pathName = history?.location?.pathname.split('/')[1];\n            const footerLinks = document.querySelectorAll('.js-page-links li');\n\n            if (footerLinks && footerLinks.length) {\n                footerLinks.forEach((ele) => {\n                    const getData = ele.getAttribute('data-name').toLocaleLowerCase();\n                    if (pathName?.length && getData.includes(pathName)) {\n                        ele.classList.add('active');\n                    }\n                });\n            }\n\n        }, 1000);\n\n    }, []);\n\n    function navigatePageLinks(event, path) {\n        const footerLinks = document.querySelectorAll('.js-page-links li');\n        if (footerLinks && footerLinks.length) {\n            footerLinks.forEach((ele) => {\n                const getData = ele.getAttribute('data-name').toLocaleLowerCase();\n                if (path?.length && getData.includes(path)) {\n                    ele.classList.add('active');\n                } else {\n                    if (ele.classList.contains('active')) {\n                        ele.classList.remove('active');    \n                    }\n                }\n            });\n        }\n        history.push(`/${path}`);\n        if (path) {\n            setTimeout(() => {\n                $('html,body').animate({\n                    scrollTop: 0\n                }, 700);\n            }, 100);\n        }\n    }\n\n    return (\n        <div>\n            <footer className=\"flex-container-VC\">\n                <div className=\"flex-1 copyright-wrap\">\n                    <div className=\"footer-logo-wrap\">\n                        <img src={boogaluLogo} alt=\"Logo\" className=\"image-7\" />\n                    </div>\n                    <div className=\"copyright-inner\">\n                        &#169; 2021 &nbsp;  \n                        <a href=\"https://www.choreoculture.com/\" target=\"_blank\">\n                            CHOREOCULTURE STUDIO.\n                        </a>\n                        <div>ALL RIGHTS RESERVED.</div>\n                    </div>\n                </div>\n                <div className=\"flex-1\">\n                    <div className=\"footer-tagline\" >Get the latest dance content &amp; ChoreoCulture news</div>\n                    <div className=\"email-input-inner\">\n                        <input type=\"email\" placeholder=\"Email\" />\n                    </div>\n                    <button className=\"subscribe\" >Subscribe</button>\n                </div>\n                <div className=\"footer-menus flex-1\">\n                    <ul className=\"menu-lists js-page-links flex-1\">\n                        <li data-name=\"career\">Careers</li>\n                        <li data-name=\"contactus\">\n                            <a onClick={(e) => navigatePageLinks(e, 'contactus')}>Contact us</a>\n                        </li>\n                        <li data-name=\"terms\">Terms</li>\n                    </ul>\n                    <ul className=\"menu-lists menu-lists-2 flex-1\">\n                        <li>Instagram</li>\n                        <li>Twitter</li>\n                        <li>Youtube</li>\n                        <li>Facebook</li>\n                    </ul>\n                </div>\n            </footer>\n        </div>\n    )\n}\n\nexport default Footer\n","/Users/danny/Documents/Projects/boogalu/src/Components/Login/Login.js",["181","182","183","184","185","186","187","188","189"],"/Users/danny/Documents/Projects/boogalu/src/Components/Navigation/index.js",["190","191","192"],"/Users/danny/Documents/Projects/boogalu/src/Reducers/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/Upcoming/index.js",["193","194","195"],"import React, { useState, useRef, useEffect } from 'react'\nimport LessonsCategories from '../../Data/LessonsCategory';\nimport Video from \"../Vedio/Video\";\n\nfunction Upcoming () {\n    const [activeCategory, setActiveCategory] = useState(LessonsCategories[0]);\n    return (\n        <div className=\"lessons lessons-wrap\" id=\"upcomingLessons\">\n            <div className=\"inner-page\">\n                <h1>Learn from the Experts</h1>\n                <p>\n                    Lessons for all users from our expert faculty members.\n                    From Hip-Hop to Bharatnatyam. You'll get all learning videos\n                    at one place.\n                </p>\n                <p className=\"launching-soon\">Videos launching soon! Stay connected!</p>\n                <p className=\"from-our-expert-title\">Few sample lessons</p>\n                <div className=\"lessons-vdo-wrap\">\n                    {activeCategory.upcoming.map((item, index) => {\n                        return <Video key={'upcoming-'+index} vdoObj={item}></Video>\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Upcoming;\n","/Users/danny/Documents/Projects/boogalu/src/Components/Splash/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/Competitions/index.js",["196","197","198","199","200","201"],"/Users/danny/Documents/Projects/boogalu/src/Components/Homepage/index.js",["202","203","204","205","206"],"import React, { useState, useEffect } from \"react\";\nimport { useStoreConsumer } from '../../Providers/StateProvider';\nimport bgImg from '../../Images/hip-hop.png';\nimport { useHistory } from \"react-router-dom\";\nimport * as $ from 'jquery';\n\nexport default function Homepage() {\n    const history = useHistory();\n    const { state, dispatch } = useStoreConsumer();\n    let loggedInUser = state.loggedInUser;\n    const [danceImageVisibleClass, activeDanceImage] = useState('');\n\n    useEffect(() => {\n        setTimeout(() => {\n            activeDanceImage('show');\n        }, 800);\n    }, []);\n\n    return (\n        <div className=\"homepage charcoal-bg clearfix\">\n            <div className=\"homepage-wrap clearfix\">\n                <div className=\"banner_vdo\">\n                    <div className=\"vdo_wrap rounded-dark-box\">\n                        <iframe width=\"100%\" src=\"https://www.youtube.com/embed/i3yMXpeLPuU\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                    </div>\n                    <div className=\"vdo_wrap rounded-dark-box\">\n                        <iframe width=\"100%\" src=\"https://www.youtube.com/embed/dM1ghaspLyc\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                    </div>\n                    <div className=\"vdo_wrap rounded-dark-box\">\n                        <iframe width=\"100%\" src=\"https://www.youtube.com/embed/U7NaFiqSeVE\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                    </div>\n                </div>\n                <div className=\"banner_img\">\n                    <h1>Dance Classes for Everyone</h1>\n                    <div className=\"get-started-wrap\">\n                        <h4>The world’s best dance learning tools – at your fingertips. Start free for 7 days.</h4>\n                        <button className=\"btn primary-light get_started\" onClick={() => {\n                            loggedInUser ? history.push('/lessons') : history.push('/login');\n                        }}>Get Started</button>\n                    </div>\n                </div>\n            </div>\n            <div className={`home-img-wrap ${danceImageVisibleClass}`}>\n                <img src={bgImg} alt=\"\" />\n            </div>\n            <div className=\"homepage-display-1 charcoal-bg-dark\">\n                <div className=\"learn_choreo\" id=\"Lessons\">\n                    <div className=\"heading-wrap\">\n                        <h2>\n                            Learn Choreography To <br /> Your Favorite Songs\n                        </h2>\n                        <div className=\"line1\">Dance to the music that makes YOU want to move at any skill level.</div>\n                    </div>\n                    <div className=\"flex-container vdo-wrap\" >\n                        <div className=\"flex-basis-3 rounded-dark-box\">\n                            <iframe className=\"iframe\" src=\"//www.youtube.com/embed/i3yMXpeLPuU?wmode=transparent&amp;autoplay=0&amp;theme=dark&amp;controls=0&amp;autohide=0&amp;loop=0&amp;showinfo=0&amp;rel=0&amp;playlist=false&amp;enablejsapi=0\" scrolling=\"no\" title=\"Vimeo embed\" frameBorder=\"0\" allow=\"autoplay; fullscreen\" allowFullScreen={false}>\n                            </iframe>\n                        </div>\n                        <div className=\"flex-basis-3 rounded-dark-box\">\n                            <iframe className=\"iframe\" src=\"//cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fplayer.vimeo.com%2Fvideo%2F453549133%3Fapp_id%3D122963&amp;dntp=1&amp;display_name=Vimeo&amp;url=https%3A%2F%2Fvimeo.com%2F453549133%3Flazy%3D1&amp;image=https%3A%2F%2Fi.vimeocdn.com%2Fvideo%2F951136340_1280.jpg&amp;key=96f1f04c5f4143bcb0f2e68c87d65feb&amp;type=text%2Fhtml&amp;schema=vimeo\" scrolling=\"no\" title=\"Vimeo embed\" frameBorder=\"0\" allow=\"autoplay; fullscreen\" allowFullScreen={false}>\n                            </iframe>\n                        </div>\n                        <div className=\"flex-basis-3 rounded-dark-box\">\n                            <iframe className=\"iframe\" src=\"//cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fplayer.vimeo.com%2Fvideo%2F453549133%3Fapp_id%3D122963&amp;dntp=1&amp;display_name=Vimeo&amp;url=https%3A%2F%2Fvimeo.com%2F453549133%3Flazy%3D1&amp;image=https%3A%2F%2Fi.vimeocdn.com%2Fvideo%2F951136340_1280.jpg&amp;key=96f1f04c5f4143bcb0f2e68c87d65feb&amp;type=text%2Fhtml&amp;schema=vimeo\" scrolling=\"no\" title=\"Vimeo embed\" frameBorder=\"0\" allow=\"autoplay; fullscreen\" allowFullScreen={false}>\n                            </iframe>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","/Users/danny/Documents/Projects/boogalu/src/Components/Contactus/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/Signup/index.js",["207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useStoreConsumer } from '../../Providers/StateProvider';\nimport { signupUser } from '../../Actions/User';\nimport bgImg from '../../Images/bg1.svg';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport stepListData from '../../Data/RegistrationStepData'\nimport ArrowRightSharpIcon from '@material-ui/icons/ArrowRightSharp';\nimport { registerUser, getUserByEmail, getUserByPhone } from \"../../Services/User.service\";\nimport * as $ from 'jquery';\n\nexport default function Signup() {\n    const { state, dispatch } = useStoreConsumer();\n    const history = useHistory();\n    let loggedInUser = state.loggedInUser;\n    // if user already login then redirect to home\n    if (loggedInUser.name && loggedInUser.phone && loggedInUser.email && loggedInUser.username) history.push({\n        pathname: '/',\n        state: null\n    })\n    // get data from history props if redirected through google or facebook login\n    if (history.location.state && (history.location.state.source === 'Facebook' || history.location.state.source === 'Google')) {\n        loggedInUser.email = history.location.state.email;\n        loggedInUser.name = history.location.state.name;\n        // setNeedToRegisterError('You are not registered yet, Please register with Choreoculture.')\n    }\n    const [userDetails, setUserDetails] = useState(loggedInUser);\n    const [SignUpError, setSignUpError] = useState(null);\n    const [showHidePassword, setShowHidePassword] = useState({ showPassword: false, showConfirmPassword: false });\n\n    const [activeStep, setActiveStep] = useState('stepOne');\n    const [showNextButton, setShowNextButton] = useState(false);\n    const [stepData, setStepListData] = useState(stepListData);\n    const [selectedOptionsList, setSelectedOptionsList] = useState([]);\n\n    const handleChange = (prop) => (event) => {\n        setUserDetails({ ...userDetails, [prop]: event.target.value });\n    };\n\n    const handleClickShowPassword = (prop) => {\n        setShowHidePassword({ ...showHidePassword, [prop]: !showHidePassword[prop] });\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    useEffect(() => {\n        $('html,body').animate({\n            scrollTop: 0\n        }, 500);\n    }, [])\n\n    useEffect(() => {\n        if (stepData[activeStep]) {\n            let isAnySelected = stepData[activeStep].filter((data) => data.isSelected);\n            if (isAnySelected.length != 0) setShowNextButton(true);\n            else setShowNextButton(false);\n            // set selected options\n            let selectedOptions = [];\n            Object.entries(stepData).map(([parentKey, parentValue]) => {\n                parentValue.map((parentValueItem) => {\n                    if (parentValueItem.isSelected) {\n                        let selectionObj = { value: [parentValueItem.title], key: parentKey, heading: parentValueItem.heading };\n                        if (selectedOptions.length != 0) {\n                            let isAvl = selectedOptions.filter((data) => data.key === parentKey);\n                            if (isAvl.length != 0) {\n                                selectedOptions.map((item) => {\n                                    if (item.key === parentKey) item.value.push(parentValueItem.title);\n                                })\n                            } else selectedOptions.push(selectionObj);\n                        } else selectedOptions.push(selectionObj);\n                    }\n                })\n            })\n            setSelectedOptionsList(selectedOptions);\n        }\n    }, [activeStep])\n\n    const saveUserRegistrationDetails = () => {\n        return new Promise((res, rej) => {\n            registerUser(userDetails).subscribe((data) => {\n                console.log('user registered success', data);\n                res();\n            })\n        })\n    }\n\n    const checkForUsedPhone = () => {\n        return new Promise((res, rej) => {\n            getUserByPhone(userDetails.phone).subscribe((data) => {\n                if (data && data.length) {\n                    setSignUpError('Phone already registered.');\n                    rej(false);\n                } else {\n                    res(true);\n                }\n            })\n        })\n    }\n\n    const checkForUsedEmail = () => {\n        return new Promise((res, rej) => {\n            getUserByEmail(userDetails.email).subscribe((data) => {\n                if (data && data.length) {\n                    setSignUpError('Email already registered.');\n                    rej(false);\n                } else {\n                    res(true);\n                }\n            })\n        })\n    }\n\n    const setSignupUserCred = (e) => {\n        if (userDetails.password != userDetails.confirmPassword) {\n            setSignUpError('Password dose not match.');\n            return;\n        }\n\n        Promise.all([checkForUsedEmail(), checkForUsedPhone()]).then(() => {\n            saveUserRegistrationDetails()\n                .then(() => {\n                    dispatch(signupUser(userDetails));\n                    if (state.currentLoginFlow == 'competition') history.push('/competitions');\n                    if (state.currentLoginFlow == 'upload-vdo') history.push('/upload-vdo');\n                    else history.push(({\n                        pathname: '/',\n                        state: null\n                    }));\n                })\n                .catch((error) => {\n                    // error in user registration\n                    if (error) {\n\n                    }\n                })\n        }).catch(error => {\n            console.error(error)\n        });\n        e.preventDefault();\n    }\n\n    const setNextStep = () => {\n        switch (activeStep) {\n            case 'stepOne': setActiveStep('stepTwo'); break;\n            case 'stepTwo': setActiveStep('stepThree'); break;\n            case 'stepThree': setActiveStep('stepFour'); break;\n            case 'stepFour': setActiveStep('stepFive'); break;\n            case 'stepFive': setActiveStep(6); break;\n        }\n    }\n\n    const setPrevStep = () => {\n        switch (activeStep) {\n            case 'stepTwo': setActiveStep('stepOne'); break;\n            case 'stepThree': setActiveStep('stepTwo'); break;\n            case 'stepFour': setActiveStep('stepThree'); break;\n            case 'stepFive': setActiveStep('stepFour'); break;\n            case 6: setActiveStep('stepFive'); break;\n        }\n    }\n\n    const setStepListItemData = (e, activeItem, status) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const stepDataList = Object.assign({}, stepData);\n        stepDataList[activeStep].map((item) => {\n            if (item.title === activeItem.title) {\n                item.isSelected = item.isSelected ? false : true;\n            } else {\n                if (status != 'multi-select') {\n                    item.isSelected = false;\n                }\n            }\n        })\n        // set selected options\n        let selectedOptions = [];\n        Object.entries(stepDataList).map(([parentKey, parentValue]) => {\n            parentValue.map((parentValueItem) => {\n                if (parentValueItem.isSelected) {\n                    let selectionObj = { value: [parentValueItem.title], key: parentKey, heading: parentValueItem.heading };\n                    if (selectedOptions.length != 0) {\n                        let isAvl = selectedOptions.filter((data) => data.key === parentKey);\n                        if (isAvl.length != 0) {\n                            selectedOptions.map((item) => {\n                                if (item.key === parentKey) item.value.push(parentValueItem.title);\n                            })\n                        } else selectedOptions.push(selectionObj);\n                    } else selectedOptions.push(selectionObj);\n                }\n            })\n        })\n        setSelectedOptionsList(selectedOptions);\n        let isAnySelected = stepDataList[activeStep].filter((data) => data.isSelected);\n        if (isAnySelected.length != 0) setShowNextButton(true);\n        else setShowNextButton(false);\n        setStepListData(stepDataList);\n    }\n\n    return (\n        <div className=\"logout-wrap clearfix\">\n            {activeStep != 6 && <div className=\"step-wrap\">\n                <div className=\"heading1\">Let's Get Started!</div>\n                {activeStep === 'stepOne' && <>\n                    <div className=\"list-content\">\n                        <div className=\"list-heading-wrap\">\n                            <div className=\"heading2\">What’s your experience with dancing?</div>\n                            <div className=\"heading3\">Select One Option</div>\n                        </div>\n                        <div className=\"list\">\n                            {stepData.stepOne.map((item, i) => {\n                                return (\n                                    <div key={i} className={item.isSelected ? 'list-item selected-item' : 'list-item'} onClick={(e) => setStepListItemData(e, item)}>\n                                        <div className=\"title\">{item.title}</div>\n                                        <div className=\"desc\">{item.desc}</div>\n                                        <Checkbox\n                                            required\n                                            color=\"primary\"\n                                            className=\"selected-item-checkbox\"\n                                            checked={item.isSelected}\n                                            onChange={(e) => setStepListItemData(e, item)}\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                        />\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </>}\n                {activeStep === 'stepTwo' && <>\n                    <div className=\"list-content\">\n                        <div className=\"list-heading-wrap\">\n                            <div className=\"heading2\">What is your first goal that you want to work on?</div>\n                            <div className=\"heading3\">Select One Option</div>\n                        </div>\n                        <div className=\"list\">\n                            {stepData.stepTwo.map((item, i) => {\n                                return (\n                                    <div key={i} className={item.isSelected ? 'list-item selected-item' : 'list-item'} onClick={(e) => setStepListItemData(e, item)}>\n                                        <div className=\"title\">{item.title}</div>\n                                        <div className=\"desc\">{item.desc}</div>\n                                        <Checkbox\n                                            required\n                                            color=\"primary\"\n                                            className=\"selected-item-checkbox\"\n                                            checked={item.isSelected}\n                                            onChange={(e) => setStepListItemData(e, item)}\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                        />\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </>}\n                {activeStep === 'stepThree' && <>\n                    <div className=\"list-content\">\n                        <div className=\"list-heading-wrap\">\n                            <div className=\"heading2\">What are you interested in?</div>\n                            <div className=\"heading3\">Select all that apply</div>\n                        </div>\n                        <div className=\"list\">\n                            {stepData.stepThree.map((item, i) => {\n                                return (\n                                    <div key={i} className={item.isSelected ? 'list-item selected-item' : 'list-item'} onClick={(e) => setStepListItemData(e, item, 'multi-select')}>\n                                        <div className=\"title\">{item.title}</div>\n                                        <div className=\"desc\" style={{ paddingRight: '25px' }}>{item.desc}</div>\n                                        <Checkbox\n                                            required\n                                            color=\"primary\"\n                                            className=\"selected-item-checkbox\"\n                                            checked={item.isSelected}\n                                            onChange={(e) => setStepListItemData(e, item, 'multi-select')}\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                        />\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </>}\n                {activeStep === 'stepFour' && <>\n                    <div className=\"list-content\">\n                        <div className=\"list-heading-wrap\">\n                            <div className=\"heading2\">How long would you like your dance sessions to be?</div>\n                            <div className=\"heading3\">Select One Option</div>\n                        </div>\n                        <div className=\"list\">\n                            {stepData.stepFour.map((item, i) => {\n                                return (\n                                    <div key={i} className={item.isSelected ? 'list-item selected-item' : 'list-item'} onClick={(e) => setStepListItemData(e, item)}>\n                                        <div className=\"title\">{item.title}</div>\n                                        <div className=\"desc\">{item.desc}</div>\n                                        <Checkbox\n                                            required\n                                            color=\"primary\"\n                                            className=\"selected-item-checkbox\"\n                                            checked={item.isSelected}\n                                            onChange={(e) => setStepListItemData(e, item)}\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                        />\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </>}\n                {activeStep === 'stepFive' && <>\n                    <div className=\"list-content\">\n                        <div className=\"list-heading-wrap\">\n                            <div style={{ paddingBottom: 0 }} className=\"heading2\">Your Personal Schedule & Recommendations</div>\n                        </div>\n                        <div className=\"list\">\n                            {selectedOptionsList.map((item, i) => {\n                                return (\n                                    <div key={i} className=\"list-item selected-item\" onClick={() => setActiveStep(item.key)}>\n                                        <div className=\"title\">{item.heading}</div>\n                                        <div className=\"desc\">\n                                            {item.value.length === 1 &&\n                                                item.value.map((listValue, j) => {\n                                                    return <span key={j}>{listValue} </span>\n                                                })\n                                            }\n                                            {item.value.length != 1 &&\n                                                item.value.map((listValue, j) => {\n                                                    return <span key={j}>{listValue}, </span>\n                                                })\n                                            }\n\n                                        </div>\n                                        {/* <Checkbox\n                                            required\n                                            color=\"primary\"\n                                            className=\"selected-item-checkbox\"\n                                            checked={true}\n                                            disabled={true}\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                        /> */}\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </>}\n                {activeStep != 6 && <div className=\"step-already-login-wrap clearfix\">\n                    <div className=\"text-wrap\">Already have an account?</div>\n                    <Button color=\"primary\" onClick={() => history.push({\n                        pathname: '/login',\n                        state: null\n                    })}>SIGN IN</Button>\n                    {\n                        showNextButton ?\n                            <div className={`next-prev-actions ${activeStep != 'stepOne' ? 'next-step-active' : ''} `}>\n                                {activeStep != 'stepOne' && <Button color=\"primary\" variant=\"contained\" className=\"next-btn previous\" onClick={() => setPrevStep()}>Prev</Button>}\n                                {showNextButton && <Button color=\"primary\" variant=\"contained\" className=\"next-btn\" onClick={() => setNextStep()}>Next</Button>}\n                            </div> : ''\n                    }\n                </div>}\n            </div>}\n            {activeStep == 6 && <form className=\"form-wrap final-registration-block clearfix\" onSubmit={setSignupUserCred}>\n                <div className=\"heading-outer\">\n                    <div className=\"heading1\">Let's Get Started!</div>\n                    <div className=\"heading2\">Create an account to Choreoculture to get all features.</div>\n                </div>\n                {/* {NeedToRegisterError && <div className=\"login-error\">\n                    {NeedToRegisterError}\n                </div>} */}\n                <div className=\"form-outer clearfix\">\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-Name\"\n                            label=\"Name\"\n                            onChange={handleChange('name')}\n                            value={userDetails.name}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-Username\"\n                            label=\"Username\"\n                            onChange={handleChange('username')}\n                            value={userDetails.username}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            type=\"tel\"\n                            id=\"outlined-required-phone\"\n                            label=\"Phone\"\n                            onChange={handleChange('phone')}\n                            value={userDetails.phone}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-email\"\n                            label=\"Email\"\n                            type=\"email\"\n                            onChange={handleChange('email')}\n                            value={userDetails.email}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-country\"\n                            label=\"Country\"\n                            onChange={handleChange('country')}\n                            value={userDetails.country}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <TextField className=\"input-field\"\n                            required\n                            id=\"outlined-required-state\"\n                            label=\"State\"\n                            onChange={handleChange('state')}\n                            value={userDetails.state}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl className=\"\" variant=\"outlined\">\n                            <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n                            <OutlinedInput\n                                required\n                                id=\"outlined-adornment-password\"\n                                type={showHidePassword.showPassword ? 'text' : 'password'}\n                                value={userDetails.password}\n                                onChange={handleChange('password')}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={() => handleClickShowPassword('showPassword')}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showHidePassword.showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                labelWidth={70}\n                            />\n                        </FormControl>\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl className=\"\" variant=\"outlined\">\n                            <InputLabel htmlFor=\"outlined-adornment-confirm-password\">Confirm Password</InputLabel>\n                            <OutlinedInput\n                                required\n                                id=\"outlined-adornment-confirm-password\"\n                                type={showHidePassword.showConfirmPassword ? 'text' : 'password'}\n                                value={userDetails.confirmPassword}\n                                onChange={handleChange('confirmPassword')}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle confirm password visibility\"\n                                            onClick={() => handleClickShowPassword('showConfirmPassword')}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showHidePassword.showConfirmPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                labelWidth={70}\n                            />\n                        </FormControl>\n                    </div>\n                    <div className=\"input-wrap\">\n                        <div className=\"dob-wrap\">\n                            <TextField className=\"input-field\"\n                                id=\"date\"\n                                label=\"Birthday\"\n                                type=\"date\"\n                                onChange={handleChange('dob')}\n                                value={userDetails.dob}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"input-wrap\">\n                        <FormControl variant=\"outlined\" className=\"input-field\">\n                            <InputLabel id=\"select-outlined-label\">Gender</InputLabel>\n                            <Select\n                                labelId=\"select-outlined-label\"\n                                id=\"select-outlined\"\n                                value={userDetails.gender}\n                                onChange={handleChange('gender')}\n                                label=\"Gender\"\n                            >\n                                <MenuItem value=\"Male\">Male</MenuItem>\n                                <MenuItem value=\"Female\">Female</MenuItem>\n                                <MenuItem value=\"Other\">Other</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div className=\"input-wrap bio-wrap\">\n                        <TextField className=\"input-field bio-input\"\n                            id=\"outlined-required-bio\"\n                            label=\"Bio\"\n                            value={userDetails.bio}\n                            onChange={handleChange('bio')}\n                            variant=\"outlined\"\n                        />\n                    </div>\n                    <div className=\"tnc-wrap\">\n                        <div className=\"tnc-content clearfix\">\n                            <div className=\"checkbox-wrap\">\n                                <Checkbox\n                                    required\n                                    color=\"primary\"\n                                    checked={userDetails.tnc}\n                                    onChange={(e) => setUserDetails({ ...userDetails, tnc: e.target.checked })}\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                />\n                            </div>\n                            <div className=\"note-wrap\">Yes, I agree to the terms and conditions </div>\n                        </div>\n                    </div>\n                    {SignUpError && <div className=\"login-error\">\n                        {SignUpError}\n                    </div>}\n                    <div className=\"submit-btn clearfix\">\n                        <Button variant=\"contained\" type=\"submit\" color=\"primary\" >Sign Up\n                         <ArrowRightSharpIcon />\n                        </Button>\n                        {activeStep != 'stepOne' && <Button color=\"primary\" variant=\"contained\" className=\"next-btn previous\" onClick={() => setPrevStep()}>Prev</Button>}\n                    </div>\n                    <div className=\"already-login-wrap\">\n                        <div className=\"text-wrap\">Already have an account?</div>\n                        <Button color=\"primary\" onClick={() => history.push({\n                            pathname: '/login',\n                            state: null\n                        })}>SIGN IN</Button>\n                    </div>\n                </div>\n            </form>}\n\n            <div className=\"img-wrap\">\n                <img src={bgImg} alt=\"bg1\" />\n            </div>\n        </div>\n    );\n}","/Users/danny/Documents/Projects/boogalu/src/Components/Subscription/index.js",["234","235"],"import React, { useState } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport { useStoreConsumer } from '../../Providers/StateProvider';\n\nfunction Subscription() {\n    const { state, dispatch } = useStoreConsumer();\n    const history = useHistory();\n    const loggedInUser = state.loggedInUser;\n\n    const subscribeClasses = plan => {\n        // if user already login then redirect to home\n        if (loggedInUser.name && loggedInUser.phone && loggedInUser.username) {\n\n        } else {\n            history.push({\n                pathname: `/register?plan=${plan}`,\n                state: null\n            })\n        }\n    }\n\n    return (\n        <div className=\"subscription subscription-outer charcoal-bg\">\n            <div id=\"Subscription\" className=\"charcoal-bg\">\n                <div className=\"flex-container-VC subscription-wrap charcoal-bg\">\n                    <div className=\"flex-3 heading-content\">\n                        <h1>Unlimited Classes For The Price Of One</h1>\n                        <div className=\"line1\">Dance to the music that makes YOU want to move at any skill level.</div>\n                    </div>\n                    <div className=\"inner-plans-wrap\">\n                        <div className=\"flex-2 plan\" onClick={() => subscribeClasses('monthly')}>\n                            <div className=\"plan_tag\">MONTHLY PLAN (USD)</div>\n                            <div className=\"plan_price\">$2.74<span>/mo</span></div>\n                        </div>\n                        <div className=\"flex-2 plan\" onClick={() => subscribeClasses('yearly')}>\n                            <div className=\"plan_tag\">ANNUAL PLAN (USD)</div>\n                            <div className=\"plan_price\">$27.41<span>/year</span></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Subscription\n","/Users/danny/Documents/Projects/boogalu/src/Services/Competition.service.js",[],"/Users/danny/Documents/Projects/boogalu/src/Services/Upload.service.js",["236","237"],"import { Observable } from 'rxjs';\nimport firebase from './firebase';\nconst storageRef = firebase.storage().ref();\n\nconst BASE_PATH = '/uploads';\nvar FILE_NAME = '';\nvar FILE_PATH = '';\n// from ==> competition or user upload\n// type => small or large\nexport function uploadImage(image, from, type) {\n\n    let date = new Date();\n    let id = date.getTime().toString();\n    FILE_NAME = (type ? type : '') + 'pic' + id + '.jpg';\n    FILE_PATH = BASE_PATH + '/' + from + '/' + FILE_NAME;\n\n    let uploadTask = storageRef.child(FILE_PATH).putString(image, 'data_url');\n\n    return new Observable((observer) => {\n        uploadTask.on('state_changed',\n            (snapshot) => {\n                let progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                console.log('Upload is ' + progress + '% done');\n                switch (snapshot.state) {\n                    case firebase.storage.TaskState.PAUSED: // or 'paused'\n                        console.log('Upload is paused');\n                        break;\n                    case firebase.storage.TaskState.RUNNING: // or 'running'\n                        console.log('Upload is running');\n                        break;\n                }\n            }, (error) => {\n                console.log(error);\n            }, () => {\n                uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n                    observer.next(downloadURL);\n                });\n            });\n    });\n}\n\nexport function deleteImage(imageUrl) {\n    storageRef.refFromURL(imageUrl).delete();\n}\n\nexport function uploadVideo(video) {\n\n    let date = new Date();\n    let id = date.getTime().toString();\n    FILE_NAME = 'user' + id + '.mp4';\n    FILE_PATH = BASE_PATH + '/video/' + FILE_NAME;\n\n    let uploadTask = storageRef.child(FILE_PATH).putString(video, 'data_url');\n\n    return new Observable((observer) => {\n        uploadTask.on('state_changed',\n            (snapshot) => {\n                let progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                // console.log('Upload is ' + progress + '% done');\n                observer.next({ donePercentage: progress });\n                switch (snapshot.state) {\n                    case firebase.storage.TaskState.PAUSED: // or 'paused'\n                        console.log('Upload is paused');\n                        break;\n                    case firebase.storage.TaskState.RUNNING: // or 'running'\n                        console.log('Upload is running');\n                        break;\n                }\n            }, (error) => {\n                console.log(error);\n            }, () => {\n                uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n                    observer.next({ downloadURL });\n                });\n            });\n    });\n}\n\nexport function deleteVideo(videoUrl) {\n    storageRef.refFromURL(videoUrl).delete();\n}\n","/Users/danny/Documents/Projects/boogalu/src/Services/Utils.js",["238","239","240"],"export function formatTime(time) {\n    time = new Date(time);\n    const hour24 = time.getHours();\n    let minutes = (time.getMinutes() === 0) ? '00' : time.getMinutes();\n    minutes = (minutes > 0 && minutes < 10) ? `0${minutes}` : minutes;\n    const ampm = (hour24 >= 12) ? 'PM' : 'AM';\n    let hour = hour24 % 12 || 12;\n    //append zero is hour is single digit\n    if (hour < 10) {\n        hour = `0${hour}`;\n    }\n    return `${hour}:${minutes} ${ampm}`;\n};\n\nexport function formatDate(date, status) {\n    date = new Date(date);\n    var monthNames = [\n        \"January\", \"February\", \"March\",\n        \"April\", \"May\", \"June\", \"July\",\n        \"August\", \"September\", \"October\",\n        \"November\", \"December\"\n    ];\n    let day = date.getDate();\n    let monthIndex = date.getMonth();\n    let year = date.getFullYear();\n    if (status == 3) return day + 'th ' + monthNames[monthIndex] + \" \" + year;\n    if (status == 2) return day + 'th ' + monthNames[monthIndex];\n    if (status == 1) return day;\n};\n\nexport function timeStampToNewDate(timeStamp) {\n    return new Date(timeStamp.seconds * 1000 + Math.round(timeStamp.nanoseconds / 1000000));\n}\n\nexport function toBase64(file) {\n    new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = error => reject(error);\n    });\n}","/Users/danny/Documents/Projects/boogalu/src/Services/UploadedVideo.service.js",[],"/Users/danny/Documents/Projects/boogalu/src/Services/User.service.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/Vedio/Video.js",[],"/Users/danny/Documents/Projects/boogalu/src/Actions/User/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Data/LessonsCategory.js",[],"/Users/danny/Documents/Projects/boogalu/src/Data/RegistrationStepData.js",[],"/Users/danny/Documents/Projects/boogalu/src/Services/firebase.js",[],"/Users/danny/Documents/Projects/boogalu/src/Constants/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Actions/Competition/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Components/CompetitionsDetails/index.js",["241","242","243","244","245","246","247","248","249","250","251","252"],"/Users/danny/Documents/Projects/boogalu/src/Database/index.js",["253"],"import { data } from 'jquery';\nimport firebase from '../Services/firebase';\nconst database = firebase.firestore();\nexport default database;","/Users/danny/Documents/Projects/boogalu/src/Components/EnrollCompetition/index.js",["254","255","256"],"import React, { useState } from 'react'\nimport ArrowRightSharpIcon from '@material-ui/icons/ArrowRightSharp';\nimport Button from '@material-ui/core/Button';\nimport { useHistory } from \"react-router-dom\";\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { THUMBNAIL_URL } from '../../Constants';\nimport { useStoreConsumer } from '../../Providers/StateProvider';\nimport { saveCompetition, updateCompetition } from \"../../Services/EnrollCompetition.service\";\n\nfunction EnrollCompetition({ handleClose, changeSelectedVdo }) {\n\n    const history = useHistory();\n    const { state, dispatch } = useStoreConsumer();\n    const [AgeGroup, setAgeGroup] = useState('');\n    const loggedInUser = state.loggedInUser;\n    const competitionDetails = state.activeCompetition;\n    const SelectedVdo = competitionDetails.selectedVideo;\n    console.log(competitionDetails);\n    const onAgeGroupChange = (groupValue) => {\n        setAgeGroup(groupValue);\n    }\n\n    const submitForCompetition = () => {\n        const competitionObj = {\n            compId: competitionDetails.key,\n            compName: competitionDetails.name,\n            compImg: competitionDetails.img,\n            userId: loggedInUser.key,\n            vdo: {\n                key: competitionDetails.selectedVideo.key,\n                title: competitionDetails.selectedVideo.title,\n                thumbnail: competitionDetails.selectedVideo.thumbnail,\n                url: competitionDetails.selectedVideo.url,\n                desc: competitionDetails.selectedVideo.desc,\n            },\n            ageGroup: AgeGroup,\n            status: 'Submited'\n        }\n        console.log(competitionObj)\n        if (competitionDetails.isUserEnrolled) {\n            updateCompetition(competitionDetails.userSubmitedDetails.key, competitionObj).subscribe((response) => {\n                console.log('vdo updated for competition suceess');\n                history.push('/profile');\n            })\n        } else {\n            saveCompetition(competitionObj).subscribe((response) => {\n                console.log('vdo uploaded for competition suceess');\n                history.push('/profile');\n            })\n        }\n\n        // handleClose();\n    }\n\n    const updateCompetition = () => {\n\n    }\n\n    return (\n        <div>\n            <h2 id=\"title\">Enroll for {competitionDetails.name}</h2>\n            <img src={competitionDetails.img} alt={competitionDetails.name} style={{ width: '20%' }} />\n            <p id=\"description\">{competitionDetails.desc}</p>\n            <div className=\"userdata\">\n                <div>Name:<span>{loggedInUser.name}</span></div>\n                <div>Phone:<span>{loggedInUser.phone}</span></div>\n                <div>Email:<span>{loggedInUser.email}</span></div>\n                <div>Gender:<span>{loggedInUser.gender}</span></div>\n            </div>\n            {!competitionDetails?.isUserEnrolled ? <div className=\"age-group-dropdown\">\n                <FormControl variant=\"outlined\" className=\"input-field\">\n                    <InputLabel id=\"select-outlined-label\">Select Age Group</InputLabel>\n                    <Select\n                        labelId=\"select-outlined-label\"\n                        id=\"select-outlined\"\n                        value={AgeGroup}\n                        onChange={(e) => onAgeGroupChange(e.target.value)}\n                        label=\"Select Age Group\"\n                    >\n                        <MenuItem value=\"Age 4 to 13 years\">Age 4 to 13 years</MenuItem>\n                        <MenuItem value=\"Age 14 to 17 years\">Age 14 to 17 years</MenuItem>\n                        <MenuItem value=\"Age 18 and above\">Age 18 and above</MenuItem>\n                    </Select>\n                </FormControl>\n            </div>\n                :\n                <div>Submited age group - {competitionDetails.userSubmitedDetails.ageGroup}</div>\n            }\n            {SelectedVdo && <div className=\"selected-vdo\">\n                <div>Selected video for competition -</div>\n                <div onClick={() => changeSelectedVdo()}>Change</div>\n                <div className=\"vdo-wrap\" >\n                    <img src={SelectedVdo.thumbnail ? SelectedVdo.thumbnail : THUMBNAIL_URL} style={{ width: \"50%\" }} />\n                    <div>{SelectedVdo.title}</div>\n                </div>\n            </div>}\n            { !competitionDetails?.isUserEnrolled ? <Button variant=\"contained\" color=\"primary\" onClick={() => submitForCompetition()}>Enroll Competition<ArrowRightSharpIcon /></Button>\n                : <Button variant=\"contained\" color=\"primary\" onClick={() => updateCompetition()}>Update Competition<ArrowRightSharpIcon /></Button>\n            }\n        </div>\n    )\n}\n\nexport default EnrollCompetition\n","/Users/danny/Documents/Projects/boogalu/src/Components/VideoUploader/index.js",["257"],"/Users/danny/Documents/Projects/boogalu/src/Actions/LoginFlow/index.js",[],"/Users/danny/Documents/Projects/boogalu/src/Services/EnrollCompetition.service.js",[],{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","severity":1,"message":"263","line":5,"column":7,"nodeType":"264","messageId":"265","endLine":5,"endColumn":24},{"ruleId":"262","severity":1,"message":"266","line":2,"column":50,"nodeType":"264","messageId":"265","endLine":2,"endColumn":54},{"ruleId":"262","severity":1,"message":"267","line":13,"column":10,"nodeType":"264","messageId":"265","endLine":13,"endColumn":18},{"ruleId":"262","severity":1,"message":"268","line":63,"column":11,"nodeType":"264","messageId":"265","endLine":63,"endColumn":18},{"ruleId":"262","severity":1,"message":"269","line":71,"column":32,"nodeType":"264","messageId":"265","endLine":71,"endColumn":53},{"ruleId":"270","severity":1,"message":"271","line":82,"column":8,"nodeType":"272","endLine":82,"endColumn":10,"suggestions":"273"},{"ruleId":"274","severity":1,"message":"275","line":94,"column":72,"nodeType":"276","messageId":"277","endLine":94,"endColumn":74},{"ruleId":"278","severity":1,"message":"279","line":186,"column":41,"nodeType":"280","endLine":186,"endColumn":74},{"ruleId":"274","severity":1,"message":"275","line":27,"column":66,"nodeType":"276","messageId":"277","endLine":27,"endColumn":68},{"ruleId":"274","severity":1,"message":"275","line":27,"column":113,"nodeType":"276","messageId":"277","endLine":27,"endColumn":115},{"ruleId":"274","severity":1,"message":"281","line":56,"column":34,"nodeType":"276","messageId":"277","endLine":56,"endColumn":36},{"ruleId":"262","severity":1,"message":"282","line":1,"column":17,"nodeType":"264","messageId":"265","endLine":1,"endColumn":25},{"ruleId":"270","severity":1,"message":"283","line":25,"column":8,"nodeType":"272","endLine":25,"endColumn":10,"suggestions":"284"},{"ruleId":"285","severity":1,"message":"286","line":60,"column":66,"nodeType":"287","endLine":60,"endColumn":81},{"ruleId":"288","severity":1,"message":"289","line":77,"column":29,"nodeType":"280","endLine":77,"endColumn":83},{"ruleId":"262","severity":1,"message":"290","line":18,"column":21,"nodeType":"264","messageId":"265","endLine":18,"endColumn":31},{"ruleId":"270","severity":1,"message":"291","line":34,"column":8,"nodeType":"272","endLine":34,"endColumn":28,"suggestions":"292"},{"ruleId":"274","severity":1,"message":"281","line":62,"column":28,"nodeType":"276","messageId":"277","endLine":62,"endColumn":30},{"ruleId":"293","severity":1,"message":"294","line":155,"column":9,"nodeType":"295","messageId":"296","endLine":212,"endColumn":10},{"ruleId":"274","severity":1,"message":"275","line":172,"column":52,"nodeType":"276","messageId":"277","endLine":172,"endColumn":54},{"ruleId":"274","severity":1,"message":"275","line":173,"column":57,"nodeType":"276","messageId":"277","endLine":173,"endColumn":59},{"ruleId":"274","severity":1,"message":"275","line":197,"column":52,"nodeType":"276","messageId":"277","endLine":197,"endColumn":54},{"ruleId":"274","severity":1,"message":"275","line":198,"column":57,"nodeType":"276","messageId":"277","endLine":198,"endColumn":59},{"ruleId":"278","severity":1,"message":"279","line":308,"column":17,"nodeType":"280","endLine":308,"endColumn":36},{"ruleId":"270","severity":1,"message":"283","line":77,"column":8,"nodeType":"272","endLine":77,"endColumn":18,"suggestions":"297"},{"ruleId":"262","severity":1,"message":"298","line":80,"column":15,"nodeType":"264","messageId":"265","endLine":80,"endColumn":32},{"ruleId":"288","severity":1,"message":"299","line":221,"column":25,"nodeType":"280","endLine":221,"endColumn":89},{"ruleId":"262","severity":1,"message":"300","line":1,"column":27,"nodeType":"264","messageId":"265","endLine":1,"endColumn":33},{"ruleId":"262","severity":1,"message":"301","line":1,"column":35,"nodeType":"264","messageId":"265","endLine":1,"endColumn":44},{"ruleId":"262","severity":1,"message":"302","line":6,"column":28,"nodeType":"264","messageId":"265","endLine":6,"endColumn":45},{"ruleId":"274","severity":1,"message":"275","line":11,"column":89,"nodeType":"276","messageId":"277","endLine":11,"endColumn":91},{"ruleId":"274","severity":1,"message":"275","line":13,"column":75,"nodeType":"276","messageId":"277","endLine":13,"endColumn":77},{"ruleId":"303","severity":1,"message":"304","line":20,"column":51,"nodeType":"305","messageId":"306","endLine":20,"endColumn":53},{"ruleId":"274","severity":1,"message":"275","line":21,"column":104,"nodeType":"276","messageId":"277","endLine":21,"endColumn":106},{"ruleId":"274","severity":1,"message":"275","line":43,"column":36,"nodeType":"276","messageId":"277","endLine":43,"endColumn":38},{"ruleId":"270","severity":1,"message":"307","line":46,"column":8,"nodeType":"272","endLine":46,"endColumn":10,"suggestions":"308"},{"ruleId":"262","severity":1,"message":"309","line":5,"column":13,"nodeType":"264","messageId":"265","endLine":5,"endColumn":14},{"ruleId":"262","severity":1,"message":"310","line":9,"column":20,"nodeType":"264","messageId":"265","endLine":9,"endColumn":28},{"ruleId":"311","severity":1,"message":"312","line":24,"column":25,"nodeType":"280","endLine":24,"endColumn":223},{"ruleId":"311","severity":1,"message":"312","line":27,"column":25,"nodeType":"280","endLine":27,"endColumn":223},{"ruleId":"311","severity":1,"message":"312","line":30,"column":25,"nodeType":"280","endLine":30,"endColumn":223},{"ruleId":"274","severity":1,"message":"281","line":68,"column":38,"nodeType":"276","messageId":"277","endLine":68,"endColumn":40},{"ruleId":"303","severity":1,"message":"304","line":72,"column":69,"nodeType":"305","messageId":"306","endLine":72,"endColumn":71},{"ruleId":"303","severity":1,"message":"304","line":73,"column":51,"nodeType":"305","messageId":"306","endLine":73,"endColumn":53},{"ruleId":"274","severity":1,"message":"281","line":76,"column":52,"nodeType":"276","messageId":"277","endLine":76,"endColumn":54},{"ruleId":"274","severity":1,"message":"281","line":78,"column":46,"nodeType":"276","messageId":"277","endLine":78,"endColumn":48},{"ruleId":"303","severity":1,"message":"304","line":79,"column":60,"nodeType":"305","messageId":"306","endLine":79,"endColumn":62},{"ruleId":"270","severity":1,"message":"313","line":89,"column":8,"nodeType":"272","endLine":89,"endColumn":20,"suggestions":"314"},{"ruleId":"274","severity":1,"message":"281","line":127,"column":34,"nodeType":"276","messageId":"277","endLine":127,"endColumn":36},{"ruleId":"274","severity":1,"message":"275","line":136,"column":48,"nodeType":"276","messageId":"277","endLine":136,"endColumn":50},{"ruleId":"274","severity":1,"message":"275","line":137,"column":48,"nodeType":"276","messageId":"277","endLine":137,"endColumn":50},{"ruleId":"293","severity":1,"message":"294","line":156,"column":9,"nodeType":"295","messageId":"296","endLine":162,"endColumn":10},{"ruleId":"293","severity":1,"message":"294","line":166,"column":9,"nodeType":"295","messageId":"296","endLine":172,"endColumn":10},{"ruleId":"303","severity":1,"message":"304","line":179,"column":45,"nodeType":"305","messageId":"306","endLine":179,"endColumn":47},{"ruleId":"274","severity":1,"message":"281","line":183,"column":28,"nodeType":"276","messageId":"277","endLine":183,"endColumn":30},{"ruleId":"303","severity":1,"message":"304","line":190,"column":69,"nodeType":"305","messageId":"306","endLine":190,"endColumn":71},{"ruleId":"303","severity":1,"message":"304","line":191,"column":47,"nodeType":"305","messageId":"306","endLine":191,"endColumn":49},{"ruleId":"274","severity":1,"message":"281","line":194,"column":48,"nodeType":"276","messageId":"277","endLine":194,"endColumn":50},{"ruleId":"274","severity":1,"message":"281","line":196,"column":42,"nodeType":"276","messageId":"277","endLine":196,"endColumn":44},{"ruleId":"303","severity":1,"message":"304","line":197,"column":56,"nodeType":"305","messageId":"306","endLine":197,"endColumn":58},{"ruleId":"274","severity":1,"message":"281","line":207,"column":34,"nodeType":"276","messageId":"277","endLine":207,"endColumn":36},{"ruleId":"274","severity":1,"message":"281","line":214,"column":25,"nodeType":"276","messageId":"277","endLine":214,"endColumn":27},{"ruleId":"274","severity":1,"message":"281","line":336,"column":64,"nodeType":"276","messageId":"277","endLine":336,"endColumn":66},{"ruleId":"274","severity":1,"message":"281","line":357,"column":29,"nodeType":"276","messageId":"277","endLine":357,"endColumn":31},{"ruleId":"274","severity":1,"message":"281","line":365,"column":77,"nodeType":"276","messageId":"277","endLine":365,"endColumn":79},{"ruleId":"274","severity":1,"message":"281","line":366,"column":45,"nodeType":"276","messageId":"277","endLine":366,"endColumn":47},{"ruleId":"274","severity":1,"message":"275","line":372,"column":25,"nodeType":"276","messageId":"277","endLine":372,"endColumn":27},{"ruleId":"274","severity":1,"message":"281","line":553,"column":37,"nodeType":"276","messageId":"277","endLine":553,"endColumn":39},{"ruleId":"262","severity":1,"message":"282","line":1,"column":17,"nodeType":"264","messageId":"265","endLine":1,"endColumn":25},{"ruleId":"262","severity":1,"message":"310","line":6,"column":20,"nodeType":"264","messageId":"265","endLine":6,"endColumn":28},{"ruleId":"293","severity":1,"message":"294","line":24,"column":17,"nodeType":"295","messageId":"296","endLine":31,"endColumn":18},{"ruleId":"293","severity":1,"message":"294","line":61,"column":17,"nodeType":"295","messageId":"296","endLine":68,"endColumn":18},{"ruleId":"274","severity":1,"message":"275","line":26,"column":16,"nodeType":"276","messageId":"277","endLine":26,"endColumn":18},{"ruleId":"274","severity":1,"message":"275","line":27,"column":16,"nodeType":"276","messageId":"277","endLine":27,"endColumn":18},{"ruleId":"274","severity":1,"message":"275","line":28,"column":16,"nodeType":"276","messageId":"277","endLine":28,"endColumn":18},{"ruleId":"274","severity":1,"message":"275","line":48,"column":98,"nodeType":"276","messageId":"277","endLine":48,"endColumn":100},{"ruleId":"303","severity":1,"message":"304","line":50,"column":43,"nodeType":"305","messageId":"306","endLine":50,"endColumn":45},{"ruleId":"274","severity":1,"message":"275","line":52,"column":45,"nodeType":"276","messageId":"277","endLine":52,"endColumn":47},{"ruleId":"270","severity":1,"message":"315","line":64,"column":8,"nodeType":"272","endLine":64,"endColumn":20,"suggestions":"316"},{"ruleId":"274","severity":1,"message":"275","line":84,"column":97,"nodeType":"276","messageId":"277","endLine":84,"endColumn":99},{"ruleId":"303","severity":1,"message":"304","line":92,"column":32,"nodeType":"305","messageId":"306","endLine":92,"endColumn":34},{"ruleId":"274","severity":1,"message":"275","line":93,"column":26,"nodeType":"276","messageId":"277","endLine":93,"endColumn":28},{"ruleId":"274","severity":1,"message":"275","line":133,"column":38,"nodeType":"276","messageId":"277","endLine":133,"endColumn":40},{"ruleId":"274","severity":1,"message":"275","line":136,"column":38,"nodeType":"276","messageId":"277","endLine":136,"endColumn":40},{"ruleId":"274","severity":1,"message":"275","line":136,"column":57,"nodeType":"276","messageId":"277","endLine":136,"endColumn":59},{"ruleId":"274","severity":1,"message":"275","line":139,"column":38,"nodeType":"276","messageId":"277","endLine":139,"endColumn":40},{"ruleId":"278","severity":1,"message":"279","line":210,"column":45,"nodeType":"280","endLine":210,"endColumn":131},{"ruleId":"262","severity":1,"message":"317","line":1,"column":10,"nodeType":"264","messageId":"265","endLine":1,"endColumn":14},{"ruleId":"262","severity":1,"message":"318","line":11,"column":27,"nodeType":"264","messageId":"265","endLine":11,"endColumn":44},{"ruleId":"262","severity":1,"message":"310","line":16,"column":20,"nodeType":"264","messageId":"265","endLine":16,"endColumn":28},{"ruleId":"278","severity":1,"message":"279","line":96,"column":21,"nodeType":"280","endLine":96,"endColumn":121},{"ruleId":"270","severity":1,"message":"319","line":31,"column":8,"nodeType":"272","endLine":31,"endColumn":10,"suggestions":"320"},"no-native-reassign",["321"],"no-negated-in-lhs",["322"],"no-unused-vars","'loggedInUserState' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","'toBase64' is defined but never used.","'classes' is assigned a value but never used.","'setUserLikedVideoList' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loggedInUser.key'. Either include it or remove the dependency array.","ArrayExpression",["323"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '!==' and instead saw '!='.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'history?.location?.pathname'. Either include it or remove the dependency array.",["324"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'signupUser' is defined but never used.","React Hook useEffect has a missing dependency: 'signinUser'. Either include it or remove the dependency array.",["325"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["326"],"'listenRouteChange' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useRef' is defined but never used.","'useEffect' is defined but never used.","'setActiveCategory' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'dispatch', 'loggedInUser.email', 'loggedInUser.phone', 'prepareUserCompData', and 'state.currentLoginFlow'. Either include them or remove the dependency array.",["327"],"'$' is defined but never used.","'dispatch' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","React Hook useEffect has a missing dependency: 'stepData'. Either include it or remove the dependency array.",["328"],"React Hook useEffect has missing dependencies: 'competitionDetails', 'dispatch', 'loggedInUser.email', 'loggedInUser.key', 'loggedInUser.phone', and 'userUploadedVdos.length'. Either include them or remove the dependency array.",["329"],"'data' is defined but never used.","'updateCompetition' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["330"],"no-global-assign","no-unsafe-negation",{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},"Update the dependencies array to be: [loggedInUser.key]",{"range":"347","text":"348"},"Update the dependencies array to be: [history?.location?.pathname]",{"range":"349","text":"350"},"Update the dependencies array to be: [signinUser, thirdPartyResponse]",{"range":"351","text":"352"},"Update the dependencies array to be: [history?.location?.pathname, isMobile]",{"range":"353","text":"354"},"Update the dependencies array to be: [dispatch, loggedInUser.email, loggedInUser.phone, prepareUserCompData, state.currentLoginFlow]",{"range":"355","text":"356"},"Update the dependencies array to be: [activeStep, stepData]",{"range":"357","text":"358"},"Update the dependencies array to be: [ActiveStep, competitionDetails, dispatch, loggedInUser.email, loggedInUser.key, loggedInUser.phone, userUploadedVdos.length]",{"range":"359","text":"360"},"Update the dependencies array to be: [dispatch]",{"range":"361","text":"362"},[3199,3201],"[loggedInUser.key]",[844,846],"[history?.location?.pathname]",[1817,1837],"[signinUser, thirdPartyResponse]",[3052,3062],"[history?.location?.pathname, isMobile]",[2248,2250],"[dispatch, loggedInUser.email, loggedInUser.phone, prepareUserCompData, state.currentLoginFlow]",[4267,4279],"[activeStep, stepData]",[3212,3224],"[ActiveStep, competitionDetails, dispatch, loggedInUser.email, loggedInUser.key, loggedInUser.phone, userUploadedVdos.length]",[1486,1488],"[dispatch]"]