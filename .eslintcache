[{"F:\\Toms\\Business-work\\Boogalu\\src\\index.js":"1","F:\\Toms\\Business-work\\Boogalu\\src\\reportWebVitals.js":"2","F:\\Toms\\Business-work\\Boogalu\\src\\App.js":"3","F:\\Toms\\Business-work\\Boogalu\\src\\Providers\\StateProvider.js":"4","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Footer\\index.js":"5","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Login\\Login.js":"6","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Profile\\Profile.js":"7","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\EditProfile\\EditProfile.js":"8","F:\\Toms\\Business-work\\Boogalu\\src\\Services\\LocalstorageCache.js":"9","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Navigation\\index.js":"10","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Splash\\index.js":"11","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Homepage\\index.js":"12","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Subscription\\index.js":"13","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Signup\\index.js":"14","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Upcoming\\index.js":"15","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Competitions\\index.js":"16","F:\\Toms\\Business-work\\Boogalu\\src\\Reducers\\index.js":"17","F:\\Toms\\Business-work\\Boogalu\\src\\Actions\\User\\index.js":"18","F:\\Toms\\Business-work\\Boogalu\\src\\Data\\LessonsCategory.js":"19","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Vedio\\Video.js":"20","F:\\Toms\\Business-work\\Boogalu\\src\\Data\\RegistrationStepData.js":"21","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\CompetitionsDetails\\index.js":"22","F:\\Toms\\Business-work\\Boogalu\\src\\Constants\\index.js":"23"},{"size":737,"mtime":1610191707084,"results":"24","hashOfConfig":"25"},{"size":375,"mtime":1610191707092,"results":"26","hashOfConfig":"25"},{"size":2428,"mtime":1611462124429,"results":"27","hashOfConfig":"25"},{"size":980,"mtime":1610191707064,"results":"28","hashOfConfig":"25"},{"size":1857,"mtime":1611462124435,"results":"29","hashOfConfig":"25"},{"size":11945,"mtime":1611462124458,"results":"30","hashOfConfig":"25"},{"size":9560,"mtime":1611462124462,"results":"31","hashOfConfig":"25"},{"size":14486,"mtime":1611462124432,"results":"32","hashOfConfig":"25"},{"size":251,"mtime":1610191707084,"results":"33","hashOfConfig":"25"},{"size":8967,"mtime":1611468525113,"results":"34","hashOfConfig":"25"},{"size":351,"mtime":1611462124467,"results":"35","hashOfConfig":"25"},{"size":4920,"mtime":1611469066958,"results":"36","hashOfConfig":"25"},{"size":1071,"mtime":1611462124468,"results":"37","hashOfConfig":"25"},{"size":28977,"mtime":1611462124465,"results":"38","hashOfConfig":"25"},{"size":1172,"mtime":1611468791321,"results":"39","hashOfConfig":"25"},{"size":2518,"mtime":1611506906502,"results":"40","hashOfConfig":"25"},{"size":524,"mtime":1610191707081,"results":"41","hashOfConfig":"25"},{"size":403,"mtime":1610191706906,"results":"42","hashOfConfig":"25"},{"size":12210,"mtime":1611462124486,"results":"43","hashOfConfig":"25"},{"size":634,"mtime":1611469409351,"results":"44","hashOfConfig":"25"},{"size":7647,"mtime":1610191706964,"results":"45","hashOfConfig":"25"},{"size":2237,"mtime":1611491056609,"results":"46","hashOfConfig":"25"},{"size":124,"mtime":1610191706946,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"g3scqe",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"F:\\Toms\\Business-work\\Boogalu\\src\\index.js",[],["102","103"],"F:\\Toms\\Business-work\\Boogalu\\src\\reportWebVitals.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\App.js",["104"],"import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"./App.scss\"\r\nimport Login from \"./Components/Login/Login\";\r\nimport SplashScreen from './Components/Splash';\r\nimport Navigation from \"./Components/Navigation/index\";\r\nimport Homepage from \"./Components/Homepage\";\r\nimport Footer from \"./Components/Footer/index\";\r\nimport Signup from \"./Components/Signup\";\r\nimport Profile from \"./Components/Profile/Profile\";\r\nimport Upcoming from \"./Components/Upcoming\";\r\nimport Competitions from \"./Components/Competitions\";\r\nimport Subscription from \"./Components/Subscription\";\r\nimport EditProfile from \"./Components/EditProfile/EditProfile\";\r\n\r\nfunction App() {\r\n  const [isSplashVisible, toggleSplash] = useState(true);\r\n  const [transitionOpacityClass, toggleTransition] = useState('');\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      toggleSplash(false);\r\n    }, 2500);\r\n\r\n    setTimeout(() => {\r\n      toggleTransition('visible-transition');\r\n    }, 2800);\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        {\r\n          isSplashVisible ?\r\n            <SplashScreen />\r\n            :\r\n            <div className={`main-content-wrapper ${transitionOpacityClass}`}>\r\n              <Navigation />\r\n              <Switch>\r\n                <Route exact path=\"/login\">\r\n                  <Login />\r\n                </Route>\r\n                <Route exact path=\"/profile/edit\">\r\n                  <EditProfile />\r\n                </Route>\r\n                <Route exact path=\"/register\">\r\n                  <Signup />\r\n                </Route>\r\n                <Route exact path=\"/lessons\">\r\n                  <Upcoming />\r\n                </Route>\r\n                <Route exact path=\"/competitions\">\r\n                  <Competitions />\r\n                </Route>\r\n                <Route exact path=\"/subscription\">\r\n                  <Subscription />\r\n                </Route>\r\n                <Route exact path=\"/profile\">\r\n                  <Profile />\r\n                </Route>\r\n                <Route exact path=\"/home\">\r\n                  <Homepage />\r\n                </Route>\r\n                <Route exact path=\"/\">\r\n                  <Homepage />\r\n                </Route>\r\n              </Switch>\r\n              <Footer />\r\n            </div>\r\n        }\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\nexport default App;","F:\\Toms\\Business-work\\Boogalu\\src\\Providers\\StateProvider.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Footer\\index.js",["105"],"import React from 'react';\r\nimport boogaluLogo from '../../Images/Boogalu-logo.svg';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div>\r\n            <footer className=\"flex-container-VC\">\r\n                <div className=\"flex-1 copyright-wrap\">\r\n                    <div className=\"footer-logo-wrap\">\r\n                        <img src={boogaluLogo} alt=\"Logo\" className=\"image-7\" />\r\n                    </div>\r\n                    <div className=\"copyright-inner\">\r\n                        &#169; 2021 &nbsp;  \r\n                        <a href=\"https://www.choreoculture.com/\" target=\"_blank\">\r\n                            CHOREOCULTURE STUDIO.\r\n                        </a>\r\n                        <div>ALL RIGHTS RESERVED.</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex-1\">\r\n                    <div className=\"footer-tagline\" >Get the latest dance content &amp; ChoreoCulture news</div>\r\n                    <div className=\"email-input-inner\">\r\n                        <input type=\"email\" placeholder=\"Email\" />\r\n                    </div>\r\n                    <button className=\"subscribe\" >Subscribe</button>\r\n                </div>\r\n                <div className=\"footer-menus flex-1\">\r\n                    <ul className=\"menu-lists flex-1\">\r\n                        <li>Blog</li>\r\n                        <li>Careers</li>\r\n                        <li>Support</li>\r\n                        <li>Terms</li>\r\n                    </ul>\r\n                    <ul className=\"menu-lists menu-lists-2 flex-1\">\r\n                        <li>Instagram</li>\r\n                        <li>Twitter</li>\r\n                        <li>Youtube</li>\r\n                        <li>Facebook</li>\r\n                    </ul>\r\n                </div>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Login\\Login.js",["106","107","108","109","110","111","112","113","114","115","116","117","118","119"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStoreConsumer } from '../../Providers/StateProvider';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport ArrowRightSharpIcon from '@material-ui/icons/ArrowRightSharp';\r\nimport bgImg from '../../Images/bg1.svg';\r\nimport { loginUser, signupUser } from '../../Actions/User/index'\r\nimport * as $ from 'jquery';\r\n\r\nexport default function Login() {\r\n    const { state, dispatch } = useStoreConsumer();\r\n    const history = useHistory();\r\n    const [loginCred, setloginCred] = useState({ username: \"\", password: \"\", showPassWord: false })\r\n    const [LoginError, setLoginError] = useState(null);\r\n    const [thirdPartyResponse, setThirdPartyResponse] = useState({ isLogginSuccess: false, data: null, source: '' })\r\n\r\n    useEffect(() => {\r\n        if (thirdPartyResponse.source == 'Facebook') signinUser('', 'Facebook');\r\n        if (thirdPartyResponse.source == 'Google') signinUser('', 'Google');\r\n    }, [thirdPartyResponse]);\r\n\r\n    useEffect(() => {\r\n        $('html,body').animate({\r\n            scrollTop: 0\r\n        }, 500);\r\n    }, [])\r\n\r\n    const setLoginResponseToServer = () => {\r\n        // notify server that user is loggedin\r\n        console.log('Saved to db')\r\n\r\n    }\r\n    const successResponseGoogle = function (response) {\r\n        let loginResponse = {\r\n            data: {\r\n                name: response.profileObj.name,\r\n                email: response.profileObj.email,\r\n                token: response.googleId,\r\n                profileImage: response.profileObj.imageUrl,\r\n            },\r\n            source: 'Google'\r\n        }\r\n        setThirdPartyResponse(loginResponse);\r\n    }\r\n\r\n    const failureResponseGoogle = function (response) {\r\n        if (response.error != \"idpiframe_initialization_failed\") {\r\n            setLoginError('Sorry there was a problem with your google login request.')\r\n        }\r\n    }\r\n\r\n    const responseFacebook = (response) => {\r\n        console.log(response);\r\n        if (response && response.userID) {\r\n            let loginResponse = {\r\n                isLogginSuccess: true,\r\n                data: response,\r\n                source: 'Facebook'\r\n            }\r\n            setThirdPartyResponse(loginResponse);\r\n        } else {\r\n            setLoginError('Sorry there was a problem with your facebook login request.')\r\n            console.log(\"facebook login error\", response);\r\n        }\r\n    }\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setLoginError(null);\r\n        setloginCred({ ...loginCred, [prop]: event.target.value });\r\n    };\r\n\r\n    const showPassword = () => {\r\n        setloginCred({ ...loginCred, showPassWord: (loginCred.showPassWord ? false : true) })\r\n    }\r\n\r\n    const getUserLoginData = (userData) => {\r\n        return new Promise((res, rej) => {\r\n            let registeredUser = localStorage.getItem('users') ? JSON.parse(localStorage.getItem('users')) : [];\r\n            if (registeredUser && registeredUser.length != 0) {\r\n                let isRegisteredUser = registeredUser.filter((user) => (user.username == userData.username || user.email == userData.email || user.phone == userData.phone || user.name == userData.name) && (thirdPartyResponse.data ? user.password == userData.password : true));\r\n                if (isRegisteredUser.length) {\r\n                    res(isRegisteredUser[0]);\r\n                } else {\r\n                    if (!thirdPartyResponse.source) {\r\n                        setLoginError('Please enter correct credentials.')\r\n                        rej();\r\n                    } else {\r\n                        setLoginError('Please enter correct credentials.')\r\n                        rej({ ...userData, isRegistered: false });\r\n                    }\r\n                }\r\n            } else {\r\n                rej({ ...userData, isRegistered: false });\r\n            }\r\n        })\r\n    }\r\n    const signinUser = (e, status) => {\r\n        setLoginError(null);\r\n        let userData = {};\r\n        switch (status) {\r\n            case 'cred':\r\n                setThirdPartyResponse({ isLogginSuccess: false, data: null, source: '' })\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                userData = {\r\n                    ...loginCred,\r\n                    phone: loginCred.username,\r\n                    email: loginCred.username,\r\n                }\r\n                getUserLoginData(userData)\r\n                    .then((data) => {\r\n                        //user is registered\r\n                        //set to db \r\n                        setLoginResponseToServer();\r\n                        data.source = 'Website';\r\n                        dispatch(loginUser(data));\r\n                        history.push('/')\r\n                    })\r\n                    .catch((data) => {\r\n                        if (data) {\r\n                            //user not registered\r\n                            history.push({\r\n                                pathname: '/register',\r\n                                state: data\r\n                            })\r\n                        }\r\n                    })\r\n                break;\r\n            case 'Google': case 'Facebook':\r\n                userData = {\r\n                    name: thirdPartyResponse.data.name,\r\n                    email: thirdPartyResponse.data.email,\r\n                }\r\n                getUserLoginData(userData)\r\n                    .then((data) => {\r\n                        //user is registered\r\n                        //set to db \r\n                        setLoginResponseToServer();\r\n                        data.source = thirdPartyResponse.source;\r\n                        dispatch(loginUser(data));\r\n                        history.push('/')\r\n                    })\r\n                    .catch((data) => {\r\n                        if (data) {\r\n                            data.source = thirdPartyResponse.source;\r\n                            //user not registered\r\n                            history.push({\r\n                                pathname: '/register',\r\n                                state: data\r\n                            })\r\n                        }\r\n                    })\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-wrap clearfix\">\r\n            <form className=\"form-wrap clearfix\" onSubmit={(e) => signinUser(e, 'cred')}>\r\n                <div className=\"heading-outer\">\r\n                    <div className=\"heading1\">Welcome Back!</div>\r\n                    <div className=\"heading2\">Login to your existant account of Choreoculture.</div>\r\n                </div>\r\n                <div className=\"form-outer clearfix\">\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            id=\"outlined-required-username\"\r\n                            label=\"Username / Email / Phone\"\r\n                            onChange={handleChange('username')}\r\n                            value={loginCred.username}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <FormControl className=\"\" variant=\"outlined\" style={{ width: '100%' }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                required\r\n                                id=\"outlined-adornment-password\"\r\n                                type={loginCred.showPassWord ? 'text' : 'password'}\r\n                                value={loginCred.password}\r\n                                onChange={handleChange('password')}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={showPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {loginCred.showPassWord ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                labelWidth={70}\r\n                            />\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"forgot-password clearfix\">\r\n                        <div>Forgot Password ?</div>\r\n                    </div>\r\n                    {LoginError && <div className=\"login-error\">\r\n                        {LoginError}\r\n                    </div>}\r\n                    <div className=\"submit-btn clearfix\">\r\n                        <Button variant=\"contained\" type=\"submit\" color=\"primary\">Sign In\r\n                         <ArrowRightSharpIcon />\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"or-seprator clearfix\">\r\n                        <span></span>\r\n                        <div>OR</div>\r\n                        <span></span>\r\n                    </div>\r\n                    <div className=\"login-with\">\r\n                        <div className=\"login-with-google\">\r\n                            <GoogleLogin\r\n                                className=\"google-login-btn\"\r\n                                clientId=\"417866547364-mesv7a9cn6bj4n3ge45s8b6hhl1vdam0.apps.googleusercontent.com\"\r\n                                buttonText=\"Login with Google\"\r\n                                onSuccess={successResponseGoogle}\r\n                                onFailure={failureResponseGoogle} >\r\n                            </GoogleLogin>\r\n                        </div>\r\n                        <div className=\"login-with-fb\">\r\n                            <div className=\"login-with-fb\">\r\n                                <FacebookLogin\r\n                                    appId=\"813330422546108\"\r\n                                    autoLoad={false}\r\n                                    fields=\"name,email,picture\"\r\n                                    callback={responseFacebook}\r\n                                    cssClass=\"facebook-login-btn\"\r\n                                    icon={<FacebookIcon />}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"already-login-wrap\">\r\n                        <div className=\"text-wrap\">New to Choreoculture?</div>\r\n                        <Button color=\"primary\" onClick={() => history.push('/register')}>SIGN UP</Button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            <div className=\"img-wrap\">\r\n                <img src={bgImg} />\r\n            </div>\r\n        </div>\r\n    );\r\n}","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Profile\\Profile.js",["120","121","122","123","124","125","126","127","128","129","130"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStoreConsumer } from '../../Providers/StateProvider';\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nimport LoyaltyOutlinedIcon from '@material-ui/icons/LoyaltyOutlined';\r\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\r\nimport CollectionsOutlinedIcon from '@material-ui/icons/CollectionsOutlined';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport * as $ from 'jquery';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: 500,\r\n    },\r\n}));\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\nfunction Profile() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const theme = useTheme();\r\n    const { state, dispatch } = useStoreConsumer();\r\n    const [value, setValue] = useState(0);\r\n    const userDetails = state.loggedInUser;\r\n\r\n    useEffect(() => {\r\n        $('html,body').animate({\r\n            scrollTop: 0\r\n        }, 500);\r\n    }, [])\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = (index) => {\r\n        setValue(index);\r\n    };\r\n\r\n    return (\r\n        <div className=\"profile-outer\">\r\n            <div className=\"profile-details-wrap clearfix\">\r\n                <div className=\"profile-img\">\r\n                    <AccountCircleOutlinedIcon />\r\n                </div>\r\n                <div className=\"profile-details clearfix\">\r\n                    <div className=\"username-wrap clearfix\">\r\n                        <div className=\"username\">\r\n                            {userDetails.username}\r\n                        </div>\r\n                        <div className=\"edit-profile\" onClick={() => history.push('/profile/edit')}>\r\n                            Edit Profile\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"followers-wrap clearfix\">\r\n                        <div className=\"posts\">\r\n                            <span>999</span> Posts\r\n                        </div>\r\n                        <div className=\"followers\">\r\n                            <span>999</span> Followers\r\n                        </div>\r\n                        <div className=\"following\">\r\n                            <span>999</span> Followings\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"bio-wrap\">\r\n                        <div className=\"fullname\">\r\n                            {userDetails.name}\r\n                        </div>\r\n                        {userDetails.bio ? <div className=\"bio\">\r\n                            {userDetails.bio}\r\n                        </div> : <div className=\"bio\">\r\n                                Older dancers (especially from the SoCal dance community) – even if you can appreciate and welcome the ways dance has evolved, you’ll still feel pangs of nostalgia when going through this list.\r\n                        </div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"profile-content-wrap\">\r\n                <div className=\"headers-wrap\">\r\n                    <Tabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        variant=\"fullWidth\"\r\n                        aria-label=\"full width tabs example\"\r\n                    >\r\n                        <Tab label=\"Posts\" icon={<CollectionsOutlinedIcon />} {...a11yProps(0)} />\r\n                        <Tab label=\"Liked\" icon={<FavoriteBorderOutlinedIcon />}{...a11yProps(1)} />\r\n                        <Tab label=\"Tagged\" icon={<LoyaltyOutlinedIcon />} {...a11yProps(2)} />\r\n                    </Tabs>\r\n                    <SwipeableViews\r\n                        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                        index={value}\r\n                        onChangeIndex={handleChangeIndex}>\r\n                        <TabPanel value={value} index={0} dir={theme.direction}>\r\n                            <div className=\"flex-container\" >\r\n                                <div className=\"flex-basis-3\" style={{ marginRight: '30px' }}>\r\n                                    <iframe width=\"281\" height=\"247\" src=\"https://www.youtube.com/embed/p0evLf_humQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n                                </div>\r\n                                <div className=\"flex-basis-3\" style={{ marginRight: '30px' }}>\r\n                                    <iframe width=\"286\" height=\"251\" src=\"https://www.youtube.com/embed/3nFAkBYrrJw\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n                                </div>\r\n                                <div className=\"flex-basis-3\" style={{ marginRight: '30px' }}>\r\n                                    <iframe width=\"286\" height=\"251\" src=\"https://www.youtube.com/embed/f9dBgfEoqD4\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n                                </div>\r\n                            </div>\r\n                        </TabPanel>\r\n                        <TabPanel value={value} index={1} dir={theme.direction}>\r\n                            <div className=\"flex-container\" >\r\n                                <div className=\"flex-basis-3\" style={{ marginRight: '30px' }}>\r\n                                    <iframe width=\"281\" height=\"247\" src=\"https://www.youtube.com/embed/p0evLf_humQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n                                </div>\r\n                                <div className=\"flex-basis-3\" style={{ marginRight: '30px' }}>\r\n                                    <iframe width=\"286\" height=\"251\" src=\"https://www.youtube.com/embed/3nFAkBYrrJw\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n                                </div>\r\n                                <div className=\"flex-basis-3\" style={{ marginRight: '30px' }}>\r\n                                    <iframe width=\"286\" height=\"251\" src=\"https://www.youtube.com/embed/f9dBgfEoqD4\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n                                </div>\r\n                            </div>\r\n                        </TabPanel>\r\n                        <TabPanel value={value} index={2} dir={theme.direction}>\r\n                            <div className=\"flex-container\" >\r\n                                <div className=\"flex-basis-3\" style={{ marginRight: '30px' }}>\r\n                                    <iframe width=\"281\" height=\"247\" src=\"https://www.youtube.com/embed/p0evLf_humQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n                                </div>\r\n                                <div className=\"flex-basis-3\" style={{ marginRight: '30px' }}>\r\n                                    <iframe width=\"286\" height=\"251\" src=\"https://www.youtube.com/embed/3nFAkBYrrJw\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n                                </div>\r\n                                <div className=\"flex-basis-3\" style={{ marginRight: '30px' }}>\r\n                                    <iframe width=\"286\" height=\"251\" src=\"https://www.youtube.com/embed/f9dBgfEoqD4\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n                                </div>\r\n                            </div>\r\n                        </TabPanel>\r\n                    </SwipeableViews>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\EditProfile\\EditProfile.js",["131","132","133","134","135","136"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStoreConsumer } from '../../Providers/StateProvider';\r\nimport { signupUser } from '../../Actions/User';\r\nimport bgImg from '../../Images/bg1.svg';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport ArrowRightSharpIcon from '@material-ui/icons/ArrowRightSharp';\r\nimport * as $ from 'jquery';\r\n\r\nexport default function EditProfile() {\r\n    const { state, dispatch } = useStoreConsumer();\r\n    const history = useHistory();\r\n    let loggedInUser = state.loggedInUser;\r\n    // if user already login then redirect to home\r\n    // if (loggedInUser.name && loggedInUser.phone && loggedInUser.email && loggedInUser.username) history.push({\r\n    //     pathname: '/',\r\n    //     state: null\r\n    // })\r\n    // get data from history props if redirected through google or facebook login\r\n    if (history.location.state && (history.location.state.source == 'Facebook' || history.location.state.source == 'Google')) {\r\n        loggedInUser.email = history.location.state.email;\r\n        loggedInUser.name = history.location.state.name;\r\n        // setNeedToRegisterError('You are not registered yet, Please register with Choreoculture.')\r\n    }\r\n    const [userDetails, setUserDetails] = useState(loggedInUser);\r\n    const [SignUpError, setSignUpError] = useState(null);\r\n    const [showHidePassword, setShowHidePassword] = useState({ showPassword: false, showConfirmPassword: false });\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setUserDetails({ ...userDetails, [prop]: event.target.value });\r\n        console.log(userDetails)\r\n    };\r\n\r\n    const handleClickShowPassword = (prop) => {\r\n        setShowHidePassword({ ...showHidePassword, [prop]: !showHidePassword[prop] });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    useEffect(() => {\r\n        $('html,body').animate({\r\n            scrollTop: 0\r\n        }, 500);\r\n    }, [])\r\n\r\n    const registerUser = () => {\r\n        return new Promise((res, rej) => {\r\n            let registeredUser = localStorage.getItem('users') ? JSON.parse(localStorage.getItem('users')) : [];\r\n            registeredUser.push(userDetails);\r\n            localStorage.setItem('users', JSON.stringify(registeredUser))\r\n            res();\r\n        })\r\n    }\r\n\r\n    const checkForRepeatedEmailPhone = (param) => {\r\n        if (loggedInUser[param] != userDetails[param]) {\r\n            let registeredUser = localStorage.getItem('users') ? JSON.parse(localStorage.getItem('users')) : [];\r\n            if (registeredUser && registeredUser.length != 0) {\r\n                let isRegisteredUser = registeredUser.filter((user) => (user[param] == userDetails[param]));\r\n                if (isRegisteredUser.length) {\r\n                    setSignUpError(param + ' already registered.');\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            } else {\r\n                return true;\r\n            }\r\n        } else return true;\r\n    }\r\n\r\n    const setSignupUserCred = (e) => {\r\n        if (userDetails.password != userDetails.confirmPassword) {\r\n            setSignUpError('Password dose not match.');\r\n            return;\r\n        }\r\n\r\n        if (checkForRepeatedEmailPhone('email') && checkForRepeatedEmailPhone('phone')) {\r\n            registerUser()\r\n                .then(() => {\r\n                    dispatch(signupUser(userDetails));\r\n                    history.push(({\r\n                        pathname: '/profile',\r\n                        state: null\r\n                    }));\r\n                })\r\n                .catch((error) => {\r\n                    // error in user registration\r\n                    if (error) {\r\n\r\n                    }\r\n                })\r\n        }\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        <div className=\"logout-wrap clearfix\">\r\n            <form className=\"form-wrap clearfix\" onSubmit={setSignupUserCred}>\r\n                <div className=\"heading-outer\">\r\n                    <div className=\"heading1\">Update Profile</div>\r\n                </div>\r\n                <div className=\"form-outer clearfix\">\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            id=\"outlined-required-Name\"\r\n                            label=\"Name\"\r\n                            onChange={handleChange('name')}\r\n                            value={userDetails.name}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            id=\"outlined-required-Username\"\r\n                            label=\"Username\"\r\n                            onChange={handleChange('username')}\r\n                            value={userDetails.username}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            type=\"tel\"\r\n                            id=\"outlined-required-phone\"\r\n                            label=\"Phone\"\r\n                            onChange={handleChange('phone')}\r\n                            value={userDetails.phone}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            id=\"outlined-required-email\"\r\n                            label=\"Email\"\r\n                            type=\"email\"\r\n                            onChange={handleChange('email')}\r\n                            value={userDetails.email}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            id=\"outlined-required-country\"\r\n                            label=\"Country\"\r\n                            onChange={handleChange('country')}\r\n                            value={userDetails.country}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            id=\"outlined-required-state\"\r\n                            label=\"State\"\r\n                            onChange={handleChange('state')}\r\n                            value={userDetails.state}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <FormControl className=\"\" variant=\"outlined\" style={{ width: '100%' }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                required\r\n                                id=\"outlined-adornment-password\"\r\n                                type={showHidePassword.showPassword ? 'text' : 'password'}\r\n                                value={userDetails.password}\r\n                                onChange={handleChange('password')}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={() => handleClickShowPassword('showPassword')}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {showHidePassword.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                labelWidth={70}\r\n                            />\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <FormControl className=\"\" variant=\"outlined\" style={{ width: '100%' }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-confirm-password\">Confirm Password</InputLabel>\r\n                            <OutlinedInput\r\n                                required\r\n                                id=\"outlined-adornment-confirm-password\"\r\n                                type={showHidePassword.showConfirmPassword ? 'text' : 'password'}\r\n                                value={userDetails.confirmPassword}\r\n                                onChange={handleChange('confirmPassword')}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle confirm password visibility\"\r\n                                            onClick={() => handleClickShowPassword('showConfirmPassword')}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {showHidePassword.showConfirmPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                labelWidth={70}\r\n                            />\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <div className=\"dob-wrap\">\r\n                            <TextField className=\"input-field\"\r\n                                id=\"date\"\r\n                                label=\"Birthday\"\r\n                                type=\"date\"\r\n                                style={{ width: '100%' }}\r\n                                onChange={handleChange('dob')}\r\n                                value={userDetails.dob}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <FormControl variant=\"outlined\" className=\"input-field\">\r\n                            <InputLabel id=\"select-outlined-label\">Gender</InputLabel>\r\n                            <Select\r\n                                labelId=\"select-outlined-label\"\r\n                                id=\"select-outlined\"\r\n                                value={userDetails.gender}\r\n                                onChange={handleChange('gender')}\r\n                                label=\"Gender\"\r\n                            >\r\n                                <MenuItem value=\"Male\">Male</MenuItem>\r\n                                <MenuItem value=\"Female\">Female</MenuItem>\r\n                                <MenuItem value=\"Other\">Other</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"input-wrap\" style={{ width: '93%' }}>\r\n                        <TextField className=\"input-field bio-input\"\r\n                            id=\"outlined-required-bio\"\r\n                            label=\"Bio\"\r\n                            value={userDetails.bio}\r\n                            onChange={handleChange('bio')}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"tnc-wrap\">\r\n                        <div className=\"tnc-content clearfix\">\r\n                            <div className=\"checkbox-wrap\">\r\n                                <Checkbox\r\n                                    required\r\n                                    color=\"primary\"\r\n                                    checked={userDetails.tnc}\r\n                                    onChange={(e) => setUserDetails({ ...userDetails, tnc: e.target.checked })}\r\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"note-wrap\">Yes, I agree to the terms and conditions </div>\r\n                        </div>\r\n                    </div>\r\n                    {SignUpError && <div className=\"login-error\">\r\n                        {SignUpError}\r\n                    </div>}\r\n                    <div className=\"submit-btn clearfix\">\r\n                        <Button variant=\"contained\" type=\"submit\" color=\"primary\" >Update\r\n                         <ArrowRightSharpIcon />\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div className=\"img-wrap\">\r\n                <img src={bgImg} alt=\"bg1\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}","F:\\Toms\\Business-work\\Boogalu\\src\\Services\\LocalstorageCache.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Navigation\\index.js",["137"],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Splash\\index.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Homepage\\index.js",["138","139","140","141"],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Subscription\\index.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Signup\\index.js",["142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStoreConsumer } from '../../Providers/StateProvider';\r\nimport { signupUser } from '../../Actions/User';\r\nimport bgImg from '../../Images/bg1.svg';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport stepListData from '../../Data/RegistrationStepData'\r\nimport ArrowRightSharpIcon from '@material-ui/icons/ArrowRightSharp';\r\nimport * as $ from 'jquery';\r\n\r\nexport default function Signup() {\r\n    const { state, dispatch } = useStoreConsumer();\r\n    const history = useHistory();\r\n    let loggedInUser = state.loggedInUser;\r\n    // if user already login then redirect to home\r\n    if (loggedInUser.name && loggedInUser.phone && loggedInUser.email && loggedInUser.username) history.push({\r\n        pathname: '/',\r\n        state: null\r\n    })\r\n    // get data from history props if redirected through google or facebook login\r\n    if (history.location.state && (history.location.state.source == 'Facebook' || history.location.state.source == 'Google')) {\r\n        loggedInUser.email = history.location.state.email;\r\n        loggedInUser.name = history.location.state.name;\r\n        // setNeedToRegisterError('You are not registered yet, Please register with Choreoculture.')\r\n    }\r\n    const [userDetails, setUserDetails] = useState(loggedInUser);\r\n    const [SignUpError, setSignUpError] = useState(null);\r\n    const [showHidePassword, setShowHidePassword] = useState({ showPassword: false, showConfirmPassword: false });\r\n\r\n    const [activeStep, setActiveStep] = useState('stepOne');\r\n    const [showNextButton, setShowNextButton] = useState(false);\r\n    const [stepData, setStepListData] = useState(stepListData);\r\n    const [selectedOptionsList, setSelectedOptionsList] = useState([]);\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setUserDetails({ ...userDetails, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowPassword = (prop) => {\r\n        setShowHidePassword({ ...showHidePassword, [prop]: !showHidePassword[prop] });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    useEffect(() => {\r\n        $('html,body').animate({\r\n            scrollTop: 0\r\n        }, 500);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (stepData[activeStep]) {\r\n            let isAnySelected = stepData[activeStep].filter((data) => data.isSelected);\r\n            if (isAnySelected.length != 0) setShowNextButton(true);\r\n            else setShowNextButton(false);\r\n            // set selected options\r\n            let selectedOptions = [];\r\n            Object.entries(stepData).map(([parentKey, parentValue]) => {\r\n                parentValue.map((parentValueItem) => {\r\n                    if (parentValueItem.isSelected) {\r\n                        let selectionObj = { value: [parentValueItem.title], key: parentKey, heading: parentValueItem.heading };\r\n                        if (selectedOptions.length != 0) {\r\n                            let isAvl = selectedOptions.filter((data) => data.key == parentKey);\r\n                            if (isAvl.length != 0) {\r\n                                selectedOptions.map((item) => {\r\n                                    if (item.key == parentKey) item.value.push(parentValueItem.title);\r\n                                })\r\n                            } else selectedOptions.push(selectionObj);\r\n                        } else selectedOptions.push(selectionObj);\r\n                    }\r\n                })\r\n            })\r\n            setSelectedOptionsList(selectedOptions);\r\n        }\r\n    }, [activeStep])\r\n\r\n    const registerUser = () => {\r\n        return new Promise((res, rej) => {\r\n            let registeredUser = localStorage.getItem('users') ? JSON.parse(localStorage.getItem('users')) : [];\r\n            registeredUser.push(userDetails);\r\n            localStorage.setItem('users', JSON.stringify(registeredUser))\r\n            res();\r\n        })\r\n    }\r\n\r\n    const checkForRepeatedEmailPhone = (param) => {\r\n        let registeredUser = localStorage.getItem('users') ? JSON.parse(localStorage.getItem('users')) : [];\r\n        if (registeredUser && registeredUser.length != 0) {\r\n            let isRegisteredUser = registeredUser.filter((user) => (user[param] == userDetails[param]));\r\n            if (isRegisteredUser.length) {\r\n                setSignUpError(param + ' already registered.');\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const setSignupUserCred = (e) => {\r\n        if (userDetails.password != userDetails.confirmPassword) {\r\n            setSignUpError('Password dose not match.');\r\n            return;\r\n        }\r\n\r\n        if (checkForRepeatedEmailPhone('email') && checkForRepeatedEmailPhone('phone')) {\r\n            registerUser()\r\n                .then(() => {\r\n                    dispatch(signupUser(userDetails));\r\n                    history.push(({\r\n                        pathname: '/',\r\n                        state: null\r\n                    }));\r\n                })\r\n                .catch((error) => {\r\n                    // error in user registration\r\n                    if (error) {\r\n\r\n                    }\r\n                })\r\n        }\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    const setNextStep = () => {\r\n        switch (activeStep) {\r\n            case 'stepOne': setActiveStep('stepTwo'); break;\r\n            case 'stepTwo': setActiveStep('stepThree'); break;\r\n            case 'stepThree': setActiveStep('stepFour'); break;\r\n            case 'stepFour': setActiveStep('stepFive'); break;\r\n            case 'stepFive': setActiveStep(6); break;\r\n        }\r\n    }\r\n\r\n    const setPrevStep = () => {\r\n        switch (activeStep) {\r\n            case 'stepTwo': setActiveStep('stepOne'); break;\r\n            case 'stepThree': setActiveStep('stepTwo'); break;\r\n            case 'stepFour': setActiveStep('stepThree'); break;\r\n            case 'stepFive': setActiveStep('stepFour'); break;\r\n            case 6: setActiveStep('stepFive'); break;\r\n        }\r\n    }\r\n\r\n    const setStepListItemData = (e, activeItem, status) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const stepDataList = Object.assign({}, stepData);\r\n        stepDataList[activeStep].map((item) => {\r\n            if (item.title == activeItem.title) {\r\n                item.isSelected = item.isSelected ? false : true;\r\n            } else {\r\n                if (status != 'multi-select') {\r\n                    item.isSelected = false;\r\n                }\r\n            }\r\n        })\r\n        // set selected options\r\n        let selectedOptions = [];\r\n        Object.entries(stepDataList).map(([parentKey, parentValue]) => {\r\n            parentValue.map((parentValueItem) => {\r\n                if (parentValueItem.isSelected) {\r\n                    let selectionObj = { value: [parentValueItem.title], key: parentKey, heading: parentValueItem.heading };\r\n                    if (selectedOptions.length != 0) {\r\n                        let isAvl = selectedOptions.filter((data) => data.key == parentKey);\r\n                        if (isAvl.length != 0) {\r\n                            selectedOptions.map((item) => {\r\n                                if (item.key == parentKey) item.value.push(parentValueItem.title);\r\n                            })\r\n                        } else selectedOptions.push(selectionObj);\r\n                    } else selectedOptions.push(selectionObj);\r\n                }\r\n            })\r\n        })\r\n        setSelectedOptionsList(selectedOptions);\r\n        let isAnySelected = stepDataList[activeStep].filter((data) => data.isSelected);\r\n        if (isAnySelected.length != 0) setShowNextButton(true);\r\n        else setShowNextButton(false);\r\n        setStepListData(stepDataList);\r\n    }\r\n\r\n    return (\r\n        <div className=\"logout-wrap clearfix\">\r\n            {activeStep != 6 && <div className=\"step-wrap\">\r\n                <div className=\"heading1\">Let's Get Started!</div>\r\n                {activeStep == 'stepOne' && <>\r\n                    <div className=\"list-content\">\r\n                        <div className=\"list-heading-wrap\">\r\n                            <div className=\"heading2\">What’s your experience with dancing?</div>\r\n                            <div className=\"heading3\">Select One Option</div>\r\n                        </div>\r\n                        <div className=\"list\">\r\n                            {stepData.stepOne.map((item, i) => {\r\n                                return (\r\n                                    <div key={i} className={item.isSelected ? 'list-item selected-item' : 'list-item'} onClick={(e) => setStepListItemData(e, item)}>\r\n                                        <div className=\"title\">{item.title}</div>\r\n                                        <div className=\"desc\">{item.desc}</div>\r\n                                        <Checkbox\r\n                                            required\r\n                                            color=\"primary\"\r\n                                            className=\"selected-item-checkbox\"\r\n                                            checked={item.isSelected}\r\n                                            onChange={(e) => setStepListItemData(e, item)}\r\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </>}\r\n                {activeStep == 'stepTwo' && <>\r\n                    <div className=\"list-content\">\r\n                        <div className=\"list-heading-wrap\">\r\n                            <div className=\"heading2\">What is your first goal that you want to work on?</div>\r\n                            <div className=\"heading3\">Select One Option</div>\r\n                        </div>\r\n                        <div className=\"list\">\r\n                            {stepData.stepTwo.map((item, i) => {\r\n                                return (\r\n                                    <div key={i} className={item.isSelected ? 'list-item selected-item' : 'list-item'} onClick={(e) => setStepListItemData(e, item)}>\r\n                                        <div className=\"title\">{item.title}</div>\r\n                                        <div className=\"desc\">{item.desc}</div>\r\n                                        <Checkbox\r\n                                            required\r\n                                            color=\"primary\"\r\n                                            className=\"selected-item-checkbox\"\r\n                                            checked={item.isSelected}\r\n                                            onChange={(e) => setStepListItemData(e, item)}\r\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </>}\r\n                {activeStep == 'stepThree' && <>\r\n                    <div className=\"list-content\">\r\n                        <div className=\"list-heading-wrap\">\r\n                            <div className=\"heading2\">What are you interested in?</div>\r\n                            <div className=\"heading3\">Select all that apply</div>\r\n                        </div>\r\n                        <div className=\"list\">\r\n                            {stepData.stepThree.map((item, i) => {\r\n                                return (\r\n                                    <div key={i} className={item.isSelected ? 'list-item selected-item' : 'list-item'} onClick={(e) => setStepListItemData(e, item, 'multi-select')}>\r\n                                        <div className=\"title\">{item.title}</div>\r\n                                        <div className=\"desc\" style={{ paddingRight: '25px' }}>{item.desc}</div>\r\n                                        <Checkbox\r\n                                            required\r\n                                            color=\"primary\"\r\n                                            className=\"selected-item-checkbox\"\r\n                                            checked={item.isSelected}\r\n                                            onChange={(e) => setStepListItemData(e, item, 'multi-select')}\r\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </>}\r\n                {activeStep == 'stepFour' && <>\r\n                    <div className=\"list-content\">\r\n                        <div className=\"list-heading-wrap\">\r\n                            <div className=\"heading2\">How long would you like your dance sessions to be?</div>\r\n                            <div className=\"heading3\">Select One Option</div>\r\n                        </div>\r\n                        <div className=\"list\">\r\n                            {stepData.stepFour.map((item, i) => {\r\n                                return (\r\n                                    <div key={i} className={item.isSelected ? 'list-item selected-item' : 'list-item'} onClick={(e) => setStepListItemData(e, item)}>\r\n                                        <div className=\"title\">{item.title}</div>\r\n                                        <div className=\"desc\">{item.desc}</div>\r\n                                        <Checkbox\r\n                                            required\r\n                                            color=\"primary\"\r\n                                            className=\"selected-item-checkbox\"\r\n                                            checked={item.isSelected}\r\n                                            onChange={(e) => setStepListItemData(e, item)}\r\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </>}\r\n                {activeStep == 'stepFive' && <>\r\n                    <div className=\"list-content\">\r\n                        <div className=\"list-heading-wrap\">\r\n                            <div style={{ paddingBottom: 0 }} className=\"heading2\">Your Personal Schedule & Recommendations</div>\r\n                        </div>\r\n                        <div className=\"list\">\r\n                            {selectedOptionsList.map((item, i) => {\r\n                                return (\r\n                                    <div key={i} className=\"list-item selected-item\" onClick={() => setActiveStep(item.key)}>\r\n                                        <div className=\"title\">{item.heading}</div>\r\n                                        <div className=\"desc\">\r\n                                            {item.value.length == 1 &&\r\n                                                item.value.map((listValue, j) => {\r\n                                                    return <span key={j}>{listValue} </span>\r\n                                                })\r\n                                            }\r\n                                            {item.value.length != 1 &&\r\n                                                item.value.map((listValue, j) => {\r\n                                                    return <span key={j}>{listValue}, </span>\r\n                                                })\r\n                                            }\r\n\r\n                                        </div>\r\n                                        {/* <Checkbox\r\n                                            required\r\n                                            color=\"primary\"\r\n                                            className=\"selected-item-checkbox\"\r\n                                            checked={true}\r\n                                            disabled={true}\r\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                        /> */}\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </>}\r\n                {activeStep != 6 && <div className=\"step-already-login-wrap clearfix\">\r\n                    <div className=\"text-wrap\">Already have an account?</div>\r\n                    <Button color=\"primary\" onClick={() => history.push({\r\n                        pathname: '/login',\r\n                        state: null\r\n                    })}>SIGN IN</Button>\r\n                    {showNextButton && <Button color=\"primary\" variant=\"contained\" className=\"next-btn\" onClick={() => setNextStep()}>Next</Button>}\r\n                    {activeStep != 'stepOne' && <Button style={{ marginRight: '25px' }} color=\"primary\" variant=\"contained\" className=\"next-btn\" onClick={() => setPrevStep()}>Prev</Button>}\r\n                </div>}\r\n            </div>}\r\n            {activeStep == 6 && <form className=\"form-wrap clearfix\" onSubmit={setSignupUserCred}>\r\n                <div className=\"heading-outer\">\r\n                    <div className=\"heading1\">Let's Get Started!</div>\r\n                    <div className=\"heading2\">Create an account to Choreoculture to get all features.</div>\r\n                </div>\r\n                {/* {NeedToRegisterError && <div className=\"login-error\">\r\n                    {NeedToRegisterError}\r\n                </div>} */}\r\n                <div className=\"form-outer clearfix\">\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            id=\"outlined-required-Name\"\r\n                            label=\"Name\"\r\n                            onChange={handleChange('name')}\r\n                            value={userDetails.name}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            id=\"outlined-required-Username\"\r\n                            label=\"Username\"\r\n                            onChange={handleChange('username')}\r\n                            value={userDetails.username}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            type=\"tel\"\r\n                            id=\"outlined-required-phone\"\r\n                            label=\"Phone\"\r\n                            onChange={handleChange('phone')}\r\n                            value={userDetails.phone}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            id=\"outlined-required-email\"\r\n                            label=\"Email\"\r\n                            type=\"email\"\r\n                            onChange={handleChange('email')}\r\n                            value={userDetails.email}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            id=\"outlined-required-country\"\r\n                            label=\"Country\"\r\n                            onChange={handleChange('country')}\r\n                            value={userDetails.country}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <TextField className=\"input-field\"\r\n                            required\r\n                            id=\"outlined-required-state\"\r\n                            label=\"State\"\r\n                            onChange={handleChange('state')}\r\n                            value={userDetails.state}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <FormControl className=\"\" variant=\"outlined\" style={{ width: '100%' }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                required\r\n                                id=\"outlined-adornment-password\"\r\n                                type={showHidePassword.showPassword ? 'text' : 'password'}\r\n                                value={userDetails.password}\r\n                                onChange={handleChange('password')}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={() => handleClickShowPassword('showPassword')}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {showHidePassword.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                labelWidth={70}\r\n                            />\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <FormControl className=\"\" variant=\"outlined\" style={{ width: '100%' }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-confirm-password\">Confirm Password</InputLabel>\r\n                            <OutlinedInput\r\n                                required\r\n                                id=\"outlined-adornment-confirm-password\"\r\n                                type={showHidePassword.showConfirmPassword ? 'text' : 'password'}\r\n                                value={userDetails.confirmPassword}\r\n                                onChange={handleChange('confirmPassword')}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle confirm password visibility\"\r\n                                            onClick={() => handleClickShowPassword('showConfirmPassword')}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {showHidePassword.showConfirmPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                labelWidth={70}\r\n                            />\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <div className=\"dob-wrap\">\r\n                            <TextField className=\"input-field\"\r\n                                id=\"date\"\r\n                                label=\"Birthday\"\r\n                                type=\"date\"\r\n                                style={{ width: '100%' }}\r\n                                onChange={handleChange('dob')}\r\n                                value={userDetails.dob}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"input-wrap\">\r\n                        <FormControl variant=\"outlined\" className=\"input-field\">\r\n                            <InputLabel id=\"select-outlined-label\">Gender</InputLabel>\r\n                            <Select\r\n                                labelId=\"select-outlined-label\"\r\n                                id=\"select-outlined\"\r\n                                value={userDetails.gender}\r\n                                onChange={handleChange('gender')}\r\n                                label=\"Gender\"\r\n                            >\r\n                                <MenuItem value=\"Male\">Male</MenuItem>\r\n                                <MenuItem value=\"Female\">Female</MenuItem>\r\n                                <MenuItem value=\"Other\">Other</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"input-wrap\" style={{ width: '93%' }}>\r\n                        <TextField className=\"input-field bio-input\"\r\n                            id=\"outlined-required-bio\"\r\n                            label=\"Bio\"\r\n                            value={userDetails.bio}\r\n                            onChange={handleChange('bio')}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"tnc-wrap\">\r\n                        <div className=\"tnc-content clearfix\">\r\n                            <div className=\"checkbox-wrap\">\r\n                                <Checkbox\r\n                                    required\r\n                                    color=\"primary\"\r\n                                    checked={userDetails.tnc}\r\n                                    onChange={(e) => setUserDetails({ ...userDetails, tnc: e.target.checked })}\r\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"note-wrap\">Yes, I agree to the terms and conditions </div>\r\n                        </div>\r\n                    </div>\r\n                    {SignUpError && <div className=\"login-error\">\r\n                        {SignUpError}\r\n                    </div>}\r\n                    <div className=\"submit-btn clearfix\">\r\n                        <Button variant=\"contained\" type=\"submit\" color=\"primary\" >Sign Up\r\n                         <ArrowRightSharpIcon />\r\n                        </Button>\r\n                        {activeStep != 'stepOne' && <Button style={{ marginRight: '25px' }} color=\"primary\" variant=\"contained\" className=\"next-btn\" onClick={() => setPrevStep()}>Prev</Button>}\r\n                    </div>\r\n                    <div className=\"already-login-wrap\">\r\n                        <div className=\"text-wrap\">Already have an account?</div>\r\n                        <Button color=\"primary\" onClick={() => history.push({\r\n                            pathname: '/login',\r\n                            state: null\r\n                        })}>SIGN IN</Button>\r\n                    </div>\r\n                </div>\r\n            </form>}\r\n\r\n            <div className=\"img-wrap\">\r\n                <img src={bgImg} alt=\"bg1\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Upcoming\\index.js",["181","182","183"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport LessonsCategories from '../../Data/LessonsCategory';\r\nimport Video from \"../Vedio/Video\";\r\n\r\nfunction Upcoming () {\r\n    const [activeCategory, setActiveCategory] = useState(LessonsCategories[0]);\r\n    return (\r\n        <div className=\"lessons lessons-wrap\" id=\"upcomingLessons\">\r\n            <div className=\"inner-page\">\r\n                <h1>Learn from the Experts</h1>\r\n                <p>\r\n                    Lessons for all users from our expert faculty members.\r\n                    From Hip-Hop to Bharatnatyam. You'll get all learning videos\r\n                    at one place.\r\n                </p>\r\n                <p className=\"launching-soon\">Videos launching soon! Stay connected!</p>\r\n                <p className=\"from-our-expert-title\">Few sample lessons</p>\r\n                <div className=\"lessons-vdo-wrap\">\r\n                    {activeCategory.upcoming.map((item, index) => {\r\n                        return <Video key={'upcoming-'+index} vdoObj={item}></Video>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Upcoming;\r\n","F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Competitions\\index.js",["184"],"F:\\Toms\\Business-work\\Boogalu\\src\\Reducers\\index.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Actions\\User\\index.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Data\\LessonsCategory.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\Vedio\\Video.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Data\\RegistrationStepData.js",[],"F:\\Toms\\Business-work\\Boogalu\\src\\Components\\CompetitionsDetails\\index.js",["185","186","187","188"],"F:\\Toms\\Business-work\\Boogalu\\src\\Constants\\index.js",[],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":2,"column":50,"nodeType":"195","messageId":"196","endLine":2,"endColumn":54},{"ruleId":"197","severity":1,"message":"198","line":14,"column":66,"nodeType":"199","endLine":14,"endColumn":81},{"ruleId":"193","severity":1,"message":"200","line":18,"column":21,"nodeType":"195","messageId":"196","endLine":18,"endColumn":31},{"ruleId":"193","severity":1,"message":"201","line":22,"column":13,"nodeType":"195","messageId":"196","endLine":22,"endColumn":18},{"ruleId":"202","severity":1,"message":"203","line":29,"column":39,"nodeType":"204","messageId":"205","endLine":29,"endColumn":41},{"ruleId":"202","severity":1,"message":"203","line":30,"column":39,"nodeType":"204","messageId":"205","endLine":30,"endColumn":41},{"ruleId":"206","severity":1,"message":"207","line":31,"column":8,"nodeType":"208","endLine":31,"endColumn":28,"suggestions":"209"},{"ruleId":"202","severity":1,"message":"210","line":58,"column":28,"nodeType":"204","messageId":"205","endLine":58,"endColumn":30},{"ruleId":"202","severity":1,"message":"210","line":94,"column":57,"nodeType":"204","messageId":"205","endLine":94,"endColumn":59},{"ruleId":"202","severity":1,"message":"203","line":95,"column":87,"nodeType":"204","messageId":"205","endLine":95,"endColumn":89},{"ruleId":"202","severity":1,"message":"203","line":95,"column":122,"nodeType":"204","messageId":"205","endLine":95,"endColumn":124},{"ruleId":"202","severity":1,"message":"203","line":95,"column":154,"nodeType":"204","messageId":"205","endLine":95,"endColumn":156},{"ruleId":"202","severity":1,"message":"203","line":95,"column":185,"nodeType":"204","messageId":"205","endLine":95,"endColumn":187},{"ruleId":"202","severity":1,"message":"203","line":95,"column":247,"nodeType":"204","messageId":"205","endLine":95,"endColumn":249},{"ruleId":"211","severity":1,"message":"212","line":115,"column":9,"nodeType":"213","messageId":"214","endLine":169,"endColumn":10},{"ruleId":"215","severity":1,"message":"216","line":262,"column":17,"nodeType":"217","endLine":262,"endColumn":36},{"ruleId":"193","severity":1,"message":"218","line":57,"column":11,"nodeType":"195","messageId":"196","endLine":57,"endColumn":18},{"ruleId":"193","severity":1,"message":"219","line":60,"column":20,"nodeType":"195","messageId":"196","endLine":60,"endColumn":28},{"ruleId":"220","severity":1,"message":"221","line":137,"column":37,"nodeType":"217","endLine":137,"endColumn":247},{"ruleId":"220","severity":1,"message":"221","line":140,"column":37,"nodeType":"217","endLine":140,"endColumn":247},{"ruleId":"220","severity":1,"message":"221","line":143,"column":37,"nodeType":"217","endLine":143,"endColumn":247},{"ruleId":"220","severity":1,"message":"221","line":150,"column":37,"nodeType":"217","endLine":150,"endColumn":247},{"ruleId":"220","severity":1,"message":"221","line":153,"column":37,"nodeType":"217","endLine":153,"endColumn":247},{"ruleId":"220","severity":1,"message":"221","line":156,"column":37,"nodeType":"217","endLine":156,"endColumn":247},{"ruleId":"220","severity":1,"message":"221","line":163,"column":37,"nodeType":"217","endLine":163,"endColumn":247},{"ruleId":"220","severity":1,"message":"221","line":166,"column":37,"nodeType":"217","endLine":166,"endColumn":247},{"ruleId":"220","severity":1,"message":"221","line":169,"column":37,"nodeType":"217","endLine":169,"endColumn":247},{"ruleId":"202","severity":1,"message":"203","line":31,"column":66,"nodeType":"204","messageId":"205","endLine":31,"endColumn":68},{"ruleId":"202","severity":1,"message":"203","line":31,"column":113,"nodeType":"204","messageId":"205","endLine":31,"endColumn":115},{"ruleId":"202","severity":1,"message":"210","line":69,"column":33,"nodeType":"204","messageId":"205","endLine":69,"endColumn":35},{"ruleId":"202","severity":1,"message":"210","line":71,"column":57,"nodeType":"204","messageId":"205","endLine":71,"endColumn":59},{"ruleId":"202","severity":1,"message":"203","line":72,"column":85,"nodeType":"204","messageId":"205","endLine":72,"endColumn":87},{"ruleId":"202","severity":1,"message":"210","line":86,"column":34,"nodeType":"204","messageId":"205","endLine":86,"endColumn":36},{"ruleId":"206","severity":1,"message":"222","line":70,"column":8,"nodeType":"208","endLine":70,"endColumn":18,"suggestions":"223"},{"ruleId":"193","severity":1,"message":"219","line":8,"column":20,"nodeType":"195","messageId":"196","endLine":8,"endColumn":28},{"ruleId":"220","severity":1,"message":"221","line":23,"column":25,"nodeType":"217","endLine":23,"endColumn":223},{"ruleId":"220","severity":1,"message":"221","line":26,"column":25,"nodeType":"217","endLine":26,"endColumn":223},{"ruleId":"220","severity":1,"message":"221","line":29,"column":25,"nodeType":"217","endLine":29,"endColumn":223},{"ruleId":"202","severity":1,"message":"203","line":32,"column":66,"nodeType":"204","messageId":"205","endLine":32,"endColumn":68},{"ruleId":"202","severity":1,"message":"203","line":32,"column":113,"nodeType":"204","messageId":"205","endLine":32,"endColumn":115},{"ruleId":"202","severity":1,"message":"210","line":67,"column":38,"nodeType":"204","messageId":"205","endLine":67,"endColumn":40},{"ruleId":"224","severity":1,"message":"225","line":71,"column":69,"nodeType":"226","messageId":"227","endLine":71,"endColumn":71},{"ruleId":"224","severity":1,"message":"225","line":72,"column":51,"nodeType":"226","messageId":"227","endLine":72,"endColumn":53},{"ruleId":"202","severity":1,"message":"210","line":75,"column":52,"nodeType":"204","messageId":"205","endLine":75,"endColumn":54},{"ruleId":"202","severity":1,"message":"203","line":76,"column":83,"nodeType":"204","messageId":"205","endLine":76,"endColumn":85},{"ruleId":"202","severity":1,"message":"210","line":77,"column":46,"nodeType":"204","messageId":"205","endLine":77,"endColumn":48},{"ruleId":"224","severity":1,"message":"225","line":78,"column":60,"nodeType":"226","messageId":"227","endLine":78,"endColumn":62},{"ruleId":"202","severity":1,"message":"203","line":79,"column":50,"nodeType":"204","messageId":"205","endLine":79,"endColumn":52},{"ruleId":"206","severity":1,"message":"228","line":88,"column":8,"nodeType":"208","endLine":88,"endColumn":20,"suggestions":"229"},{"ruleId":"202","severity":1,"message":"210","line":101,"column":53,"nodeType":"204","messageId":"205","endLine":101,"endColumn":55},{"ruleId":"202","severity":1,"message":"203","line":102,"column":81,"nodeType":"204","messageId":"205","endLine":102,"endColumn":83},{"ruleId":"202","severity":1,"message":"210","line":115,"column":34,"nodeType":"204","messageId":"205","endLine":115,"endColumn":36},{"ruleId":"211","severity":1,"message":"212","line":141,"column":9,"nodeType":"213","messageId":"214","endLine":147,"endColumn":10},{"ruleId":"211","severity":1,"message":"212","line":151,"column":9,"nodeType":"213","messageId":"214","endLine":157,"endColumn":10},{"ruleId":"224","severity":1,"message":"225","line":164,"column":45,"nodeType":"226","messageId":"227","endLine":164,"endColumn":47},{"ruleId":"202","severity":1,"message":"203","line":165,"column":28,"nodeType":"204","messageId":"205","endLine":165,"endColumn":30},{"ruleId":"202","severity":1,"message":"210","line":168,"column":28,"nodeType":"204","messageId":"205","endLine":168,"endColumn":30},{"ruleId":"224","severity":1,"message":"225","line":175,"column":69,"nodeType":"226","messageId":"227","endLine":175,"endColumn":71},{"ruleId":"224","severity":1,"message":"225","line":176,"column":47,"nodeType":"226","messageId":"227","endLine":176,"endColumn":49},{"ruleId":"202","severity":1,"message":"210","line":179,"column":48,"nodeType":"204","messageId":"205","endLine":179,"endColumn":50},{"ruleId":"202","severity":1,"message":"203","line":180,"column":79,"nodeType":"204","messageId":"205","endLine":180,"endColumn":81},{"ruleId":"202","severity":1,"message":"210","line":181,"column":42,"nodeType":"204","messageId":"205","endLine":181,"endColumn":44},{"ruleId":"224","severity":1,"message":"225","line":182,"column":56,"nodeType":"226","messageId":"227","endLine":182,"endColumn":58},{"ruleId":"202","severity":1,"message":"203","line":183,"column":46,"nodeType":"204","messageId":"205","endLine":183,"endColumn":48},{"ruleId":"202","severity":1,"message":"210","line":192,"column":34,"nodeType":"204","messageId":"205","endLine":192,"endColumn":36},{"ruleId":"202","severity":1,"message":"210","line":199,"column":25,"nodeType":"204","messageId":"205","endLine":199,"endColumn":27},{"ruleId":"202","severity":1,"message":"203","line":201,"column":29,"nodeType":"204","messageId":"205","endLine":201,"endColumn":31},{"ruleId":"202","severity":1,"message":"203","line":227,"column":29,"nodeType":"204","messageId":"205","endLine":227,"endColumn":31},{"ruleId":"202","severity":1,"message":"203","line":253,"column":29,"nodeType":"204","messageId":"205","endLine":253,"endColumn":31},{"ruleId":"202","severity":1,"message":"203","line":279,"column":29,"nodeType":"204","messageId":"205","endLine":279,"endColumn":31},{"ruleId":"202","severity":1,"message":"203","line":305,"column":29,"nodeType":"204","messageId":"205","endLine":305,"endColumn":31},{"ruleId":"202","severity":1,"message":"203","line":316,"column":64,"nodeType":"204","messageId":"205","endLine":316,"endColumn":66},{"ruleId":"202","severity":1,"message":"210","line":321,"column":64,"nodeType":"204","messageId":"205","endLine":321,"endColumn":66},{"ruleId":"202","severity":1,"message":"210","line":342,"column":29,"nodeType":"204","messageId":"205","endLine":342,"endColumn":31},{"ruleId":"202","severity":1,"message":"210","line":349,"column":33,"nodeType":"204","messageId":"205","endLine":349,"endColumn":35},{"ruleId":"202","severity":1,"message":"203","line":352,"column":25,"nodeType":"204","messageId":"205","endLine":352,"endColumn":27},{"ruleId":"202","severity":1,"message":"210","line":534,"column":37,"nodeType":"204","messageId":"205","endLine":534,"endColumn":39},{"ruleId":"193","severity":1,"message":"230","line":1,"column":27,"nodeType":"195","messageId":"196","endLine":1,"endColumn":33},{"ruleId":"193","severity":1,"message":"231","line":1,"column":35,"nodeType":"195","messageId":"196","endLine":1,"endColumn":44},{"ruleId":"193","severity":1,"message":"232","line":6,"column":28,"nodeType":"195","messageId":"196","endLine":6,"endColumn":45},{"ruleId":"193","severity":1,"message":"233","line":2,"column":8,"nodeType":"195","messageId":"196","endLine":2,"endColumn":19},{"ruleId":"193","severity":1,"message":"234","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":25},{"ruleId":"193","severity":1,"message":"219","line":12,"column":20,"nodeType":"195","messageId":"196","endLine":12,"endColumn":28},{"ruleId":"235","severity":1,"message":"236","line":42,"column":25,"nodeType":"217","endLine":42,"endColumn":84},{"ruleId":"237","severity":1,"message":"238","line":42,"column":25,"nodeType":"217","endLine":42,"endColumn":84},"no-native-reassign",["239"],"no-negated-in-lhs",["240"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'signupUser' is defined but never used.","'state' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'signinUser'. Either include it or remove the dependency array.","ArrayExpression",["241"],"Expected '!==' and instead saw '!='.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'classes' is assigned a value but never used.","'dispatch' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","React Hook useEffect has a missing dependency: 'history?.location?.pathname'. Either include it or remove the dependency array.",["242"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'stepData'. Either include it or remove the dependency array.",["243"],"'useRef' is defined but never used.","'useEffect' is defined but never used.","'setActiveCategory' is assigned a value but never used.","'boogaluLogo' is defined but never used.","'useState' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},"Update the dependencies array to be: [signinUser, thirdPartyResponse]",{"range":"250","text":"251"},"Update the dependencies array to be: [history?.location?.pathname, isMobile]",{"range":"252","text":"253"},"Update the dependencies array to be: [activeStep, stepData]",{"range":"254","text":"255"},[1648,1668],"[signinUser, thirdPartyResponse]",[2781,2791],"[history?.location?.pathname, isMobile]",[4258,4270],"[activeStep, stepData]"]